{"version":3,"sources":["config.js","components/MyNavBar.js","components/SignUp.js","components/LogIn.js","components/Ranks.js","components/Leaderboard.js","components/About.js","components/MyCarousel.js","components/Home.js","components/ExperienceBar.js","components/MyProfile.js","components/HeroHome.js","components/Dashboard.js","components/EditProfileForm.js","components/ChallengesList.js","components/SocialMedia.js","components/GoalsAndSuccess.js","components/CreateChallForm.js","components/AddToMyGoals.js","components/AchievementDetails.js","components/ChallengeDetails.js","components/OtherProfile.js","components/GoalsEdit.js","components/Groups.js","components/GroupDetails.js","components/GroupCreate.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","MyNavBar","props","Navbar","collapseOnSelect","id","fixed","variant","expand","Brand","href","src","alt","Toggle","aria-controls","Collapse","Nav","className","to","data-toggle","loggedInUser","onClick","onLogOut","SignUp","Form","onSubmit","onSignUp","Group","Label","Control","type","placeholder","name","Text","Button","LogIn","onLogIn","Ranks","Component","Leaderboard","state","users","axios","get","then","res","setState","data","this","map","user","username","points","_id","About","target","rel","MyCarousel","achievements","catch","err","console","log","Carousel","achievement","i","Item","key","Caption","image","challenge","title","rank","Home","ExperienceBar","chillHero","smartHero","bigHero","superHero","percentage","Math","ceil","ProgressBar","striped","now","MyProfile","userAchievements","showDeletePopup","handleClick","handleClose","handleDeleteUser","delete","withCredentials","onDelete","Modal","show","onHide","Header","closeButton","Title","Body","Footer","HeroHome","targetedAchievID","getUserAchievements","filterArr","filter","elem","completed","achievID","handleDelete","clonedUserAchiev","JSON","parse","stringify","forEach","e","splice","newProps","length","slice","startDate","Date","starting_date","start","getDate","getMonth","Dashboard","activeKey","EditProfileForm","handleUsernameChange","updatedUser","currentTarget","value","handleEmailChange","email","handlePasswordChange","password","handleImageChange","uploadData","FormData","append","files","post","response","result","htmlFor","accept","onChange","onEdit","ChallengesList","challenges","filteredChallenges","showPopUp","handleSearch","search","toLowerCase","cloneChallenges","item","includes","description","handleCreateClick","history","push","handleSort","preventDefault","sort","a","b","InputGroup","Prepend","FormControl","aria-label","aria-describedby","as","defaultValue","SocialMedia","FacebookShareButton","url","achievementID","quote","FacebookIcon","size","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","GoalsAndSuccess","filteredAchievements","handleSearchAch","searchAch","cloneUserAchievements","CreateChallForm","rows","max","AddToMyGoals","userGoalsIds","onSuccess","component","achiev","goals","fromOther","withRouter","AchievementDetails","match","params","finishing_date","toLocaleDateString","finish","fact","ChallengeDetails","challengeID","OtherProfile","userID","style","width","finishDate","GoalsEdit","updatedAchievement","handleDateChange","patch","onUpdate","Groups","groups","filteredGroups","cloneGroups","group","location","GroupDetails","groupData","groupID","date","members","member","GroupCreate","App","showGeneralModal","modalMessage","modalHeader","modalButtonType","handleSignUp","errorMessage","handleLogIn","handleLogOut","handleEdit","cloneUser","passwordHash","message","codeName","Object","keys","keyPattern","handleCreateChall","handleCreateGroup","handleUpdateGoal","updatedSuccess","pointsToAdd","clonedUser","newRank","handleRank","nbOfPoints","handleModalClose","hanldeNotification","exact","path","render","routeProps","React","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"4vBAAaA,EAAUC,qC,4DCOR,SAASC,EAASC,GAC/B,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,GAAG,WAAWC,MAAM,MAAMC,QAAQ,QAAQC,OAAO,MACxE,yBAAKH,GAAG,aACR,kBAACF,EAAA,EAAOM,MAAR,CAAcC,KAAK,KAAI,yBAAKC,IAAI,2BAA2BC,IAAI,OAA/D,YACA,kBAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,kBAACX,EAAA,EAAOY,SAAR,CAAiBV,GAAG,oBAClB,kBAACW,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACd,EAAA,EAAOU,OAAR,KAAe,kBAAC,IAAD,CAAMK,GAAG,cAAcC,cAAY,YAAnC,eACf,kBAAChB,EAAA,EAAOU,OAAR,KAAe,kBAAC,IAAD,CAAMK,GAAG,SAASC,cAAY,YAA9B,UACf,kBAAChB,EAAA,EAAOU,OAAR,KAAe,kBAAC,IAAD,CAAMK,GAAG,eAAeC,cAAY,YAApC,mBACdjB,EAAMkB,aACL,kBAACjB,EAAA,EAAOU,OAAR,CAAeI,UAAU,aAAY,4BAAQI,QAASnB,EAAMoB,SAAUH,cAAY,YAA7C,WAErC,oCACA,kBAAChB,EAAA,EAAOU,OAAR,CAAeI,UAAU,aAAY,kBAAC,IAAD,CAAMC,GAAG,UAAUC,cAAY,YAA/B,YACrC,kBAAChB,EAAA,EAAOU,OAAR,CAAeI,UAAU,aAAY,kBAAC,IAAD,CAAMC,GAAG,SAASC,cAAY,YAA9B,e,kBCqBpCI,MAvCf,SAAgBrB,GACd,OACE,yBAAKG,GAAG,UACN,kBAACmB,EAAA,EAAD,CAAMP,UAAU,SAASQ,SAAUvB,EAAMwB,UACvC,kBAACF,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,YAAY,iBAAiBC,KAAK,cAG9D,kBAACR,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,sBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,KAAK,UAC1D,kBAACR,EAAA,EAAKS,KAAN,CAAWhB,UAAU,cAArB,mDAKF,kBAACO,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,KAAK,cAG5D,kBAACR,EAAA,EAAKS,KAAN,CAAWhB,UAAU,cAArB,qBACoB,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAGpB,yBAAKD,UAAU,aACb,kBAACiB,EAAA,EAAD,CAAQjB,UAAU,iBAAiBV,QAAQ,UAAUuB,KAAK,UAC1D,yBAAKb,UAAU,QAAQN,IAAI,sBAAsBC,IAAI,MADrD,UAGA,yBAAKK,UAAU,QAAQN,IAAI,oBAAoBC,IAAI,W,OCE9CuB,MA/Bf,SAAejC,GACb,OACE,yBAAKG,GAAG,SACN,kBAACmB,EAAA,EAAD,CAAMP,UAAU,SAASQ,SAAUvB,EAAMkC,SACvC,kBAACZ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,sBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,KAAK,WAG5D,kBAACR,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,YAAY,iBAAiBC,KAAK,cAGlE,kBAACR,EAAA,EAAKS,KAAN,CAAWhB,UAAU,cAArB,qBACoB,kBAAC,IAAD,CAAMC,GAAG,WAAT,YAGpB,yBAAKD,UAAU,YACb,kBAACiB,EAAA,EAAD,CAAQjB,UAAU,gBAAgBV,QAAQ,UAAUuB,KAAK,UACzD,yBAAKb,UAAU,QAAQN,IAAI,sBAAsBC,IAAI,MADrD,SAGA,yBAAKK,UAAU,QAAQN,IAAI,oBAAoBC,IAAI,WCuB9CyB,G,8KA/CP,OACI,yBAAKpB,UAAU,iBACb,wBAAIA,UAAU,aAAd,kBACA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACX,4BAAI,6CACJ,+CAKJ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,4BAAI,+CACJ,oDAEJ,uBAAGA,UAAU,SAAQ,0CAArB,mBAGA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,4BAAI,+CACJ,oDAEJ,uBAAGA,UAAU,SAAQ,0CAArB,uBAGA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,4BAAI,6CACJ,oDAEJ,uBAAGA,UAAU,SAAQ,0CAArB,yBAGA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,aACb,4BAAI,+CACJ,+CAEJ,uBAAGA,UAAU,SAAQ,0CAArB,yB,GA1CIqB,cCyCLC,G,mNArCbC,MAAQ,CACNC,MAAO,I,kEAGY,IAAD,OAClBC,IAAMC,IAAN,UAAa5C,EAAb,uBAA0C6C,MAAK,SAACC,GAC9C,EAAKC,SAAS,CACZL,MAAOI,EAAIE,Y,+BAMf,OAAKC,KAAKR,MAAMC,MAKd,yBAAKpC,GAAG,eACN,wBAAIY,UAAU,aAAd,kBACA,wBAAIA,UAAU,QACX+B,KAAKR,MAAMC,MAAMQ,KAAI,SAACC,GAAU,IACvBC,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,OAAQC,EAAQH,EAARG,IAC1B,OACE,kBAAC,IAAD,CAAOpC,UAAU,YAAYC,GAAE,gBAAWmC,IACtC,4BACGF,EADH,IACcC,EADd,iBAXL,6C,GAfad,c,OCwBXgB,MA3Bf,WACE,OACE,yBAAKjD,GAAG,SACN,wCACA,yBAAKY,UAAU,YACb,yBAAKA,UAAU,YAAf,gBACA,uBAAGA,UAAU,cAAb,UACS,uBAAGP,KAAK,8CAA8C6C,OAAO,SAASC,IAAI,uBAA1E,kBADT,MAC+H,uBAAG9C,KAAK,2DAA2D6C,OAAO,SAASC,IAAI,uBAAvF,sBAD/H,gFAIA,uBAAGvC,UAAU,cACX,sDADF,sMAI6B,IAC3B,iFALF,2BAQA,uBAAGA,UAAU,cAAb,qCACqC,IACnC,qF,QChBWwC,G,mNACnBjB,MAAQ,CACNkB,aAAc,I,kEAGK,IAAD,OAClBhB,IACGC,IADH,UACU5C,EADV,+BAEG6C,MAAK,SAACC,GACL,EAAKC,SAAS,CACZY,aAAcb,EAAIE,UAGrBY,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAG9B,OAAKZ,KAAKR,MAAMkB,aAKd,6BACE,kBAACK,EAAA,EAAD,CAAU1D,GAAG,cACV2C,KAAKR,MAAMkB,aAAaT,KAAI,SAACe,EAAaC,GACzC,OACE,kBAACF,EAAA,EAASG,KAAV,CAAeC,IAAK,gBAAkBF,GACtC,kBAAC,IAAD,CAAM/C,GAAE,uBAAkB8C,EAAYX,MACpC,yBACEpC,UAAU,gBACVN,IAAI,yBACJC,IAAI,eAEN,kBAACmD,EAAA,EAASK,QAAV,KACE,yBAAKnD,UAAU,kBACb,2BAAOA,UAAU,iBACjB,4BACC+C,EAAYK,MACX,4BAAI,yBACFpD,UAAU,UACVN,IAAKqD,EAAYK,MACjBzD,IAAKoD,EAAYM,UAAUC,SAG7B,MAKJ,yBAAKtD,UAAU,iBACb,4BAAK+C,EAAYM,UAAUC,OAC3B,yBAAKtD,UAAU,cACb,yBACEN,IAAKqD,EAAYd,KAAKmB,MACtBzD,IAAKoD,EAAYd,KAAKC,WAExB,6BACA,uBAAGlC,UAAU,YAAY+C,EAAYd,KAAKC,UAC1C,uBAAGlC,UAAU,eAAe+C,EAAYd,KAAKsB,KAA7C,MAAsDR,EAAYd,KAAKE,OAAvE,mBAxCT,6C,GAjB2Bd,cCgCzBmC,G,8KA/BX,OACE,yBAAKpE,GAAG,QACN,yBAAKA,GAAG,aACN,0CACA,wCAEF,6BACE,uBAAGY,UAAU,aAAb,2EAEM,0DAFN,KAIA,kBAAC,IAAD,CAAMC,GAAG,WACP,4BAAQD,UAAU,UAAS,yBAAKN,IAAI,sBAAsBC,IAAI,MAA9D,kBAAmF,yBAAKD,IAAI,oBAAoBC,IAAI,SAIxH,yBAAKK,UAAU,sBACb,yBAAKA,UAAU,kBACb,4CACA,0DAGF,kBAAC,EAAD,OAGF,kBAAC,EAAD,W,GA3BWqB,c,eC6FJoC,MA9Ff,SAAuBxE,GAEnB,IAKIyE,EACO,aADPA,EAEQ,IAGRC,EACO,aADPA,EAEQ,KAGRC,EACO,WADPA,EAEQ,IAGRC,EACO,aADPA,EAEQ,IAKZ,GAAI5E,EAAMkB,aAAagC,QAAU,KAASlD,EAAMkB,aAAagC,OAAS,KAAO,CACzE,IAAI2B,EAAaC,KAAKC,MAAM/E,EAAMkB,aAAagC,OAASuB,IAAmBC,EAAmBD,GAAmB,KACjH,OACI,6BACI,yBAAK1D,UAAU,kBACX,uBAAGA,UAAU,SAAS0D,GACtB,kBAACO,EAAA,EAAD,CAAajE,UAAU,WAAWkE,SAAO,EAAC5E,QAAQ,UAAU6E,IAAKL,IACjE,uBAAG9D,UAAU,SAAS2D,IAE5B,uBAAG3D,UAAU,UAAUf,EAAMkB,aAAagC,OAA1C,IAAmDwB,EAAnD,YAIH,GAAI1E,EAAMkB,aAAagC,QAAU,MAASlD,EAAMkB,aAAagC,OAAS,IAAO,CAChF,IAAI2B,EAAaC,KAAKC,MAAM/E,EAAMkB,aAAagC,OAASwB,IAAmBC,EAAiBD,GAAmB,KAC/G,OACI,6BACI,yBAAK3D,UAAU,kBACX,uBAAGA,UAAU,SAAS2D,GACtB,kBAACM,EAAA,EAAD,CAAajE,UAAU,WAAWkE,SAAO,EAAC5E,QAAQ,UAAU6E,IAAKL,IACjE,uBAAG9D,UAAU,SAAS4D,IAE5B,uBAAG5D,UAAU,UAAUf,EAAMkB,aAAagC,OAA1C,IAAmDyB,EAAnD,YAIH,GAAI3E,EAAMkB,aAAagC,QAAU,KAASlD,EAAMkB,aAAagC,OAAS,IAAQ,CACjF,IAAI2B,EAAaC,KAAKC,MAAM/E,EAAMkB,aAAagC,OAASyB,IAAiBC,EAAmBD,GAAiB,KAC7G,OACI,6BACI,yBAAK5D,UAAU,kBACX,uBAAGA,UAAU,SAAS4D,GACtB,kBAACK,EAAA,EAAD,CAAajE,UAAU,WAAWkE,SAAO,EAAC5E,QAAQ,UAAU6E,IAAKL,IACjE,uBAAG9D,UAAU,SAAS6D,IAE5B,uBAAG7D,UAAU,UAAUf,EAAMkB,aAAagC,OAA1C,IAAmD0B,EAAnD,YAIH,GAAI5E,EAAMkB,aAAagC,QAAU,IACpC,OACI,6BACE,uBAAGnC,UAAU,SAAS6D,GACtB,uBAAG7D,UAAU,UAAUf,EAAMkB,aAAagC,OAA1C,YAKN,IAAI2B,EAAaC,KAAKC,KAAM/E,EAAMkB,aAAagC,OAASuB,EAAmB,KAC3E,OACI,6BACI,yBAAK1D,UAAU,kBACX,uBAAGA,UAAU,SA9ElB,YA+EK,kBAACiE,EAAA,EAAD,CAAajE,UAAU,WAAWkE,SAAO,EAAC5E,QAAQ,UAAU6E,IAAKL,IACjE,uBAAG9D,UAAU,SAAS0D,IAE5B,uBAAG1D,UAAU,UAAUf,EAAMkB,aAAagC,OAA1C,IAAmDuB,EAAnD,aCsBCU,G,mNAtGb7C,MAAQ,CACN8C,iBAAkB,GAClBC,iBAAiB,G,EAiBnBC,YAAc,WACZ,EAAK1C,SAAS,CACZyC,iBAAiB,K,EAIrBE,YAAc,WACZ,EAAK3C,SAAS,CACZyC,iBAAgB,K,EAIpBG,iBAAmB,WACjBhD,IAAMiD,OAAN,UAAgB5F,EAAhB,kBAAiC,EAAKG,MAAMkB,aAAaiC,KAAO,CAACuC,iBAAiB,IAC/EhD,MAAK,SAACC,GACL,EAAK3C,MAAM2F,e,kEA7BI,IAAD,OACd7C,KAAK9C,MAAMkB,cACbsB,IACGC,IADH,UACU5C,EADV,8BACuCiD,KAAK9C,MAAMkB,aAAaiC,KAAO,CAClEuC,iBAAiB,IAElBhD,MAAK,SAACC,GACL,EAAKC,SAAS,CACZwC,iBAAkBzC,EAAIE,Y,+BA2B9B,OAAKC,KAAKR,MAAM8C,kBAAqBtC,KAAK9C,MAAMkB,aAU9C,yBAAKf,GAAG,aACN,wBAAIY,UAAU,SAAd,gBACA,yBAAKA,UAAU,cAEb,yBAAKA,UAAU,cACb,yBAAKN,IAAKqC,KAAK9C,MAAMkB,aAAaiD,MAAOzD,IAAI,YAG7C,yBAAKK,UAAU,iBACb,yBAAKA,UAAU,cACb,2BAAG,yCAAH,IAA2B+B,KAAK9C,MAAMkB,aAAa+B,WAErD,yBAAKlC,UAAU,eACb,uBAAGA,UAAU,cAAa,yCAA1B,IAAkD+B,KAAK9C,MAAMkB,aAAaoD,KAA1E,MAAmFxB,KAAK9C,MAAMkB,aAAagC,OAA3G,aAGN,kBAAC,EAAD,CAAehC,aAAc4B,KAAK9C,MAAMkB,eAGxC,yBAAKH,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAG,iBACP,yBAAKP,IAAI,mBAAmBC,IAAI,UADlC,QAGA,4BAAQK,UAAU,aAAaI,QAAS2B,KAAKwC,aAC3C,yBAAK7E,IAAI,qBAAqBC,IAAI,WADpC,YAKN,kBAACkF,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAM+C,gBAAiBS,OAAQhD,KAAKyC,aACpD,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,uBAEF,kBAACL,EAAA,EAAMM,KAAP,uDAGA,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,SAASc,QAAS2B,KAAKyC,aAAvC,gBAGA,kBAACvD,EAAA,EAAD,CACE3B,QAAQ,UACRc,QAAS2B,KAAK0C,kBAFhB,qBA/CJ,wEAC6C,IAC3C,kBAAC,IAAD,CAAMxE,GAAG,UAAT,2B,GA7CcoB,cCsKTgE,G,mNApKb9D,MAAQ,CACN8C,iBAAkB,GAClBC,iBAAiB,EACjBgB,iBAAkB,M,EAMpBC,oBAAsB,WACpB9D,IACKC,IADL,UACY5C,EADZ,8BACyC,EAAKG,MAAMkB,aAAaiC,KAAO,CAClEuC,iBAAiB,IAElBhD,MAAK,SAACC,GACL,IAAI4D,EAAY5D,EAAIE,KAAK2D,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKC,aAC7C,EAAK9D,SAAS,CACZwC,iBAAkBmB,Q,EAiB5BjB,YAAc,SAACqB,GACb,EAAK/D,SAAS,CACZyC,iBAAiB,EACjBgB,iBAAkBM,K,EAItBpB,YAAc,WACZ,EAAK3C,SAAS,CACZyC,iBAAgB,K,EAIpBuB,aAAe,SAACD,GACdnE,IAAMiD,OAAN,UAAgB5F,EAAhB,yBAAwC8G,GAAY,CAACjB,iBAAiB,IACnEhD,MAAK,SAACC,GACL,IAAIkE,EAAmBC,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAM8C,mBAC5DyB,EAAiBI,SAAQ,SAACC,EAAGnD,GACxBmD,EAAE/D,MAAQR,EAAIE,KAAKM,KAAM0D,EAAiBM,OAAOpD,EAAG,MAEzDJ,QAAQC,IAAIiD,GACZ,EAAKjE,SAAS,CACZwC,iBAAkByB,EAClBxB,iBAAgB,Q,kEAlClBvC,KAAK9C,MAAMkB,cACb4B,KAAKwD,wB,yCAIUc,GACZA,EAASlG,cACZ4B,KAAKwD,wB,+BAgCC,IAAD,OACP,OAAKxD,KAAKR,MAAM8C,kBAAqBtC,KAAK9C,MAAMkB,aAS9C,yBAAKf,GAAG,YACN,wBAAIY,UAAU,SAAd,aACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,yBAAKN,IAAKqC,KAAK9C,MAAMkB,aAAaiD,MAAOzD,IAAI,WAC7C,6BACE,yBAAKK,UAAU,cACb,wBAAIA,UAAU,YAAY+B,KAAK9C,MAAMkB,aAAa+B,WAEpD,yBAAKlC,UAAU,eACb,uBAAGA,UAAU,cAAc+B,KAAK9C,MAAMkB,aAAaoD,MACnD,uBAAGvD,UAAU,gBAAb,KACK+B,KAAK9C,MAAMkB,aAAagC,OAD7B,cAMN,kBAAC,EAAD,CAAehC,aAAc4B,KAAK9C,MAAMkB,eACxC,yBAAKH,UAAU,cACb,4BACE,yBAAKN,IAAI,sBAAsBC,IAAI,MADrC,sBAIA,6BAE2C,IAAvCoC,KAAKR,MAAM8C,iBAAiBiC,OAAe,oEAAiD,GAG5FvE,KAAKR,MAAM8C,iBAAiBkC,MAAM,EAAG,GAAGvE,KAAI,SAACe,EAAaC,GAExD,IAAIwD,EAAY,IAAIC,KAAK1D,EAAY2D,eAGjCC,EAFOH,EAAUI,UAEF,KADPJ,EAAUK,WAAa,GAEnC,OACE,yBAAK7G,UAAU,WAAWkD,IAAK,QAAUF,GACzC,yBAAKhD,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAE,uBAAkB8C,EAAYX,MACpC,2BAAIuE,GACJ,4BAAK5D,EAAYM,UAAUC,SAG7B,yBAAKtD,UAAU,YACb,kBAAC,IAAD,CAAMC,GAAE,sBAAiB8C,EAAYX,MACnC,yBAAK1C,IAAI,oBAAoBC,IAAI,WAEnC,4BACAS,QAAS,kBAAM,EAAKmE,YAAYxB,EAAYX,OAE5C,yBAAK1C,IAAI,qBAAqBC,IAAI,iBAO5C,yBAAKK,UAAU,iBAEb+B,KAAKR,MAAM8C,iBAAiBoB,QAAO,SAAAU,GAAC,OAAoB,IAAhBA,EAAER,aAAqBW,OAAS,EAAI,yBAAKtG,UAAU,WAAf,IAA0B,kBAAC,IAAD,CAAMC,GAAG,kBAAT,qBAA1B,KAAuF,GAErK,kBAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,eAA7B,sBAMN,yBAAKD,UAAU,sBACb,wBAAIA,UAAU,kBAAd,gBACA,kBAAC,EAAD,OAGF,kBAAC6E,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAM+C,gBAAiBS,OAAQhD,KAAKyC,aACpD,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,uBAEF,kBAACL,EAAA,EAAMM,KAAP,mEAGA,kBAACN,EAAA,EAAMO,OAAP,KACA,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,SAASc,QAAS2B,KAAKyC,aAAvC,gBAGE,kBAACvD,EAAA,EAAD,CAAQ3B,QAAQ,UAAUc,QAAS,kBAAM,EAAKyF,aAAa,EAAKtE,MAAM+D,oBAAtE,qBAzFJ,wEAC6C,IAC3C,kBAAC,IAAD,CAAMrF,GAAG,UAAT,2B,GApEaoB,c,OCgBRyF,MArBf,WACE,OACE,6BACE,kBAAC/G,EAAA,EAAD,CAAKX,GAAG,YAAY2H,UAAU,SAC5B,kBAAChH,EAAA,EAAIkD,KAAL,KACE,kBAAC,IAAD,CAAMhD,GAAG,cAAT,IAAuB,yBAAKP,IAAI,mBAAmBC,IAAI,cAAvD,gBAEF,kBAACI,EAAA,EAAIkD,KAAL,KACE,kBAAC,IAAD,CAAMhD,GAAG,kBAAT,IAA2B,yBAAKP,IAAI,mBAAmBC,IAAI,oBAA3D,uBAEF,kBAACI,EAAA,EAAIkD,KAAL,KACE,kBAAC,IAAD,CAAMhD,GAAG,WAAT,IAAoB,yBAAKP,IAAI,4BAA4BC,IAAI,UAA7D,aAEF,kBAACI,EAAA,EAAIkD,KAAL,KACE,kBAAC,IAAD,CAAMhD,GAAG,YAAT,IAAqB,yBAAKP,IAAI,mBAAmBC,IAAI,YAArD,iBC6HKqH,G,yDAzIb,WAAY/H,GAAQ,IAAD,8BACjB,cAAMA,IAsBRgI,qBAAuB,SAACd,GACtB,IAAIe,EAAcnB,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMU,OACvDiF,EAAYhF,SAAWiE,EAAEgB,cAAcC,MACvC,EAAKvF,SAAS,CACZI,KAAMiF,KA3BS,EA+BnBG,kBAAoB,SAAClB,GACnB,IAAIe,EAAcnB,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMU,OACvDiF,EAAYI,MAAQnB,EAAEgB,cAAcC,MACpC,EAAKvF,SAAS,CACZI,KAAMiF,KAnCS,EAuCnBK,qBAAuB,SAACpB,GACtB,IAAIe,EAAcnB,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMU,OACvDiF,EAAYM,SAAWrB,EAAEgB,cAAcC,MACvC,EAAKvF,SAAS,CACZI,KAAMiF,KA3CS,EA+CnBO,kBAAoB,SAACtB,GACnB,IAAIuB,EAAa,IAAIC,SACrBD,EAAWE,OAAO,WAAYzB,EAAEgB,cAAcU,MAAM,IAEpDpG,IACGqG,KADH,UACWhJ,EADX,WAC6B4I,EAAY,CAAE/C,iBAAiB,IACzDhD,MAAK,SAACoG,GACL,IAAIb,EAAcnB,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMU,OACvDiF,EAAY9D,MAAQ2E,EAASjG,KAAKsB,MAClC,EAAKvB,SAAS,CACZI,KAAMiF,QAvDZ,EAAK3F,MAAQ,CACXpB,aAAc,KACd8B,KAAM,MAJS,E,gEAQE,IAAD,OAClBR,IACGC,IADH,UACU5C,EADV,cAC+B,CAAE6F,iBAAiB,IAC/ChD,MAAK,SAACqG,GACLvG,IACGC,IADH,UACU5C,EADV,kBAC2BkJ,EAAOlG,KAAKM,KAAO,CAAEuC,iBAAiB,IAC9DhD,MAAK,SAACC,GACL,EAAKC,SAAS,CACZ1B,aAAc6H,EAAOlG,KACrBG,KAAML,EAAIE,e,+BA6CZ,IAAD,OACP,IAAKC,KAAKR,MAAMU,KACd,OACE,wEAC6C,IAC3C,kBAAC,IAAD,CAAMhC,GAAG,UAAT,uBALC,MASsC8B,KAAKR,MAAMU,KAAhDC,EATD,EASCA,SAAUkB,EATX,EASWA,MAAOoE,EATlB,EASkBA,SAAUF,EAT5B,EAS4BA,MACnC,OACE,yBAAKlI,GAAG,eACN,wBAAIY,UAAU,SAAd,qBACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,cACf,yBAAKN,IAAK0D,EAAOzD,IAAI,WACrB,yBAAKK,UAAU,mBACf,2BAAOiI,QAAQ,SAAf,gCACA,2BACEpH,KAAK,OACLzB,GAAG,QACH2B,KAAK,QACLmH,OAAO,wBACPC,SAAUpG,KAAK0F,sBAKnB,yBAAKzH,UAAU,mBACb,uDACA,2BACEmI,SAAUpG,KAAKkF,qBACflG,KAAK,WACLF,KAAK,OACLC,YAAY,iBACZsG,MAAOlF,KAIX,yBAAKlC,UAAU,mBACb,oDACA,2BACEmI,SAAUpG,KAAKsF,kBACftG,KAAK,QACLF,KAAK,QACLuG,MAAOE,EACPxG,YAAY,iBAIhB,yBAAKd,UAAU,mBACb,qDACA,2BACEmI,SAAUpG,KAAKwF,qBACfxG,KAAK,WACLF,KAAK,WACLuG,MAAOI,EACP1G,YAAY,oBAIhB,4BACEd,UAAU,aACVI,QAAS,kBAAM,EAAKnB,MAAMmJ,OAAO,EAAK7G,MAAMU,OAC5CpB,KAAK,UAEL,yBAAKb,UAAU,YAAYN,IAAI,sBAAsBC,IAAI,MAL3D,QAME,yBAAKK,UAAU,YAAYN,IAAI,oBAAoBC,IAAI,a,GAlIrC0B,c,gBC+HfgH,G,mNAvHb9G,MAAQ,CACN+G,WAAY,GACZC,mBAAoB,GACpBC,WAAW,G,EAYbC,aAAe,SAACtC,GACd,IAAIuC,EAASvC,EAAEgB,cAAcC,MAAMuB,cAC/BC,EAAkB,EAAKrH,MAAM+G,WAAW7C,QAAO,SAACoD,GAClD,OACEA,EAAKvF,MAAMqF,cAAcG,SAASJ,IAClCG,EAAKE,YAAYJ,cAAcG,SAASJ,MAG5C,EAAK7G,SAAS,CACZ0G,mBAAoBK,K,EAIxBI,kBAAoB,YACb,EAAK/J,MAAMkB,cAAgB,EAAKlB,MAAMkB,aAAagC,OAAS,KAC/D,EAAKN,SAAS,CACZ2G,WAAW,IAER,EAAKvJ,MAAMgK,QAAQC,KAAK,uB,EAGjC1E,YAAc,WACZ,EAAK3C,SAAS,CACZ2G,WAAW,K,EAIfW,WAAa,SAAChD,GACZA,EAAEiD,iBACF,IAAIR,EAAkB7C,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMgH,qBAClC,QAAzBpC,EAAEgB,cAAcC,MAAiBwB,EAAgBS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnH,OAASoH,EAAEpH,UAAUyG,EAAgBS,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEpH,OAASmH,EAAEnH,UACnI,EAAKN,SAAS,CACZ0G,mBAAoBK,K,kEAzCH,IAAD,OAClBnH,IAAMC,IAAN,UAAa5C,EAAb,gBAAmC6C,MAAK,SAACoG,GACvC,EAAKlG,SAAS,CACZyG,WAAYP,EAASjG,KACrByG,mBAAoBR,EAASjG,Y,+BA0CjC,OAAKC,KAAKR,MAAM+G,WAId,yBAAKlJ,GAAG,cACN,wBAAIY,UAAU,mBAAd,cAEA,yBAAKA,UAAU,eACf,kBAACwJ,EAAA,EAAD,CAAYxJ,UAAU,QACpB,kBAACwJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWxI,KAAZ,CAAiB5B,GAAG,gBAApB,iBAEF,kBAACsK,EAAA,EAAD,CACEvB,SAAUpG,KAAK0G,aACf3H,YAAY,yBACZ6I,aAAW,yBACXC,mBAAiB,kBAIrB,kBAACrJ,EAAA,EAAKK,QAAN,CAAcuH,SAAUpG,KAAKoH,WAAYU,GAAG,SAASC,aAAa,cAC9D,8CACA,4BAAQ1C,MAAM,QAAd,yBACA,4BAAQA,MAAM,OAAd,yBAEDrF,KAAK9C,MAAMkB,aACZ,kBAACc,EAAA,EAAD,CAAQjB,UAAU,SAASI,QAAS2B,KAAKiH,mBACvC,yBAAKhJ,UAAU,SAASN,IAAI,sBAAsBC,IAAI,MADxD,sBAKA,IAIDoC,KAAKR,MAAMgH,mBAAmBvG,KAAI,SAACqB,EAAWL,GAC7C,OACE,yBAAKhD,UAAU,wBAAwBkD,IAAK,YAAcF,GACxD,yBAAKhD,UAAU,eACb,kBAAC,IAAD,CAAMA,UAAU,OAAOC,GAAE,qBAAgBoD,EAAUjB,MACjD,2BACGiB,EAAUC,MADb,KACsB,IACpB,gCAASD,EAAUlB,OAAnB,kBAOZ,kBAAC0C,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAMiH,UAAWzD,OAAQhD,KAAKyC,aAC9C,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,kBAEF,kBAACL,EAAA,EAAMM,KAAP,gEACwD,KAExD,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,UAAUc,QAAS2B,KAAKyC,aAAxC,iBAxDC,+C,GAtDgBnD,c,6DCHd,SAAS0I,EAAY9K,GAGhC,OAEiB,yBAAKG,GAAG,eACP,yBAAKY,UAAU,gBACb,kBAACgK,EAAA,EAAD,CAAqBhK,UAAU,eAAeiK,IAAG,sDAAiDhL,EAAMiL,eAAiBC,MAAO,kEAAkE,kBAACC,EAAA,EAAD,CAAcC,KAAM,OAGxN,yBAAKrK,UAAU,gBACb,kBAACsK,EAAA,EAAD,CAAoBtK,UAAU,eAAeiK,IAAG,sDAAiDhL,EAAMiL,eAAiBC,MAAO,kEAAkE,kBAACI,EAAA,EAAD,CAAaF,KAAM,OAGtN,yBAAKrK,UAAU,gBACb,kBAACwK,EAAA,EAAD,CAAqBxK,UAAU,eAAeiK,IAAG,sDAAiDhL,EAAMiL,eAAiBC,MAAO,kEAAkE,kBAACM,EAAA,EAAD,CAAcJ,KAAM,Q,WCqL/NK,E,4MAjMbnJ,MAAQ,CACN8C,iBAAkB,GAClBC,iBAAiB,EACjBgB,iBAAkB,KAClBqF,qBAAsB,I,EAiCxBpG,YAAc,SAACqB,GACb,EAAK/D,SAAS,CACZyC,iBAAiB,EACjBgB,iBAAkBM,K,EAItBpB,YAAc,WACZ,EAAK3C,SAAS,CACZyC,iBAAgB,K,EAIpBuB,aAAe,SAACD,GACdnE,IAAMiD,OAAN,UAAgB5F,EAAhB,yBAAwC8G,GAAY,CAACjB,iBAAiB,IACnEhD,MAAK,SAACC,GACL,IAAIkE,EAAmBC,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAM8C,mBAC5DyB,EAAiBI,SAAQ,SAACC,EAAGnD,GACxBmD,EAAE/D,MAAQR,EAAIE,KAAKM,KAAM0D,EAAiBM,OAAOpD,EAAG,MAEzD,EAAKnB,SAAS,CACZwC,iBAAkByB,EAClBxB,iBAAgB,Q,EAKxBsG,gBAAkB,SAACzE,GACjB,IAAI0E,EAAY1E,EAAEgB,cAAcC,MAAMuB,cAClCmC,EAAwB,EAAKvJ,MAAM8C,iBAAiBoB,QAAO,SAACoD,GAC9D,OAAyB,IAAjBA,EAAKlD,YAAqBkD,EAAKxF,UAAUC,MAAMqF,cAAcG,SAAS+B,IAAchC,EAAKxF,UAAU0F,YAAYJ,cAAcG,SAAS+B,OAEhJ,EAAKhJ,SAAS,CACZ8I,qBAAsBG,K,kEA/DL,IAAD,OACd/I,KAAK9C,MAAMkB,cACbsB,IACGC,IADH,UACU5C,EADV,8BACuCiD,KAAK9C,MAAMkB,aAAaiC,KAAO,CAClEuC,iBAAiB,IAElBhD,MAAK,SAACC,GACL,EAAKC,SAAS,CACZwC,iBAAkBzC,EAAIE,KACtB6I,qBAAsB/I,EAAIE,Y,yCAOjBuE,GAAW,IAAD,OACtBA,EAASlG,cACZsB,IACGC,IADH,UACU5C,EADV,8BACuCiD,KAAK9C,MAAMkB,aAAaiC,KAAO,CAClEuC,iBAAiB,IAElBhD,MAAK,SAACC,GACL,EAAKC,SAAS,CACZwC,iBAAkBzC,EAAIE,Y,+BA4CtB,IAAD,OACP,OAAKC,KAAKR,MAAM8C,kBAAqBtC,KAAK9C,MAAMkB,aAU9C,yBAAKf,GAAG,gBACN,yBAAKY,UAAU,WACb,kBAAC,EAAD,CAAeG,aAAc4B,KAAK9C,MAAMkB,gBAE1C,wBAAIH,UAAU,SAAd,wBACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,YACZ,yBAAKN,IAAI,sBAAsBC,IAAI,MADrC,sBAKc,IADboC,KAAKR,MAAM8C,iBAAiBoB,QAAO,SAACU,GAAD,OAAuB,IAAhBA,EAAER,aAC1CW,OACD,oEAEA,GAEDvE,KAAKR,MAAM8C,iBAAiBrC,KAAI,SAACe,EAAaC,GAC7C,IAAKD,EAAY4C,UACf,OACE,yBAAK3F,UAAU,mBAAmBkD,IAAK,QAAUF,GAC/C,kBAAC,IAAD,CAAM/C,GAAE,uBAAkB8C,EAAYX,MACpC,4BAAKW,EAAYM,UAAUC,QAE7B,yBAAKtD,UAAU,YACb,kBAAC,IAAD,CAAMC,GAAE,sBAAiB8C,EAAYX,MACnC,yBAAK1C,IAAI,oBAAoBC,IAAI,WAEnC,4BACES,QAAS,kBAAM,EAAKmE,YAAYxB,EAAYX,OAE5C,yBAAK1C,IAAI,qBAAqBC,IAAI,iBAO9C,yBAAKK,UAAU,iBACb,kBAAC,IAAD,CAAMA,UAAU,UAAUC,GAAG,eAA7B,oBAQJ,6BACE,wBAAID,UAAU,YACZ,yBAAKN,IAAI,sBAAsBC,IAAI,MADrC,0BAKF,kBAAC6J,EAAA,EAAD,CAAYxJ,UAAU,kBACtB,kBAACwJ,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWxI,KAAZ,CAAiB5B,GAAG,gBAApB,iBAEF,kBAACsK,EAAA,EAAD,CACEvB,SAAUpG,KAAK6I,gBACf9J,YAAY,uBACZ6I,aAAW,uBACXC,mBAAiB,kBAMgE,IAA7E7H,KAAKR,MAAMoJ,qBAAqBlF,QAAO,SAAAU,GAAC,OAAoB,IAAhBA,EAAER,aAAoBW,OAAe,mDAAgC,GAGpHvE,KAAKR,MAAMoJ,qBAAqB3I,KAAI,SAACe,EAAaC,GACjD,GAAID,EAAY4C,UACd,OACE,yBAAK3F,UAAU,mBAAmBkD,IAAK,UAAYF,GACjD,kBAAC,IAAD,CAAM/C,GAAE,uBAAkB8C,EAAYX,MACpC,4BAAKW,EAAYM,UAAUC,QAG7B,kBAAC,EAAD,CAAa4G,cAAenH,EAAYX,YAQpD,kBAACyC,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAM+C,gBAAiBS,OAAQhD,KAAKyC,aACpD,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,uBAEF,kBAACL,EAAA,EAAMM,KAAP,mEAGA,kBAACN,EAAA,EAAMO,OAAP,KACA,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,SAASc,QAAS2B,KAAKyC,aAAvC,gBAGE,kBAACvD,EAAA,EAAD,CAAQ3B,QAAQ,UAAUc,QAAS,kBAAM,EAAKyF,aAAa,EAAKtE,MAAM+D,oBAAtE,qBAzGJ,wEAC6C,IAC3C,kBAAC,IAAD,CAAMrF,GAAG,UAAT,2B,GAjFoBoB,a,OCsCf0J,MA5Cf,SAAyB9L,GACvB,OAAKA,EAAMkB,cAAgBlB,EAAMkB,aAAagC,OAAS,KAC9C,kBAAC,IAAD,CAAUlC,GAAG,gBAGpB,yBAAKb,GAAG,mBACN,wBAAIY,UAAU,eAAd,sBACA,yBAAKA,UAAU,cACb,kBAACO,EAAA,EAAD,CAAMC,SAAUvB,EAAMuB,UACpB,kBAACD,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,SACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,QAAQF,KAAK,OAAOC,YAAY,4BAGxE,kBAACP,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,eACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,cAAcD,YAAY,0BAA0B+I,GAAG,WAAWmB,KAAK,OAG/G,kBAACzK,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,qBACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,OAAOD,YAAY,kDAAkD+I,GAAG,WAAWmB,KAAK,OAGhI,kBAACzK,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,UACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,SAASF,KAAK,SAASoK,IAAI,QAAQnK,YAAY,kCAGvF,kBAACP,EAAA,EAAKS,KAAN,KACE,uBAAGhB,UAAU,SAAb,uEAAyF,uEAAzF,MAGF,kBAACiB,EAAA,EAAD,CAAQjB,UAAU,YAAYV,QAAQ,UAAUuB,KAAK,UACrD,yBAAKb,UAAU,YAAYN,IAAI,sBAAsBC,IAAI,MADzD,mBAGA,yBAAKK,UAAU,YAAYN,IAAI,oBAAoBC,IAAI,WChC3DuL,G,mNACJ3J,MAAQ,CACNpB,aAAc,KACdgL,aAAc,GACd3C,WAAW,G,EA+BbjE,YAAc,WACR,EAAKhD,MAAM4J,aAAarC,SAAS,EAAK7J,MAAMoE,WAC9C,EAAKxB,SAAS,CACZ2G,WAAW,IAGb/G,IACGqG,KADH,UAEOhJ,EAFP,gCAEsC,EAAKG,MAAMoE,UAFjD,YAE8D,EAAK9B,MAAMpB,aAAaiC,KAClF,GACA,CAAEuC,iBAAiB,IAEpBhD,MAAK,SAACC,GACL,EAAK3C,MAAMmM,gB,EAKnB5G,YAAc,SAAC6G,GACX,EAAKxJ,SAAS,CACZ2G,WAAU,K,kEAhDK,IAAD,OACbzG,KAAKR,MAAMpB,cACdsB,IACGC,IADH,UACU5C,EADV,cAC+B,CAAE6F,iBAAiB,IAC/ChD,MAAK,SAACC,GACLH,IACGC,IADH,UACU5C,EADV,kBAC2B8C,EAAIE,KAAKM,KAAO,CAAEuC,iBAAiB,IAC3DhD,MAAK,SAACM,GACLR,IACGC,IADH,UACU5C,EADV,8BACuCmD,EAAKH,KAAKM,KAAO,CACpDuC,iBAAiB,IAElBhD,MAAK,SAAC2J,GACL,IAGIC,EAHYD,EAAOxJ,KAAK2D,QAAO,SAACU,GAClC,OAAuB,IAAhBA,EAAER,aAEW3D,KAAI,SAACmE,GAAD,OAAOA,EAAE9C,UAAUjB,OAC7C,EAAKP,SAAS,CACZ1B,aAAc8B,EAAKH,KACnBqJ,aAAcI,e,+BAiCtB,IAAD,OACP,OACE,oCACE,kBAACtK,EAAA,EAAD,CAAQjB,UAAU,iBAAiBI,QAAS2B,KAAKwC,aAC/C,yBAAK7E,IAAI,oBAAoBC,IAAI,UAE/BoC,KAAK9C,MAAMuM,UAAY,4DAA4B,uDAGvD,kBAAC3G,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAMiH,UAAWzD,OAAQ,kBAAM,EAAKP,YAAY,WAChE,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,kBAEF,kBAACL,EAAA,EAAMM,KAAP,6GACqG,KAErG,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,UAAUc,QAAS,kBAAM,EAAKoE,YAAY,WAA1D,qB,GA5EenD,cAsFZoK,cAAWP,GCwCXQ,G,mNA7HbnK,MAAQ,CACNwB,YAAa,KACbuB,iBAAiB,G,EAYnBC,YAAc,WACZ,EAAK1C,SAAS,CACZyC,iBAAiB,K,EAIrBE,YAAc,WACZ,EAAK3C,SAAS,CACZyC,iBAAgB,K,EAIpBuB,aAAe,WACbpE,IAAMiD,OAAN,UAAgB5F,EAAhB,yBAAwC,EAAKyC,MAAMwB,YAAYX,KAAO,CAACuC,iBAAiB,IACrFhD,MAAK,SAACC,GACL,EAAK3C,MAAMgK,QAAQC,KAAK,sB,kEAxBT,IAAD,OACd9J,EAAK2C,KAAK9C,MAAM0M,MAAMC,OAAO1B,cACjCzI,IAAMC,IAAN,UAAa5C,EAAb,yBAAqCM,GAAM,CAACuF,iBAAiB,IAAOhD,MAAK,SAACC,GACxE,EAAKC,SAAS,CACZkB,YAAanB,EAAIE,Y,+BAyBrB,IAAKC,KAAKR,MAAMwB,YACd,OAAO,yCAFF,MAIyEhB,KAAKR,MAAMwB,YAApFM,EAJA,EAIAA,UAAWsC,EAJX,EAIWA,UAAW1D,EAJtB,EAIsBA,KAAMmB,EAJ5B,EAI4BA,MAAOyI,EAJnC,EAImCA,eAAgBnF,EAJnD,EAImDA,cAAetE,EAJlE,EAIkEA,IAErEuE,EADY,IAAIF,KAAKC,GACHoF,qBAElBC,EADa,IAAItF,KAAKoF,GACFC,qBACxB,OACE,yBAAK1M,GAAG,iBACN,yBAAKY,UAAU,cAER+B,KAAK9C,MAAMkB,cAAgB4B,KAAK9C,MAAMkB,aAAaiC,MAAQH,EAAKG,IAA8F,GAAxF,kBAAC,IAAD,CAAMnC,GAAE,gBAAWgC,EAAKG,KAAOpC,UAAU,aAAaiC,EAAKC,SAA3D,cAE3E,yBAAKlC,UAAU,UACb,4BAAKqD,EAAUC,OACf,2BAAID,EAAUlB,OAAd,YAGAJ,KAAK9C,MAAMkB,aAAqBwF,GAAa5D,KAAK9C,MAAMkB,aAAaiC,MAAQH,EAAKG,IAAO,yBAAKpC,UAAU,iBAAgB,kBAAC,EAAD,CAAakK,cAAe9H,KAAiBuD,EAAY,yBAAK3F,UAAU,iBAAgB,kBAAC,EAAD,CAAcqD,UAAWA,EAAUjB,IAAKoJ,WAAS,KAAY,GAAnP,GAE1B7F,EAME5D,KAAK9C,MAAMkB,cAAgB4B,KAAK9C,MAAMkB,aAAaiC,MAAQH,EAAKG,IAClE,wBAAIpC,UAAU,YACZ,yBAAKN,IAAI,sBAAsBC,IAAI,MADrC,4BACqE,KAGrE,wBAAIK,UAAU,YACZ,yBAAKN,IAAI,sBAAsBC,IAAI,MADrC,aACsDsC,EAAKC,SAD3D,eACiF,KAXjF,wBAAIlC,UAAU,YACX,IACD,yBAAKN,IAAI,sBAAsBC,IAAI,MAFrC,+BAeF,2BAAI0D,EAAU0F,aACd,wBAAI/I,UAAU,YACZ,yBAAKN,IAAI,sBAAsBC,IAAI,MADrC,uBAGA,2BAAI0D,EAAU2I,MACd,uBAAGhM,UAAU,QACX,6CADF,IAC8B2G,GAE7BhB,EACC,oCACE,uBAAG3F,UAAU,QACX,8CADF,IAC+B+L,GAE/B,yBACE/L,UAAU,uBACVN,IAAK0D,EACLzD,IAAI,cAIR,yBAAKK,UAAU,YACb,kBAAC,IAAD,CAAMC,GAAE,sBAAiBmC,IACvB,yBAAK1C,IAAI,oBAAoBC,IAAI,UADnC,gBAGA,4BAAQS,QAAS2B,KAAKwC,aACpB,yBAAK7E,IAAI,qBAAqBC,IAAI,WADpC,kBAMN,kBAACkF,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAM+C,gBAAiBS,OAAQhD,KAAKyC,aACpD,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,uBAEF,kBAACL,EAAA,EAAMM,KAAP,mEAGA,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,SAASc,QAAS2B,KAAKyC,aAAvC,gBAGA,kBAACvD,EAAA,EAAD,CACE3B,QAAQ,UACRc,QAAS2B,KAAK8D,cAFhB,yB,GAjHqBxE,cC8ClB4K,G,mNAjDb1K,MAAQ,CACN8B,UAAW,M,kEAGQ,IAAD,OACdjE,EAAK2C,KAAK9C,MAAM0M,MAAMC,OAAOM,YACjCzK,IAAMC,IAAN,UAAa5C,EAAb,uBAAmCM,GAAM,CAAEuF,iBAAiB,IACzDhD,MAAK,SAACC,GACL,EAAKC,SAAS,CACZwB,UAAWzB,EAAIE,Y,+BAMrB,OAAKC,KAAKR,MAAM8B,UAId,yBAAKjE,GAAG,oBACN,yBAAKY,UAAU,cACb,uBAAGP,KAAK,eAAc,yBAAKC,IAAI,mBAAmBC,IAAI,OAAOK,UAAU,cACvE,yBAAKA,UAAU,UACb,wBAAIA,UAAU,wBAAwB+B,KAAKR,MAAM8B,UAAUC,OAC3D,2BAAIvB,KAAKR,MAAM8B,UAAUlB,OAAzB,YAEF,wBAAInC,UAAU,YACd,yBAAKN,IAAI,sBAAsBC,IAAI,MADnC,8BAGA,2BAAIoC,KAAKR,MAAM8B,UAAU0F,aACzB,wBAAI/I,UAAU,YACd,yBAAKN,IAAI,sBAAsBC,IAAI,MADnC,sBAGA,2BAAIoC,KAAKR,MAAM8B,UAAU2I,MAGvBjK,KAAK9C,MAAMkB,aACT,yBAAKH,UAAU,cACb,kBAAC,EAAD,CAAcqD,UAAWtB,KAAKR,MAAM8B,UAAUjB,IAAKgJ,UAAWrJ,KAAK9C,MAAMmM,aAEzE,KAxBH,6C,GAjBkB/J,cCCV8K,G,mNACnB5K,MAAQ,CACNU,KAAM,KACNoC,iBAAkB,I,kEAGC,IAAD,OACdjF,EAAK2C,KAAK9C,MAAM0M,MAAMC,OAAOQ,OACjC3K,IACGC,IADH,UACU5C,EADV,kBAC2BM,GAAM,CAAEuF,iBAAiB,IACjDhD,MAAK,SAACM,GACLW,QAAQC,IAAIZ,EAAKH,MACjBL,IACGC,IADH,UACU5C,EADV,8BACuCmD,EAAKH,KAAKM,KAAO,CACpDuC,iBAAiB,IAElBhD,MAAK,SAACC,GACL,EAAKC,SAAS,CACZI,KAAMA,EAAKH,KACXuC,iBAAkBzC,EAAIE,e,+BAOhC,OAAKC,KAAKR,MAAM8C,kBAAqBtC,KAAKR,MAAMU,KAK9C,yBAAK7C,GAAG,gBACN,yBAAKY,UAAU,cACb,yBAAKA,UAAU,UACb,yBACEN,IAAKqC,KAAKR,MAAMU,KAAKmB,MACrBzD,IAAI,SACJ0M,MAAO,CAAEC,MAAO,WAElB,6BACE,yBAAKtM,UAAU,cACb,4BAAK+B,KAAKR,MAAMU,KAAKC,WAEvB,yBAAKlC,UAAU,eACb,uBAAGA,UAAU,cAAc+B,KAAKR,MAAMU,KAAKsB,MAC3C,uBAAGvD,UAAU,gBAAb,KACK+B,KAAKR,MAAMU,KAAKE,OADrB,cAON,kBAAC,EAAD,CAAehC,aAAc4B,KAAKR,MAAMU,OAExC,yBAAKjC,UAAU,gBACb,4BACA,yBAAKN,IAAI,sBAAsBC,IAAI,MADnC,WAGCoC,KAAKR,MAAM8C,iBAAiBrC,KAAI,SAACe,EAAaC,GAC7C,GAAID,EAAY4C,UAAW,CACzB,IAAI4G,EAAa,IAAI9F,KAAK1D,EAAY8I,gBAGlCE,EAFOQ,EAAW3F,UAEF,KADR2F,EAAW1F,WAAa,GAEpC,OACE,yBAAK7G,UAAU,cAAckD,IAAK,UAAYF,GAC5C,kBAAC,IAAD,CAAM/C,GAAE,uBAAkB8C,EAAYX,MAClC,2BAAI2J,GACJ,4BAAKhJ,EAAYM,UAAUC,gBAzCtC,6C,GA3B6BjC,cCkI3BmL,G,mNAhIbjL,MAAQ,CACNwB,YAAa,KACbyF,WAAW,G,EAmBbf,kBAAoB,SAACtB,GACnB,IAAIuB,EAAa,IAAIC,SACrBD,EAAWE,OAAO,WAAYzB,EAAEgB,cAAcU,MAAM,IAEpDpG,IACGqG,KADH,UACWhJ,EADX,WAC6B4I,EAAY,CAAE/C,iBAAiB,IACzDhD,MAAK,SAACoG,GACL,IAAI0E,EAAqB1G,KAAKC,MAC5BD,KAAKE,UAAU,EAAK1E,MAAMwB,cAE5B0J,EAAmBrJ,MAAQ2E,EAASjG,KAAKsB,MACzC,EAAKvB,SAAS,CACZkB,YAAa0J,Q,EAKrBC,iBAAmB,SAACvG,GAClB,IAAIsG,EAAqB1G,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMwB,cAC9D0J,EAAmBZ,eAAiB1F,EAAEgB,cAAcC,MAClD,EAAKvF,SAAS,CACZkB,YAAa0J,K,EAInBlI,YAAc,WACZ,EAAK1C,SAAS,CACZ2G,WAAW,K,EAIfhE,YAAc,WACZ,EAAK3C,SAAS,CACZ2G,WAAU,K,kEAjDO,IAAD,OACdpJ,EAAK2C,KAAK9C,MAAM0M,MAAMC,OAAO1B,cACjCtH,QAAQC,IAAIzD,GAEZqC,IACGkL,MADH,UACY7N,EADZ,yBACoCM,GAAM,CACtCuF,iBAAiB,IAElBhD,MAAK,SAACC,GACLgB,QAAQC,IAAIjB,EAAIE,MAChB,EAAKD,SAAS,CACZkB,YAAanB,EAAIE,Y,+BA0Cf,IAAD,OACP,IAAKC,KAAKR,MAAMwB,YACd,OACE,wEAC6C,IAC3C,kBAAC,IAAD,CAAM9C,GAAG,UAAT,uBALC,MAUsB8B,KAAKR,MAAMwB,YAAhCK,EAVD,EAUCA,MAAOC,EAVR,EAUQA,UAEf,OACE,yBAAKjE,GAAG,YACN,wBAAIY,UAAU,SAAd,sBACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,UACb,4BAAKqD,EAAUC,OACf,2BAAID,EAAUlB,OAAd,YAGF,wBAAInC,UAAU,YACT,IACD,yBAAKN,IAAI,sBAAsBC,IAAI,MAFvC,+BAIA,2BAAI0D,EAAU0F,aACd,wBAAI/I,UAAU,YACT,IACD,yBAAKN,IAAI,sBAAsBC,IAAI,MAFvC,+BAIA,2BAAOsI,QAAQ,SAAf,2BACC7E,EAAQ,yBAAK1D,IAAK0D,EAAOzD,IAAI,WAAc,GAC5C,2BACEkB,KAAK,OACLzB,GAAG,QACH2B,KAAK,QACLmH,OAAO,wBACPC,SAAUpG,KAAK0F,oBAEjB,2BAAOQ,QAAQ,kBAAf,sCACA,2BAAOlH,KAAK,iBAAiBF,KAAK,OAAOsH,SAAUpG,KAAK2K,mBAExD,yBAAK1M,UAAU,YACX,4BAAQI,QAAS2B,KAAKwC,YACxB1D,KAAK,UACD,yBAAKnB,IAAI,oBAAoBC,IAAI,UAFnC,kBAMN,kBAACkF,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAMiH,UAAWzD,OAAQhD,KAAKyC,aAC9C,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,uBAEF,kBAACL,EAAA,EAAMM,KAAP,iKAGA,kBAACN,EAAA,EAAMO,OAAP,KACA,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,SAASc,QAAS2B,KAAKyC,aAAvC,gBAGE,kBAACvD,EAAA,EAAD,CAAQ3B,QAAQ,UAAUc,QAAS,kBAAM,EAAKnB,MAAM2N,SAAS,EAAKrL,MAAMwB,eAAxE,yB,GAvHY1B,cCgITwL,I,mNAzHXtL,MAAQ,CACJuL,OAAQ,GACRC,eAAgB,GAChBvE,WAAW,G,EAYfC,aAAe,SAACtC,GACZ,IAAIuC,EAASvC,EAAEgB,cAAcC,MAAMuB,cAC/BqE,EAAc,EAAKzL,MAAMuL,OAAOrH,QAAO,SAACoD,GAC1C,OACEA,EAAK9H,KAAK4H,cAAcG,SAASJ,IACjCG,EAAKE,YAAYJ,cAAcG,SAASJ,MAG5C,EAAK7G,SAAS,CACVkL,eAAgBC,K,EAIxBhE,kBAAoB,YACX,EAAK/J,MAAMkB,cAAgB,EAAKlB,MAAMkB,aAAagC,OAAS,IAC/D,EAAKN,SAAS,CACZ2G,WAAW,IAER,EAAKvJ,MAAMgK,QAAQC,KAAK,mB,EAGnC1E,YAAc,WACV,EAAK3C,SAAS,CACZ2G,WAAW,K,EAIjBW,WAAa,SAAChD,GACVA,EAAEiD,iBACF,IAAI4D,EAAcjH,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMwL,iBAC9B,QAAzB5G,EAAEgB,cAAcC,MAAiB4F,EAAY3D,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnH,OAASoH,EAAEpH,UAAU6K,EAAY3D,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEpH,OAASmH,EAAEnH,UAC3H,EAAKN,SAAS,CACVkL,eAAgBC,K,kEAzCH,IAAD,OAChBvL,IAAMC,IAAN,UAAa5C,EAAb,YAA+B6C,MAAK,SAACoG,GACnC,EAAKlG,SAAS,CACZiL,OAAQ/E,EAASjG,KACjBiL,eAAgBhF,EAASjG,Y,+BA2C7B,OAAKC,KAAKR,MAAMuL,OAKZ,yBAAK1N,GAAG,UACJ,wBAAIY,UAAU,eAAd,kBAEA,yBAAKA,UAAU,eACf,kBAACwJ,EAAA,EAAD,CAAYxJ,UAAU,QACtB,kBAACwJ,EAAA,EAAWC,QAAZ,KACI,kBAACD,EAAA,EAAWxI,KAAZ,CAAiB5B,GAAG,gBAApB,iBAEJ,kBAACsK,EAAA,EAAD,CACIvB,SAAUpG,KAAK0G,aACf3H,YAAY,qBACZ6I,aAAW,qBACXC,mBAAiB,kBAIrB,kBAACrJ,EAAA,EAAKK,QAAN,CAAcuH,SAAUpG,KAAKoH,WAAYU,GAAG,SAASC,aAAa,cAC9D,8CACA,4BAAQ1C,MAAM,QAAd,yBACA,4BAAQA,MAAM,OAAd,yBAEHrF,KAAK9C,MAAMkB,aACZ,kBAACc,EAAA,EAAD,CAAQjB,UAAU,SAASI,QAAS2B,KAAKiH,mBACrC,yBAAKhJ,UAAU,SAASN,IAAI,sBAAsBC,IAAI,MAD1D,kBAKA,IAGA,6CACCoC,KAAKR,MAAMwL,eAAe/K,KAAI,SAACiL,EAAOjK,GACvC,OACI,yBAAKhD,UAAU,wBAAwBkD,IAAK,QAAUF,GACtD,yBAAKhD,UAAU,eACX,kBAAC,IAAD,CAAMA,UAAU,OAAOC,GAAE,kBAAagN,EAAM7K,MAC5C,2BACK6K,EAAMlM,KADX,MACoBkM,EAAMC,gBAOlC,kBAACrI,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAMiH,UAAWzD,OAAQhD,KAAKyC,aAChD,kBAACK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrB,kBAACJ,EAAA,EAAMK,MAAP,kBAEJ,kBAACL,EAAA,EAAMM,KAAP,gEAC0D,KAE1D,kBAACN,EAAA,EAAMO,OAAP,KACI,kBAACnE,EAAA,EAAD,CAAQ3B,QAAQ,UAAUc,QAAS2B,KAAKyC,aAAxC,iBAxDD,+C,GAvDEnD,cCoDN8L,I,mNAxDX5L,MAAQ,CACN6L,UAAW,M,kEAGQ,IAAD,OACZhO,EAAK2C,KAAK9C,MAAM0M,MAAMC,OAAOyB,QACjC5L,IAAMC,IAAN,UAAa5C,EAAb,mBAA+BM,GAAM,CAACuF,iBAAiB,IACtDhD,MAAK,SAACC,GACL,EAAKC,SAAS,CACZuL,UAAWxL,EAAIE,Y,+BAQnB,IAAKC,KAAKR,MAAM6L,UACZ,OAAO,yCAHN,MAM0CrL,KAAKR,MAAM6L,UAAnDrE,EANF,EAMEA,YAAamE,EANf,EAMeA,SAAUI,EANzB,EAMyBA,KAAMC,EAN/B,EAM+BA,QAEpC,OACI,yBAAKnO,GAAG,gBACN,yBAAKY,UAAU,cACb,wBAAIA,UAAU,YAAd,eACA,2BAAI+I,GAEJ,wBAAI/I,UAAU,YAAd,YACA,2BAAIkN,GAEJ,wBAAIlN,UAAU,YAAd,QACA,2BAAIsN,GAEJ,wBAAItN,UAAU,YAAd,WAEEuN,EAAQvL,KAAI,SAACwL,EAAQxK,GACnB,OACE,yBAAKE,IAAK,SAAWF,GAArB,IAA0BwK,EAAOtL,SAAjC,QAKN,yBAAKlC,UAAU,YACX,kBAAC,IAAD,CAAMC,GAAE,WACJ,yBAAKP,IAAI,oBAAoBC,IAAI,UADrC,0B,GA9CO0B,c,OCsCZoM,OAzCf,SAAqBxO,GACnB,OAAKA,EAAMkB,cAAgBlB,EAAMkB,aAAagC,OAAS,IAC9C,kBAAC,IAAD,CAAUlC,GAAG,YAGpB,yBAAKb,GAAG,eACN,wBAAIY,UAAU,eAAd,kBACA,yBAAKA,UAAU,cACb,kBAACO,EAAA,EAAD,CAAMC,SAAUvB,EAAMuB,UACpB,kBAACD,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,qBACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,OAAOF,KAAK,OAAOC,YAAY,uBAGvE,kBAACP,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,eACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,cAAcD,YAAY,0BAA0B+I,GAAG,WAAWmB,KAAK,OAG/G,kBAACzK,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,YACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,WAAWF,KAAK,OAAOC,YAAY,+BAG3E,kBAACP,EAAA,EAAKG,MAAN,CAAYV,UAAU,mBACpB,kBAACO,EAAA,EAAKI,MAAN,CAAYX,UAAU,UAAtB,QACA,kBAACO,EAAA,EAAKK,QAAN,CAAcZ,UAAU,SAASe,KAAK,OAAOF,KAAK,UAIpD,kBAACI,EAAA,EAAD,CAAQjB,UAAU,YAAYV,QAAQ,UAAUuB,KAAK,UACrD,yBAAKb,UAAU,YAAYN,IAAI,sBAAsBC,IAAI,MADzD,iBAGA,yBAAKK,UAAU,YAAYN,IAAI,oBAAoBC,IAAI,WCP3D+N,G,4MACJnM,MAAQ,CACNpB,aAAc,KACdwN,kBAAkB,EAClBC,aAAe,GACfC,YAAa,GACbC,gBAAiB,Q,EAmBnBC,aAAe,SAAC5H,GACdA,EAAEiD,iBADkB,MAEkBjD,EAAEgB,cAAhCjF,EAFY,EAEZA,SAAUoF,EAFE,EAEFA,MAAOE,EAFL,EAEKA,SACzB/F,IACGqG,KADH,UAEOhJ,EAFP,gBAGI,CACEoD,SAAUA,EAASkF,MACnBE,MAAOA,EAAMF,MACbI,SAAUA,EAASJ,OAErB,CAAEzC,iBAAiB,IAEpBhD,MAAK,SAACC,GACLgB,QAAQC,IAAIjB,EAAIE,MAChB,EAAKD,SACH,CACE1B,aAAcyB,EAAIE,OAEpB,WACE,EAAK7C,MAAMgK,QAAQC,KAAK,oBAI7BxG,OAAM,SAACC,GAAS,IACRqL,EAAgBrL,EAAIoF,SAASjG,KAA7BkM,aACP,EAAKnM,SAAS,CACZ8L,kBAAkB,EAClBC,aAAeI,EACfH,YAAa,QACbC,gBAAiB,a,EAKzBG,YAAc,SAAC9H,GACbA,EAAEiD,iBADiB,MAESjD,EAAEgB,cAAtBG,EAFW,EAEXA,MAAOE,EAFI,EAEJA,SACf/F,IACGqG,KADH,UAEOhJ,EAFP,gBAGI,CACEwI,MAAOA,EAAMF,MACbI,SAAUA,EAASJ,OAErB,CAAEzC,iBAAiB,IAEpBhD,MAAK,SAACC,GACL,EAAKC,SACH,CACE1B,aAAcyB,EAAIE,OAEpB,WACE,EAAK7C,MAAMgK,QAAQC,KAAK,oBAI7BxG,OAAM,SAACC,GAAS,IACRqL,EAAgBrL,EAAIoF,SAASjG,KAA7BkM,aACP,EAAKnM,SAAS,CACZ8L,kBAAkB,EAClBC,aAAeI,EACfH,YAAa,QACbC,gBAAiB,a,EAKzBI,aAAe,WACbzM,IACGqG,KADH,UACWhJ,EADX,gBACkC,GAAI,CAAE6F,iBAAiB,IACtDhD,MAAK,WACJ,EAAKE,SACH,CACE1B,aAAc,OAEhB,WACE,EAAKlB,MAAMgK,QAAQC,KAAK,Y,EAMlCiF,WAAa,SAACjH,GACZ,IAAIkH,EAAY,CACdlM,SAAUgF,EAAYhF,SACtBoF,MAAOJ,EAAYI,MACnBlE,MAAO8D,EAAY9D,MACnBoE,SAAUN,EAAYM,UAExB/F,IACGkL,MADH,UAEO7N,EAFP,kBAEwB,EAAKyC,MAAMpB,aAAaiC,IAFhD,SAGIgM,EACA,CAAEzJ,iBAAiB,IAEpBhD,MAAK,SAACC,GACLgB,QAAQC,IAAIqE,UACLkH,EAAU5G,SACjB4G,EAAUhM,IAAMR,EAAIE,KAAKM,IACzBgM,EAAUjM,OAASP,EAAIE,KAAKK,OAC5BiM,EAAU7K,KAAO3B,EAAIE,KAAKyB,KAC1B6K,EAAUC,aAAezM,EAAIE,KAAKuM,aAClC,EAAKxM,SACH,CACE1B,aAAciO,IAEhB,WACE,EAAKnP,MAAMgK,QAAQC,KAAK,kBAI7BxG,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIoF,UADF,IAGVuG,EADGN,EAAgBrL,EAAIoF,SAASjG,KAA7BkM,aAEsB,iBAA1BA,EAAaO,SACXC,OAAOC,KAAKT,EAAaU,YAAY5F,SAAS,YAC/CwF,EAAU,yDACFE,OAAOC,KAAKT,EAAaU,YAAY5F,SAAS,WACtDwF,EAAU,0DAGZA,EAAUN,EAEZ,EAAKnM,SAAS,CACZ8L,kBAAkB,EAClBC,aAAeU,EACfT,YAAa,QACbC,gBAAiB,a,EAKzBa,kBAAoB,SAACxI,GACnBvD,QAAQC,IAAI,0BACZsD,EAAEiD,iBAFuB,MAGoBjD,EAAEgB,cAAvC7D,EAHiB,EAGjBA,MAAOyF,EAHU,EAGVA,YAAa5G,EAHH,EAGGA,OAAQ6J,EAHX,EAGWA,KACpCvK,IACGqG,KADH,UAEOhJ,EAFP,sBAGI,CACEwE,MAAOA,EAAM8D,MACb2B,YAAaA,EAAY3B,MACzBjF,OAAQA,EAAOiF,MACf4E,KAAMA,EAAK5E,OAEb,CAAEzC,iBAAiB,IAEpBhD,MAAK,SAACC,GACL,EAAK3C,MAAMgK,QAAQC,KAAK,mB,EAI9B0F,kBAAoB,SAACzI,GACnBA,EAAEiD,iBADuB,MAEmBjD,EAAEgB,cAAvCpG,EAFkB,EAElBA,KAAMgI,EAFY,EAEZA,YAAamE,EAFD,EAECA,SAAUI,EAFX,EAEWA,KACpC7L,IAAMqG,KAAN,UAAchJ,EAAd,kBAAuC,CACrCiC,KAAMA,EAAKqG,MACX2B,YAAaA,EAAY3B,MACzB8F,SAAUA,EAAS9F,MACnBkG,KAAMA,EAAKlG,MACXnF,KAAM,EAAKV,MAAMpB,cAChB,CAAEwE,iBAAiB,IACrBhD,MAAK,SAACC,GACL,EAAK3C,MAAMgK,QAAQC,KAAK,e,EAI5B2F,iBAAmB,SAACpC,GAAwB,IAClCrJ,EAA+BqJ,EAA/BrJ,MAAOhB,EAAwBqK,EAAxBrK,IACX0M,EAAiB,CACnBnJ,WAAW,EACXvC,MAAOA,EACPyI,eAJqCY,EAAnBZ,gBAMpBpK,IACGkL,MADH,UACY7N,EADZ,yBACoCsD,GAAO0M,EAAgB,CACvDnK,iBAAiB,IAElBhD,MAAK,SAACC,GACL,IAAImN,EAAcnN,EAAIE,KAAKuB,UAAUlB,OACjC6M,EAAajJ,KAAKC,MAAMD,KAAKE,UAAU,EAAK1E,MAAMpB,eACtD6O,EAAW7M,QAAU4M,EACrB,IAAIE,EAAU,EAAKC,WAAWF,EAAW7M,QACrC6M,EAAWzL,OAAS0L,IACtBD,EAAWzL,KAAO0L,GAEpBrM,QAAQC,IAAImM,GACZvN,IACGkL,MADH,UAEO7N,EAFP,kBAEwB,EAAKyC,MAAMpB,aAAaiC,IAFhD,SAGI4M,EACA,CAAErK,iBAAiB,IAEpBhD,MAAK,SAACoG,GACL,EAAKlG,SACH,CACE1B,aAAc6O,GAEhB,EAAK/P,MAAMgK,QAAQC,KAAK,sB,EAMpCgG,WAAa,SAACC,GACZ,OAAIA,GAAc,IACT,aACEA,EAAa,IACf,WACEA,EAAa,KACf,aACEA,EAAa,IACf,aAEA,Y,EAIXC,iBAAmB,WACjB,EAAKvN,SAAS,CACZ8L,kBAAkB,K,EAItB0B,mBAAqB,a,kEAlPA,IAAD,OACbtN,KAAKR,MAAMpB,cACdsB,IACGC,IADH,UACU5C,EADV,cAC+B,CAAE6F,iBAAiB,IAC/ChD,MAAK,SAACC,GACLH,IACGC,IADH,UACU5C,EADV,kBAC2B8C,EAAIE,KAAKM,KAAO,CAAEuC,iBAAiB,IAC3DhD,MAAK,SAACM,GACL,EAAKJ,SAAS,CACZ1B,aAAc8B,EAAKH,e,+BA6OvB,IAAD,OACP,OACE,yBAAK1C,GAAG,OACN,kBAAC,EAAD,CAAUiB,SAAU0B,KAAKmM,aAAc/N,aAAc4B,KAAKR,MAAMpB,eAC/D4B,KAAKR,MAAMpB,aAAe,kBAAC,EAAD,MAAgB,GAE3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmP,OAAK,EAACC,KAAK,IAAIlE,UAAW7H,IACjC,kBAAC,IAAD,CAAO+L,KAAK,UAAUC,OAAQ,SAACC,GAC3B,OAAO,kBAAC,EAAD,eAAQhP,SAAU,EAAKsN,cAAkB0B,OAEpD,kBAAC,IAAD,CAAOF,KAAK,SAASC,OAAQ,SAACC,GAC1B,OAAO,kBAAC,EAAD,eAAOtO,QAAS,EAAK8M,aAAiBwB,OAEjD,kBAAC,IAAD,CAAOF,KAAK,SAASlE,UAAWjK,IAChC,kBAAC,IAAD,CAAOmO,KAAK,eAAelE,UAAW/J,IACtC,kBAAC,IAAD,CAAOgO,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAACC,GAClC,OAAO,kBAAC,EAAD,eAAWtP,aAAc,EAAKoB,MAAMpB,aAAcyE,SAAU,EAAKsJ,cAAkBuB,OAE9F,kBAAC,IAAD,CAAOF,KAAK,gBAAgBC,OAAQ,SAACC,GACjC,OAAO,kBAAC,EAAD,eAAiBtP,aAAc,EAAKoB,MAAMpB,aAAciI,OAAQ,EAAK+F,YAAgBsB,OAEhG,kBAAC,IAAD,CAAOF,KAAK,aAAaC,OAAQ,SAACC,GAC9B,OAAO,kBAAC,EAAD,eAAUtP,aAAc,EAAKoB,MAAMpB,cAAkBsP,OAEhE,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,OAAQ,SAACC,GAClC,OAAO,kBAAC,EAAD,eAAiBtP,aAAc,EAAKoB,MAAMpB,cAAkBsP,OAEvE,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,cAAcC,OAAQ,SAACC,GACrC,OAAO,kBAAC,EAAD,eAAgBtP,aAAc,EAAKoB,MAAMpB,cAAkBsP,OAEtE,kBAAC,IAAD,CAAOF,KAAK,qBAAqBC,OAAQ,SAACC,GACtC,OAAO,kBAAC,EAAD,eAAiBtP,aAAc,EAAKoB,MAAMpB,aAAcK,SAAU,EAAKmO,mBAAuBc,OAEzG,kBAAC,IAAD,CAAOF,KAAK,8BAA8BC,OAAQ,SAACC,GAC/C,OAAO,kBAAC,EAAD,eAAoBtP,aAAc,EAAKoB,MAAMpB,cAAkBsP,OAE1E,kBAAC,IAAD,CAAOF,KAAK,0BAA0BC,OAAQ,SAACC,GAC3C,OAAO,kBAAC,EAAD,eAAkBtP,aAAc,EAAKoB,MAAMpB,cAAkBsP,EAA7D,CAAyErE,UAAW,EAAKiE,yBAEpG,kBAAC,IAAD,CAAOE,KAAK,gBAAgBC,OAAQ,SAACC,GACjC,OAAO,kBAAC,EAAiBA,MAE7B,kBAAC,IAAD,CAAOF,KAAK,6BAA6BC,OAAQ,SAACC,GAC9C,OAAO,kBAAC,EAAD,eAAW7C,SAAU,EAAKiC,kBAAsBY,OAE3D,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAACC,GACjC,OAAO,kBAAC,GAAD,eAAQtP,aAAc,EAAKoB,MAAMpB,cAAkBsP,OAE7D,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,OAAQ,SAACC,GACnC,OAAO,kBAAC,GAAD,eAAajP,SAAU,EAAKoO,kBAAmBzO,aAAc,EAAKoB,MAAMpB,cAAkBsP,OAErG,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,OAAQ,SAACC,GACpC,OAAO,kBAAC,GAAD,eAActP,aAAc,EAAKoB,MAAMpB,cAAkBsP,QAGtE,kBAAC5K,EAAA,EAAD,CAAOC,KAAM/C,KAAKR,MAAMoM,iBAAkB5I,OAAQhD,KAAKqN,kBACrD,kBAACvK,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,KAAcnD,KAAKR,MAAMsM,cAE3B,kBAAChJ,EAAA,EAAMM,KAAP,KACGpD,KAAKR,MAAMqM,cAEd,kBAAC/I,EAAA,EAAMO,OAAP,KACE,kBAACnE,EAAA,EAAD,CAAQ3B,QAASyC,KAAK+L,gBAAiB1N,QAAS2B,KAAKqN,kBAArD,qB,GA/TMM,IAAMrO,WAyUToK,eAAWiC,IC7VNiC,QACW,cAA7BC,OAAO1C,SAAS2C,UAEe,UAA7BD,OAAO1C,SAAS2C,UAEhBD,OAAO1C,SAAS2C,SAASlE,MACvB,2DCXNmE,IAASN,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMO,WAAP,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzO,MAAK,SAAA0O,GACJA,EAAaC,gBAEd5N,OAAM,SAAA6N,GACL3N,QAAQ2N,MAAMA,EAAMjC,a","file":"static/js/main.86c81cee.chunk.js","sourcesContent":["export const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000'\n\n//process.env.REACT_APP_API_URL ||","import React from \"react\"; \nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {Link} from 'react-router-dom';\n\nimport './styles/MyNavBar.css';\n\nexport default function MyNavBar(props) {\n  return (\n    <div>\n      <Navbar collapseOnSelect id=\"myNavBar\" fixed=\"top\" variant=\"light\" expand=\"lg\">\n        <div id='fakeitem'></div>\n        <Navbar.Brand href=\"/\"><img src=\"/images/ecohero_logo.png\" alt=\"EH\" /> EcoHero</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Navbar.Toggle><Link to=\"/challenges\" data-toggle=\"collapse\" >Challenges</Link></Navbar.Toggle>\n            <Navbar.Toggle><Link to=\"/ranks\" data-toggle=\"collapse\">Ranks</Link></Navbar.Toggle>\n            <Navbar.Toggle><Link to=\"/leaderboard\" data-toggle=\"collapse\">Hall of Heroes</Link></Navbar.Toggle>\n            {props.loggedInUser ? (\n              <Navbar.Toggle className=\"auth-link\"><button onClick={props.onLogOut} data-toggle=\"collapse\">Logout</button></Navbar.Toggle>\n            ) : (\n              <>\n              <Navbar.Toggle className=\"auth-link\"><Link to=\"/signup\" data-toggle=\"collapse\">Sing Up</Link></Navbar.Toggle>\n              <Navbar.Toggle className=\"auth-link\"><Link to=\"/login\" data-toggle=\"collapse\">Login</Link></Navbar.Toggle>\n              </>\n            )\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom';\nimport \"./styles/SignUp.css\";\n\nfunction SignUp(props) {\n  return (\n    <div id=\"signup\">\n      <Form className=\"formUp\" onSubmit={props.onSignUp}>\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter username\" name=\"username\"/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\n        </Form.Group>\n\n        <Form.Text className=\"small-text\">\n          Already a member? <Link to=\"/login\">Login</Link>\n        </Form.Text>\n\n        <div className=\"signUpBtn\">\n          <Button className=\"signUpBtnClick\" variant=\"primary\" type=\"submit\">\n          <img className=\"leaf1\" src=\"/images/plant02.png\" alt=\"o\" />\n            Sign Up\n          <img className=\"leaf2\" src=\"/images/plant.png\" alt=\"o\" />\n          </Button>\n        </div>\n      </Form>\n    </div>\n    \n  )\n}\n\nexport default SignUp\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom';\nimport \"./styles/LogIn.css\";\n\n\nfunction LogIn(props) {\n  return (\n    <div id=\"login\">\n      <Form className=\"formIn\" onSubmit={props.onLogIn}>\n        <Form.Group>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Enter Password\" name=\"password\" />\n        </Form.Group>\n\n        <Form.Text className=\"small-text\">\n          Not a member yet? <Link to=\"/signup\">Sign Up</Link>\n        </Form.Text>\n\n        <div className=\"loginBtn\">\n          <Button className=\"loginBtnClick\" variant=\"primary\" type=\"submit\">\n          <img className=\"leaf1\" src=\"/images/plant02.png\" alt=\"o\" />\n           Log In\n          <img className=\"leaf2\" src=\"/images/plant.png\" alt=\"o\" />\n          </Button>\n        </div>\n      </Form>\n    </div>\n    \n  )\n}\n\nexport default LogIn","import React, { Component } from 'react'\nimport \"./styles/Ranks.css\";\n\nclass Ranks extends Component {\n    render() {\n        return (\n            <div className=\"listContainer\">\n              <h4 className=\"rankTitle\">Ranking System</h4>\n              <div className=\"rankContainer\">\n                <div className=\"rankAlign\">\n                    <h5><strong>New Hero</strong></h5>\n                    <p>0-9.999 points</p>   \n                </div>\n              </div>\n                \n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Chill Hero</strong></h5>\n                    <p>10.000-24.999 points</p>   \n                  </div>  \n                <p className=\"perks\"><strong>Perks:</strong> Create groups</p>\n                </div>\n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Smart Hero</strong></h5>\n                    <p>25.000-49.999 points</p>   \n                  </div>\n                <p className=\"perks\"><strong>Perks:</strong> Create challenges</p>   \n                </div>\n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Big Hero</strong></h5>\n                    <p>50.000-99.999 points</p>  \n                  </div>\n                <p className=\"perks\"><strong>Perks:</strong> 10.000 Bonus points</p>  \n                </div>\n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Super Hero</strong></h5>\n                    <p>100.000+ points</p>   \n                  </div>\n                <p className=\"perks\"><strong>Perks:</strong> Nice surprises</p>\n                </div>    \n            </div>\n        )\n    }\n}\n\nexport default Ranks\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport \"./styles/Leaderboard.css\";\n\nclass Leaderboard extends Component {\n  state = {\n    users: [],\n  };\n\n  componentDidMount() {\n    axios.get(`${API_URL}/users/leaderboard`).then((res) => {\n      this.setState({\n        users: res.data,\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.users) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div id=\"leaderboard\">\n        <h3 className=\"HallTitle\">Hall of Heroes</h3>\n        <ol className=\"list\">\n          {this.state.users.map((user) => {\n            const { username, points, _id } = user;\n            return (\n              <Link  className=\"listItems\" to={`/user/${_id}`}>\n                  <li>\n                    {username} {points} points\n                  </li> \n              </Link>\n            );\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default Leaderboard;\n","import React from \"react\";\nimport \"./styles/About.css\";\n\nfunction About() {\n  return (\n    <div id=\"about\">\n      <h5>About us</h5>\n      <div className=\"white-bg\">\n        <div className=\"subtitle\">Hello world!</div>\n        <p className=\"about-text\">\n          We are <a href=\"https://www.linkedin.com/in/elise-dujardin/\" target=\"_blank\" rel=\"noopener noreferrer\" >Elise Dujardin</a> & <a href=\"https://www.linkedin.com/in/joel-roca-martinez-80b63629/\" target=\"_blank\" rel=\"noopener noreferrer\" >Joel Roca Martinez</a> - Web Developers & IronHackers - and we are\n          super excited to have you here!\n        </p>\n        <p className=\"about-text\">\n          <strong>Welcome to EcoHero</strong>, a platform that we have created\n          in order to revert the destruction that humanity is creating in our\n          planet. In here you will find a community of people that work with\n          passionand perseverance in{\" \"}\n          <strong>making Planet Earth a better place to live in</strong> ,\n          today, and tomorrow.\n        </p>\n        <p className=\"about-text\">\n          Join us in this frenetic quest and{\" \"}\n          <strong>start today creating and sharing your impact!</strong>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport {Link} from 'react-router-dom';\nimport \"./styles/MyCarousel.css\";\n\nexport default class MyCarousel extends Component {\n  state = {\n    achievements: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}/achievements/allcompleted`)\n      .then((res) => {\n        this.setState({\n          achievements: res.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n  render() {\n    if (!this.state.achievements) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div>\n        <Carousel id=\"myCarousel\">\n          {this.state.achievements.map((achievement, i) => {\n            return (\n              <Carousel.Item key={\"publicSuccess\" + i}>\n              <Link to={`/achievement/${achievement._id}`}>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/images/carouselbg.png\"\n                  alt=\"background\"\n                />\n                <Carousel.Caption >\n                  <div className=\"carousel-image\">\n                    <table className=\"img-container\">\n                    <tr>\n                    {achievement.image ? (\n                      <td><img\n                        className=\"d-block\"\n                        src={achievement.image}\n                        alt={achievement.challenge.title}\n                      /></td>\n                    ) : (\n                      \"\"\n                    )}\n                    </tr>\n                    </table>\n                  </div>\n                  <div className=\"carousel-text\">\n                    <h5>{achievement.challenge.title}</h5>\n                    <div className=\"user-infos\">\n                      <img\n                        src={achievement.user.image}\n                        alt={achievement.user.username}\n                      />\n                      <div>\n                      <p className=\"username\">{achievement.user.username}</p>\n                      <p className=\"points-info\">{achievement.user.rank} - {achievement.user.points} pts</p>\n                      \n                      </div>\n                    </div>\n                  </div>\n                </Carousel.Caption>\n                </Link>\n              </Carousel.Item>\n            );\n          })}\n        </Carousel>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport About from \"./About\";\nimport MyCarousel from \"./MyCarousel\";\nimport \"./styles/Home.css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div id=\"home\">\n        <div id=\"hometitle\">\n          <h4>Welcome to</h4>\n          <h3>EcoHero</h3>\n        </div>\n        <div>\n          <p className=\"punchline\">\n            Join the community, set your eco-friendly goals, share your success\n            and <strong>become a Super EcoHero</strong>!\n          </p>\n          <Link to=\"/signup\">\n            <button className=\"bouncy\"><img src=\"/images/plant02.png\" alt=\"o\" /> Get Started ! <img src=\"/images/plant.png\" alt=\"o\" /></button>\n          </Link>\n        </div>\n\n        <div className=\"carousel-container\">\n          <div className=\"carousel-title\">\n            <h4>Get Inspired</h4>\n            <h5>... Our EcoHeroes success</h5>\n          </div>\n\n          <MyCarousel />\n        </div>\n\n        <About />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport ProgressBar from \"react-bootstrap/ProgressBar\"\nimport \"./styles/ExperienceBar.css\"\n\n\nfunction ExperienceBar(props) {\n\n    let newHero = {\n        title: \"New Hero\",\n        points: 0\n    }\n\n    let chillHero = {\n        title: \"Chill Hero\",\n        points: 10000\n    }\n\n    let smartHero = {\n        title: \"Smart Hero\",\n        points: 25000\n    }\n\n    let bigHero = {\n        title: \"Big Hero\",\n        points: 50000\n    }\n\n    let superHero = {\n        title: \"Super Hero\",\n        points: 100000\n    }\n\n    \n                 //------------ Conditions from Chill Hero to Smart Hero ---------------// //\n    if (props.loggedInUser.points >= 10000 && props.loggedInUser.points < 25000) {\n        let percentage = Math.ceil((props.loggedInUser.points - chillHero.points)/(smartHero.points - chillHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{chillHero.title}</p>\n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/>\n                    <p className=\"ranks\">{smartHero.title}</p>\n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{smartHero.points} points</p>    \n            </div>\n        ) \n                  //------------ Conditions from Smart Hero to Big Hero ---------------//\n    } else if (props.loggedInUser.points >= 25000 && props.loggedInUser.points < 50000) {\n        let percentage = Math.ceil((props.loggedInUser.points - smartHero.points)/(bigHero.points - smartHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{smartHero.title}</p>\n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/>\n                    <p className=\"ranks\">{bigHero.title}</p>\n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{bigHero.points} points</p>    \n            </div>\n        ) \n                   //------------ Conditions from Big Hero to Super Hero ---------------//\n    } else if (props.loggedInUser.points >= 50000 && props.loggedInUser.points < 100000) {\n        let percentage = Math.ceil((props.loggedInUser.points - bigHero.points)/(superHero.points - bigHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{bigHero.title}</p> \n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/> \n                    <p className=\"ranks\">{superHero.title}</p>\n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{superHero.points} points</p>    \n            </div>\n        ) \n                        //------------ Conditions for Super Hero ---------------// \n    } else if (props.loggedInUser.points >= 100000) {\n        return (\n            <div>\n              <p className=\"ranks\">{superHero.title}</p>\n              <p className=\"points\">{props.loggedInUser.points} points</p>    \n            </div>\n        ) \n                   //------------ Conditions from New Hero to Chill Hero ---------------// \n    } else {\n        let percentage = Math.ceil((props.loggedInUser.points)/(chillHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{newHero.title}</p> \n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/> \n                    <p className=\"ranks\">{chillHero.title}</p> \n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{chillHero.points} points</p>    \n            </div>\n        )\n    }\n\n\n    \n}\n\nexport default ExperienceBar\n\n\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport axios from \"axios\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from \"react-bootstrap/Button\";\nimport { API_URL } from \"../config\";\nimport \"./styles/MyProfile.css\";\n\nclass MyProfile extends Component {\n  state = {\n    userAchievements: [],\n    showDeletePopup: false,\n  };\n\n  componentDidMount() {\n    if (this.props.loggedInUser) {\n      axios\n        .get(`${API_URL}/achievements/user/${this.props.loggedInUser._id}`, {\n          withCredentials: true,\n        })\n        .then((res) => {\n          this.setState({\n            userAchievements: res.data,\n          });\n        });\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n      showDeletePopup: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup:false\n    })\n  }\n\n  handleDeleteUser = () => {\n    axios.delete(`${API_URL}/users/${this.props.loggedInUser._id}`, {withCredentials: true})\n      .then((res) => {\n        this.props.onDelete()\n      })\n  };\n\n\n  render() {\n    if (!this.state.userAchievements || !this.props.loggedInUser) {\n      return (\n        <p>\n          Loading... If you're not login yet, please{\" \"}\n          <Link to=\"/login\">click on this link</Link>\n        </p>\n      );\n    }\n\n    return (\n      <div id=\"myProfile\">\n        <h3 className=\"title\">Your Profile</h3>\n        <div className=\"white-card\">\n\n          <div className=\"profilePic\">\n            <img src={this.props.loggedInUser.image} alt=\"Avatar\" />\n          </div>\n             \n            <div className=\"infoContainer\">\n              <div className=\"users-info\">\n                <p><strong>Name:</strong> {this.props.loggedInUser.username}</p>  \n              </div>\n              <div className=\"points-info\">\n                <p className=\"total-rank\"><strong>Rank:</strong> {this.props.loggedInUser.rank} - {this.props.loggedInUser.points} points</p> \n              </div>\n            </div>\n          <ExperienceBar loggedInUser={this.props.loggedInUser} />\n          \n\n          <div className=\"edit-btn\">\n              <Link to=\"/profile/edit\">\n                <img src=\"/images/edit.png\" alt=\"Valid\" />Edit\n              </Link>\n              <button className=\"deleteUser\" onClick={this.handleClick}>\n                <img src=\"/images/delete.png\" alt=\"Delete\" />Delete\n              </button>\n          </div>\n        </div>\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this account ?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button\n              variant=\"success\"\n              onClick={this.handleDeleteUser}\n            >\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport MyCarousel from \"./MyCarousel\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport \"./styles/HeroHome.css\";\n\nclass HeroHome extends Component {\n  state = {\n    userAchievements: [],\n    showDeletePopup: false,\n    targetedAchievID: null\n\n  };\n\n  \n\n  getUserAchievements = () => {\n    axios\n        .get(`${API_URL}/achievements/user/${this.props.loggedInUser._id}`, {\n          withCredentials: true,\n        })\n        .then((res) => {\n          let filterArr = res.data.filter(elem => elem.completed === false)\n          this.setState({\n            userAchievements: filterArr,\n          });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.loggedInUser) {\n      this.getUserAchievements()\n    }\n  }\n\n  componentDidUpdate(newProps) {\n    if (!newProps.loggedInUser) {\n      this.getUserAchievements()\n    }\n  }\n\n  handleClick = (achievID) => {\n    this.setState({\n      showDeletePopup: true,\n      targetedAchievID: achievID\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup:false\n    })\n  }\n\n  handleDelete = (achievID) => {\n    axios.delete(`${API_URL}/achievements/${achievID}`, {withCredentials: true})\n      .then((res) => {\n        let clonedUserAchiev = JSON.parse(JSON.stringify(this.state.userAchievements))\n        clonedUserAchiev.forEach((e, i) => {\n          if(e._id === res.data._id)  clonedUserAchiev.splice(i, 1)\n        })\n        console.log(clonedUserAchiev)\n        this.setState({\n          userAchievements: clonedUserAchiev,\n          showDeletePopup:false\n        })\n      })\n  };\n\n  render() {\n    if (!this.state.userAchievements || !this.props.loggedInUser) {\n      return (\n        <p>\n          Loading... If you're not login yet, please{\" \"}\n          <Link to=\"/login\">click on this link</Link>\n        </p>\n      );\n    }\n    return (\n      <div id=\"heroHome\">\n        <h3 className=\"title\">Hero Home</h3>\n        <div className=\"white-card\">\n          <div className=\"header\">\n            <img src={this.props.loggedInUser.image} alt=\"Avatar\" />\n            <div>\n              <div className=\"users-info\">\n                <h5 className=\"userName\">{this.props.loggedInUser.username}</h5>\n              </div>\n              <div className=\"points-info\">\n                <p className=\"total-rank\">{this.props.loggedInUser.rank}</p>\n                <p className=\"total-points\">\n                  - {this.props.loggedInUser.points} points\n                </p>\n              </div>\n            </div>\n          </div>\n          <ExperienceBar loggedInUser={this.props.loggedInUser} />\n          <div className=\"your-tasks\">\n            <h4>\n              <img src=\"/images/plant02.png\" alt=\"o\"  />\n              Your EcoHero Tasks\n            </h4>\n            <div>\n              {\n                this.state.userAchievements.length === 0 ? <div>You don't have any goal set yet... </div> : \"\"\n              }\n              {\n                this.state.userAchievements.slice(0, 2).map((achievement, i) => {\n               \n                  let startDate = new Date(achievement.starting_date);\n                  let date = startDate.getDate();\n                  let month = startDate.getMonth() + 1;\n                  let start = date + \"/\" + month;\n                  return (\n                    <div className=\"one-task\" key={\"goals\" + i}>\n                    <div className=\"date-title\">\n                      <Link to={`/achievement/${achievement._id}`}>\n                        <p>{start}</p>\n                        <h6>{achievement.challenge.title}</h6>\n                      </Link>\n                      </div>\n                      <div className=\"edit-btn\">\n                        <Link to={`/goals-edit/${achievement._id}`}>\n                          <img src=\"/images/valid.png\" alt=\"Valid\" />\n                        </Link>\n                        <button\n                        onClick={() => this.handleClick(achievement._id)}\n                      >\n                        <img src=\"/images/delete.png\" alt=\"Delete\" />\n                      </button>\n                      </div>\n                    </div>\n                  );\n                \n              })}\n              <div className=\"btn-container\">\n              {\n                this.state.userAchievements.filter(e => e.completed === false).length > 2 ? <div className=\"see-all\"> <Link to=\"/goals-success\" > See all my goals</Link> </div> : \"\"\n              }\n              <Link className=\"btn-add\" to=\"/challenges\">Add one more !</Link>\n            </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"carousel-container\">\n          <h4 className=\"carousel-title\">Get Inspired</h4>\n          <MyCarousel />\n        </div>\n\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this goal from your list ?\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button variant=\"success\" onClick={() => this.handleDelete(this.state.targetedAchievID)}>\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default HeroHome;\n","import React from \"react\";\nimport Nav from 'react-bootstrap/Nav';\nimport {Link} from 'react-router-dom';\nimport './styles/Dashboard.css';\n\nfunction Dashboard() {\n  return (\n    <div>\n      <Nav id=\"dashboard\" activeKey=\"/home\">\n        <Nav.Item>\n          <Link to=\"/hero-home\"> <img src=\"/images/home.png\" alt='hero-home'/> Hero Home </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/goals-success\"> <img src=\"/images/goal.png\" alt='goals & success'/>  Goals & Success </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/groups\"> <img src=\"/images/collaboration.png\" alt='group'/> Groups </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/profile\"> <img src=\"/images/user.png\" alt='profile'/> Profile </Link>\n        </Nav.Item>\n      </Nav>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/EditProfileForm.css\";\n\nclass EditProfileForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}/auth/user`, { withCredentials: true })\n      .then((result) => {\n        axios\n          .get(`${API_URL}/users/${result.data._id}`, { withCredentials: true })\n          .then((res) => {\n            this.setState({\n              loggedInUser: result.data,\n              user: res.data,\n            });\n          });\n      });\n  }\n\n  handleUsernameChange = (e) => {\n    let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n    updatedUser.username = e.currentTarget.value;\n    this.setState({\n      user: updatedUser,\n    });\n  };\n\n  handleEmailChange = (e) => {\n    let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n    updatedUser.email = e.currentTarget.value;\n    this.setState({\n      user: updatedUser,\n    });\n  };\n\n  handlePasswordChange = (e) => {\n    let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n    updatedUser.password = e.currentTarget.value;\n    this.setState({\n      user: updatedUser,\n    });\n  };\n\n  handleImageChange = (e) => {\n    let uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.currentTarget.files[0]);\n\n    axios\n      .post(`${API_URL}/upload`, uploadData, { withCredentials: true })\n      .then((response) => {\n        let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n        updatedUser.image = response.data.image;\n        this.setState({\n          user: updatedUser,\n        });\n      })\n  };\n\n  render() {\n    if (!this.state.user) {\n      return (\n        <p>\n          Loading... If you're not login yet, please{\" \"}\n          <Link to=\"/login\">click on this link</Link>\n        </p>\n      );\n    }\n    const { username, image, password, email } = this.state.user;\n    return (\n      <div id=\"editProfile\">\n        <h3 className=\"title\">Edit your profile</h3>\n        <div className=\"white-card\">\n            <div className=\"image-edit\">\n            <img src={image} alt=\"Avatar\" />\n            <div className=\"input-container\">\n            <label htmlFor=\"image\">Modify your profile picture:</label>\n            <input\n              type=\"file\"\n              id=\"image\"\n              name=\"image\"\n              accept=\"image/png, image/jpeg\"\n              onChange={this.handleImageChange}\n            />\n            </div>\n          </div>\n\n          <div className=\"input-container\">\n            <label>Update your username</label>\n            <input\n              onChange={this.handleUsernameChange}\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Enter username\"\n              value={username}\n            ></input>\n          </div>\n\n          <div className=\"input-container\">\n            <label>Change your email</label>\n            <input\n              onChange={this.handleEmailChange}\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n            ></input>\n          </div>\n\n          <div className=\"input-container\">\n            <label>Set a new password</label>\n            <input\n              onChange={this.handlePasswordChange}\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              placeholder=\"Enter password\"\n            ></input>\n          </div>\n\n          <button\n            className=\"submit-btn\"\n            onClick={() => this.props.onEdit(this.state.user)}\n            type=\"submit\"\n          >\n            <img className=\"editLeafL\" src=\"/images/plant02.png\" alt=\"o\" /> Edit\n            <img className=\"editLeafR\" src=\"/images/plant.png\" alt=\"o\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditProfileForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/ChallengesList.css\";\n\n\n\nclass ChallengesList extends Component {\n  state = {\n    challenges: [],\n    filteredChallenges: [],\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    axios.get(`${API_URL}/challenges`).then((response) => {\n      this.setState({\n        challenges: response.data,\n        filteredChallenges: response.data,\n      });\n    });\n  }\n\n  handleSearch = (e) => {\n    let search = e.currentTarget.value.toLowerCase();\n    let cloneChallenges = this.state.challenges.filter((item) => {\n      return (\n        item.title.toLowerCase().includes(search) ||\n        item.description.toLowerCase().includes(search)\n      );\n    });\n    this.setState({\n      filteredChallenges: cloneChallenges,\n    });\n  };\n\n  handleCreateClick = () => {\n    if (!this.props.loggedInUser || this.props.loggedInUser.points < 25000) {\n      this.setState({\n        showPopUp: true,\n      });\n    } else this.props.history.push(\"/challenges/create\");\n  };\n\n  handleClose = () => {\n    this.setState({\n      showPopUp: false,\n    });\n  };\n\n  handleSort = (e) => {\n    e.preventDefault()\n    let cloneChallenges = JSON.parse(JSON.stringify(this.state.filteredChallenges)) \n    e.currentTarget.value ===\"low\" ? cloneChallenges.sort((a, b) => a.points - b.points) : cloneChallenges.sort((a, b) => b.points - a.points)\n    this.setState({\n      filteredChallenges: cloneChallenges,\n    })\n  }\n\n  render() {\n    if (!this.state.challenges) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div id=\"challenges\">\n        <h3 className=\"challengesTitle\">Challenges</h3>\n\n        <div className=\"search-part\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">&#128270;</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            onChange={this.handleSearch}\n            placeholder=\"Search for a challenge\"\n            aria-label=\"Search for a challenge\"\n            aria-describedby=\"basic-addon1\"\n          />\n        </InputGroup>\n\n        <Form.Control onChange={this.handleSort} as=\"select\" defaultValue=\"Sort by...\">\n            <option>Sort by...</option>\n            <option value=\"high\">Points - high to low </option>\n            <option value=\"low\">Points - low to high</option>\n          </Form.Control>\n          {this.props.loggedInUser ? (\n          <Button className=\"bouncy\" onClick={this.handleCreateClick}>\n            <img className=\"plantL\" src=\"/images/plant02.png\" alt=\"o\" />\n            Create a Challenge\n          </Button>\n        ) : (\n          \"\"\n        )}\n        </div>\n        \n        {this.state.filteredChallenges.map((challenge, i) => {\n          return (\n            <div className=\"one-success-container\" key={\"challenge\" + i}>\n              <div className=\"one-success\">\n                <Link className=\"link\" to={`/challenge/${challenge._id}`}>\n                  <p>\n                    {challenge.title} -{\" \"}\n                    <strong>{challenge.points} points</strong>\n                  </p>\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n        <Modal show={this.state.showPopUp} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Not yet!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Achieve Smart Hero rank in order to do that &#x1F609;{\" \"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={this.handleClose}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ChallengesList;\n","import React from 'react'\nimport {FacebookShareButton, TwitterShareButton, WhatsappShareButton} from \"react-share\";\nimport {FacebookIcon, TwitterIcon, WhatsappIcon} from \"react-share\";\nimport \"./styles/SocialMedia.css\";\n\n\n\n\n\n\nexport default function SocialMedia(props) {\n\n\n    return (\n        \n                     <div id=\"socialMedia\" >\n                      <div className=\"sharing-logo\">\n                        <FacebookShareButton className=\"sharing-logo\" url={`https://eco-hero.herokuapp.com/achievements/${props.achievementID}`} quote={\"Hey! I have achieved this challenge at Eco-Hero! Check it out!\"}><FacebookIcon size={32} /></FacebookShareButton>\n                      </div>\n\n                      <div className=\"sharing-logo\">\n                        <TwitterShareButton className=\"sharing-logo\" url={`https://eco-hero.herokuapp.com/achievements/${props.achievementID}`} quote={\"Hey! I have achieved this challenge at Eco-Hero! Check it out!\"}><TwitterIcon size={32} /></TwitterShareButton>\n                      </div>\n\n                      <div className=\"sharing-logo\">\n                        <WhatsappShareButton className=\"sharing-logo\" url={`https://eco-hero.herokuapp.com/achievements/${props.achievementID}`} quote={\"Hey! I have achieved this challenge at Eco-Hero! Check it out!\"}><WhatsappIcon size={32} /></WhatsappShareButton> \n                      </div>\n                    </div>\n            \n     \n    )\n}\n","import React, { Component } from \"react\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport SocialMedia from \"./SocialMedia\"\nimport \"./styles/GoalsAndSucces.css\";\n\nclass GoalsAndSuccess extends Component {\n  state = {\n    userAchievements: [],\n    showDeletePopup: false,\n    targetedAchievID: null,\n    filteredAchievements: []\n  };\n\n  componentDidMount() {\n    if (this.props.loggedInUser) {\n      axios\n        .get(`${API_URL}/achievements/user/${this.props.loggedInUser._id}`, {\n          withCredentials: true,\n        })\n        .then((res) => {\n          this.setState({\n            userAchievements: res.data,\n            filteredAchievements: res.data\n\n          });\n        });\n    }\n  }\n\n  componentDidUpdate(newProps) {\n    if (!newProps.loggedInUser) {\n      axios\n        .get(`${API_URL}/achievements/user/${this.props.loggedInUser._id}`, {\n          withCredentials: true,\n        })\n        .then((res) => {\n          this.setState({\n            userAchievements: res.data,\n          });\n        });\n    }\n  }\n\n  handleClick = (achievID) => {\n    this.setState({\n      showDeletePopup: true,\n      targetedAchievID: achievID\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup:false\n    })\n  }\n\n  handleDelete = (achievID) => {\n    axios.delete(`${API_URL}/achievements/${achievID}`, {withCredentials: true})\n      .then((res) => {\n        let clonedUserAchiev = JSON.parse(JSON.stringify(this.state.userAchievements))\n        clonedUserAchiev.forEach((e, i) => {\n          if(e._id === res.data._id)  clonedUserAchiev.splice(i, 1)\n        })\n        this.setState({\n          userAchievements: clonedUserAchiev,\n          showDeletePopup:false\n        })\n      })\n  };\n\n  handleSearchAch = (e) => {\n    let searchAch = e.currentTarget.value.toLowerCase()\n    let cloneUserAchievements = this.state.userAchievements.filter((item) => {\n      return (item.completed===true && (item.challenge.title.toLowerCase().includes(searchAch) || item.challenge.description.toLowerCase().includes(searchAch)))\n    })\n    this.setState({\n      filteredAchievements: cloneUserAchievements\n    })\n    \n  }\n  \n  render() {\n    if (!this.state.userAchievements || !this.props.loggedInUser) {\n      return (\n        <p>\n          Loading... If you're not login yet, please{\" \"}\n          <Link to=\"/login\">click on this link</Link>\n        </p>\n      );\n    }\n\n    return (\n      <div id=\"goalsSuccess\">\n        <div className=\"exp-bar\">\n          <ExperienceBar loggedInUser={this.props.loggedInUser} />\n        </div>\n        <h3 className=\"title\">Your Goals & Success</h3>\n        <div className=\"white-card\">\n          <div className=\"goals\">\n            <h4 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" />\n              Your EcoHero Tasks\n            </h4>\n            {this.state.userAchievements.filter((e) => e.completed === false)\n              .length === 0 ? (\n              <div>You don't have any goal set yet... </div>\n            ) : (\n              \"\"\n            )}\n            {this.state.userAchievements.map((achievement, i) => {\n              if (!achievement.completed) {\n                return (\n                  <div className=\"achiev-container\" key={\"goals\" + i}>\n                    <Link to={`/achievement/${achievement._id}`}>\n                      <h6>{achievement.challenge.title}</h6>\n                    </Link>\n                    <div className=\"edit-btn\">\n                      <Link to={`/goals-edit/${achievement._id}`}>\n                        <img src=\"/images/valid.png\" alt=\"Valid\" />\n                      </Link>\n                      <button\n                        onClick={() => this.handleClick(achievement._id)}\n                      >\n                        <img src=\"/images/delete.png\" alt=\"Delete\" />\n                      </button>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n            <div className=\"btn-container\">\n              <Link className=\"btn-add\" to=\"/challenges\">\n                Add one more !\n              </Link>\n            </div>\n          </div>\n\n         \n        \n          <div>\n            <h4 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" />\n              You already nailed it!\n            </h4>\n\n          <InputGroup className=\"mb-3 searchBar\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">&#128270;</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            onChange={this.handleSearchAch}\n            placeholder=\"Search for a success\"\n            aria-label=\"Search for a success\"\n            aria-describedby=\"basic-addon1\"\n          />\n          </InputGroup>\n\n\n            {\n                this.state.filteredAchievements.filter(e => e.completed === true).length === 0 ? <div>No Success yet... </div> : \"\"\n            }\n           \n            {this.state.filteredAchievements.map((achievement, i) => {\n              if (achievement.completed) {\n                return (\n                  <div className=\"achiev-container\" key={\"success\" + i}>\n                    <Link to={`/achievement/${achievement._id}`}>\n                      <h6>{achievement.challenge.title}</h6>\n                    </Link>\n\n                    <SocialMedia achievementID={achievement._id}/>\n                   \n                  </div>\n                );\n              }\n            })}\n          </div>\n        </div>\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this goal from your list ?\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button variant=\"success\" onClick={() => this.handleDelete(this.state.targetedAchievID)}>\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default GoalsAndSuccess;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles/CreateChallForm.css\";\n\nfunction CreateChallForm(props) {\n  if (!props.loggedInUser || props.loggedInUser.points < 25000) {\n    return <Redirect to='/challenges'/>\n  }\n  return (\n    <div id=\"createChallenge\">\n      <h1 className=\"createTitle\">Create a Challenge</h1>\n      <div className=\"white-card\">\n        <Form onSubmit={props.onSubmit}>\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Title</Form.Label>\n            <Form.Control className=\"inputs\" name=\"title\" type=\"text\" placeholder=\"Title of the challenge\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Description</Form.Label>\n            <Form.Control className=\"inputs\" name=\"description\" placeholder=\"Describe your challenge\" as=\"textarea\" rows=\"3\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Why is it useful?</Form.Label>\n            <Form.Control className=\"inputs\" name=\"fact\" placeholder=\"Why is your challenge important for the planet?\" as=\"textarea\" rows=\"3\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Points</Form.Label>\n            <Form.Control className=\"inputs\" name=\"points\" type=\"number\" max=\"10000\" placeholder=\"Number of points. Max 10 000\" /> \n          </Form.Group>\n\n          <Form.Text >\n            <p className=\"rules\">* As we want to encourage users to achieve short to mid term goals, <strong>we are capping the points at 10 000</strong>.</p>\n          </Form.Text>\n\n          <Button className=\"createBtn\" variant=\"primary\" type=\"submit\">\n          <img className=\"imageBtn1\" src=\"/images/plant02.png\" alt=\"o\"  />\n            Create Challenge\n          <img className=\"imageBtn2\" src=\"/images/plant.png\" alt=\"o\"  />\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateChallForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\nimport { withRouter } from \"react-router-dom\";\nimport \"./styles/AddToMyGoals.css\";\n\n\nclass AddToMyGoals extends Component {\n  state = {\n    loggedInUser: null,\n    userGoalsIds: [],\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    if (!this.state.loggedInUser) {\n      axios\n        .get(`${API_URL}/auth/user`, { withCredentials: true })\n        .then((res) => {\n          axios\n            .get(`${API_URL}/users/${res.data._id}`, { withCredentials: true })\n            .then((user) => {\n              axios\n                .get(`${API_URL}/achievements/user/${user.data._id}`, {\n                  withCredentials: true,\n                })\n                .then((achiev) => {\n                  let goalsFull = achiev.data.filter((e) => {\n                    return e.completed === false;\n                  });\n                  let goals = goalsFull.map((e) => e.challenge._id);\n                  this.setState({\n                    loggedInUser: user.data,\n                    userGoalsIds: goals,\n                  });\n                });\n            });\n        });\n    }\n  }\n\n\n  handleClick = () => {\n    if (this.state.userGoalsIds.includes(this.props.challenge)) {\n      this.setState({\n        showPopUp: true\n      });\n    } else {\n      axios\n        .post(\n          `${API_URL}/achievements/create/${this.props.challenge}/${this.state.loggedInUser._id}`,\n          {},\n          { withCredentials: true }\n        )\n        .then((res) => {\n          this.props.onSuccess()\n        });\n    }\n  };\n\n  handleClose = (component) => {\n      this.setState({\n        showPopUp:false\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <Button className=\"addThisGoalBtn\" onClick={this.handleClick}>\n          <img src=\"/images/valid.png\" alt=\"Valid\" />\n          {\n            this.props.fromOther ? <>I want to do it too!</> : <>Add this Goal!</>\n          }\n        </Button>\n        <Modal show={this.state.showPopUp} onHide={() => this.handleClose('modal')}>\n          <Modal.Header closeButton>\n            <Modal.Title>Not yet!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            You already have this challenge in your on going Goals. Finish it before to do it again. &#x1F609;{\" \"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={() => this.handleClose('modal')}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default withRouter(AddToMyGoals);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport AddToMyGoals from \"./AddToMyGoals\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport SocialMedia from \"./SocialMedia\"\nimport \"./styles/AchievementDetails.css\";\n\nclass AchievementDetails extends Component {\n  state = {\n    achievement: null,\n    showDeletePopup: false,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.achievementID;\n    axios.get(`${API_URL}/achievements/${id}`, {withCredentials: true}).then((res) => {\n      this.setState({\n        achievement: res.data,\n      });\n    });\n  }\n\n  handleClick = () => {\n    this.setState({\n      showDeletePopup: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup:false\n    })\n  }\n\n  handleDelete = () => {\n    axios.delete(`${API_URL}/achievements/${this.state.achievement._id}`, {withCredentials: true})\n      .then((res) => {\n        this.props.history.push('/goals-success')\n      })\n  };\n\n  render() {\n    if (!this.state.achievement) {\n      return <p>Loading...</p>;\n    }\n    const {challenge, completed, user, image, finishing_date, starting_date, _id} = this.state.achievement\n    let startDate = new Date(starting_date);\n    let start = startDate.toLocaleDateString();\n    let finishDate = new Date(finishing_date);\n    let finish = finishDate.toLocaleDateString();\n    return (\n      <div id=\"achievDetails\">\n        <div className=\"white-card\">\n            {\n              !this.props.loggedInUser || this.props.loggedInUser._id !== user._id ? <Link to={`/user/${user._id}`} className=\"back-link\">{user.username}'s profile</Link> : \"\"\n            }\n          <div className=\"header\">\n            <h4>{challenge.title}</h4>\n            <p>{challenge.points} points</p>\n          </div>\n\n          {!this.props.loggedInUser ? \"\" : (completed && this.props.loggedInUser._id === user._id) ? <div className=\"sharing-logos\"><SocialMedia achievementID={_id}  /></div> : completed ? <div className=\"sharing-logos\"><AddToMyGoals challenge={challenge._id} fromOther /></div> : \"\"}\n\n          {!completed ? (\n            <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\" /> How to complete this\n              goal?\n            </h5>\n          ) : this.props.loggedInUser && this.props.loggedInUser._id === user._id ? (\n            <h5 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" /> The task you fulfilled :{\" \"}\n            </h5>\n          ) : (\n            <h5 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" /> The task {user.username} fulfilled :{\" \"}\n            </h5>\n          ) }\n\n          <p>{challenge.description}</p>\n          <h5 className=\"subtitle\">\n            <img src=\"/images/plant02.png\" alt=\"o\" /> Why is it helpful?\n          </h5>\n          <p>{challenge.fact}</p>\n          <p className=\"date\">\n            <strong>Started :</strong> {start}\n          </p>\n          {completed ? (\n            <>\n              <p className=\"date\">\n                <strong>Finished :</strong> {finish}\n              </p>\n              <img\n                className=\"d-block achiev-image\"\n                src={image}\n                alt=\"Uplaoded\"\n              />\n            </>\n          ) : (\n            <div className=\"edit-btn\">\n              <Link to={`/goals-edit/${_id}`}>\n                <img src=\"/images/valid.png\" alt=\"Valid\" /> Complete it\n              </Link>\n              <button onClick={this.handleClick}>\n                <img src=\"/images/delete.png\" alt=\"Delete\" /> Delete it !\n              </button>\n            </div>\n          )}\n        </div>\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this goal from your list ?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button\n              variant=\"success\"\n              onClick={this.handleDelete}\n            >\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AchievementDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport AddToMyGoals from \"./AddToMyGoals\";\nimport \"./styles/ChallengeDetails.css\";\n\nclass ChallengeDetails extends Component {\n  state = {\n    challenge: null,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.challengeID;\n    axios.get(`${API_URL}/challenges/${id}`, { withCredentials: true, })\n      .then((res) => {\n        this.setState({\n          challenge: res.data,\n        });\n      });\n  }\n\n  render() {\n    if (!this.state.challenge) {\n      return <p>Loading...</p>;\n    }\n    return (\n      <div id=\"challengeDetails\">\n        <div className=\"white-card\">\n          <a href=\"/challenges\"><img src=\"/images/back.png\" alt=\"Back\" className=\"back-btn\"/></a>\n          <div className=\"header\">\n            <h4 className=\"challengeDetailTitle\">{this.state.challenge.title}</h4>\n            <p>{this.state.challenge.points} points</p>\n          </div>\n          <h5 className=\"subtitle\">\n          <img src=\"/images/plant02.png\" alt=\"o\" />How to complete this goal?\n          </h5>\n          <p>{this.state.challenge.description}</p>\n          <h5 className=\"subtitle\">\n          <img src=\"/images/plant02.png\" alt=\"o\"  />Why is it helpful?\n          </h5>\n          <p>{this.state.challenge.fact}</p>\n\n          {\n            this.props.loggedInUser ? (\n              <div className=\"addGoalBtn\">\n                <AddToMyGoals challenge={this.state.challenge._id} onSuccess={this.props.onSuccess}/>\n              </div>\n            ) : \"\"\n          }\n      \n        </div>       \n      </div>\n    );\n  }\n}\n\nexport default ChallengeDetails;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport \"./styles/OtherProfile.css\";\n\nexport default class OtherProfile extends Component {\n  state = {\n    user: null,\n    userAchievements: [],\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.userID;\n    axios\n      .get(`${API_URL}/users/${id}`, { withCredentials: true })\n      .then((user) => {\n        console.log(user.data);\n        axios\n          .get(`${API_URL}/achievements/user/${user.data._id}`, {\n            withCredentials: true,\n          })\n          .then((res) => {\n            this.setState({\n              user: user.data,\n              userAchievements: res.data,\n            });\n          });\n      });\n  }\n\n  render() {\n    if (!this.state.userAchievements || !this.state.user) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div id=\"otherProfile\">\n        <div className=\"white-card\">\n          <div className=\"header\">\n            <img\n              src={this.state.user.image}\n              alt=\"Avatar\"\n              style={{ width: \"100px\" }}\n            />\n            <div>\n              <div className=\"users-info\">\n                <h5>{this.state.user.username}</h5>\n              </div>\n              <div className=\"points-info\">\n                <p className=\"total-rank\">{this.state.user.rank}</p>\n                <p className=\"total-points\">\n                  - {this.state.user.points} points\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <ExperienceBar loggedInUser={this.state.user} />\n\n          <div className=\"user-success\">\n            <h4>\n            <img src=\"/images/plant02.png\" alt=\"o\" />\n            Success</h4>\n            {this.state.userAchievements.map((achievement, i) => {\n              if (achievement.completed) {\n                let finishDate = new Date(achievement.finishing_date)\n                let date = finishDate.getDate()\n                let month = finishDate.getMonth() + 1\n                let finish = date + \"/\" + month\n                return (\n                  <div className=\"one-success\" key={\"success\" + i}>\n                    <Link to={`/achievement/${achievement._id}`}>\n                        <p>{finish}</p>\n                        <h6>{achievement.challenge.title}</h6>\n                    </Link>\n                  </div>\n                );\n              }\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport \"./styles/GoalsEdit.css\";\n\nclass GoalsEdit extends Component {\n  state = {\n    achievement: null,\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.achievementID;\n    console.log(id);\n\n    axios\n      .patch(`${API_URL}/achievements/${id}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          achievement: res.data,\n        });\n      });\n  }\n\n  handleImageChange = (e) => {\n    let uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.currentTarget.files[0]);\n\n    axios\n      .post(`${API_URL}/upload`, uploadData, { withCredentials: true })\n      .then((response) => {\n        let updatedAchievement = JSON.parse(\n          JSON.stringify(this.state.achievement)\n        );\n        updatedAchievement.image = response.data.image;\n        this.setState({\n          achievement: updatedAchievement,\n        });\n      });\n  };\n\n  handleDateChange = (e) => {\n    let updatedAchievement = JSON.parse(JSON.stringify(this.state.achievement));\n    updatedAchievement.finishing_date = e.currentTarget.value;\n      this.setState({\n        achievement: updatedAchievement,\n      });\n  }\n\n  handleClick = () => {\n    this.setState({\n      showPopUp: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showPopUp:false\n    })\n  }\n\n  render() {\n    if (!this.state.achievement) {\n      return (\n        <p>\n          Loading... If you're not login yet, please{\" \"}\n          <Link to=\"/login\">click on this link</Link>\n        </p>\n      );\n    }\n\n    const { image, challenge } = this.state.achievement;\n\n    return (\n      <div id=\"editGoal\">\n        <h3 className=\"title\">Complete this Goal</h3>\n        <div className=\"white-card\">\n          <div className=\"header\">\n            <h4>{challenge.title}</h4>\n            <p>{challenge.points} points</p>\n          </div>\n\n          <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\"  /> How to complete this goal?\n            </h5>\n          <p>{challenge.description}</p>\n          <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\"  /> Before you valid this goal\n            </h5>\n          <label htmlFor=\"image\">1. Download a picture :</label>\n          {image ? <img src={image} alt=\"Avatar\" /> : \"\"}\n          <input\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/png, image/jpeg\"\n            onChange={this.handleImageChange}\n          ></input>\n          <label htmlFor=\"finishing_date\">2. When did you finish this task ?</label>\n          <input name=\"finishing_date\" type=\"date\" onChange={this.handleDateChange} />\n\n          <div className=\"edit-btn\">\n              <button onClick={this.handleClick}\n            type=\"submit\">\n                <img src=\"/images/valid.png\" alt=\"Valid\" /> Completed !\n              </button>\n          </div>\n        </div>\n        <Modal show={this.state.showPopUp} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            If you complete this goal, it will directly go to your success and you won't be able to edit it again. Are you sure you are ready to complete this goal?\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button variant=\"success\" onClick={() => this.props.onUpdate(this.state.achievement)}>\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default GoalsEdit;\n","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/Groups.css\";\n\n\n\n\nclass Groups extends Component {\n    state = {\n        groups: [],\n        filteredGroups: [],\n        showPopUp: false,\n    };\n\n    componentDidMount() {\n        axios.get(`${API_URL}/groups`).then((response) => {\n          this.setState({\n            groups: response.data,\n            filteredGroups: response.data,\n          });\n        });\n    }\n\n    handleSearch = (e) => {\n        let search = e.currentTarget.value.toLowerCase();\n        let cloneGroups = this.state.groups.filter((item) => {\n          return (\n            item.name.toLowerCase().includes(search) ||\n            item.description.toLowerCase().includes(search)\n          );\n        });\n        this.setState({\n            filteredGroups: cloneGroups,\n        });\n    };\n    \n    handleCreateClick = () => {\n        if (!this.props.loggedInUser || this.props.loggedInUser.points < 10000) {\n          this.setState({\n            showPopUp: true,\n          });\n        } else this.props.history.push(\"/groups/create\");\n    };\n    \n    handleClose = () => {\n        this.setState({\n          showPopUp: false,\n        });\n    };\n    \n    handleSort = (e) => {\n        e.preventDefault()\n        let cloneGroups = JSON.parse(JSON.stringify(this.state.filteredGroups)) \n        e.currentTarget.value ===\"low\" ? cloneGroups.sort((a, b) => a.points - b.points) : cloneGroups.sort((a, b) => b.points - a.points)\n        this.setState({\n            filteredGroups: cloneGroups,\n        })\n    }\n    \n\n    render() {\n        if (!this.state.groups) {\n            return <div>Loading...</div>;\n        }\n\n        return (\n            <div id=\"groups\">\n                <h3 className=\"groupsTitle\">EcoHero Groups</h3>\n\n                <div className=\"search-part\">\n                <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon1\">&#128270;</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                    onChange={this.handleSearch}\n                    placeholder=\"Search for a group\"\n                    aria-label=\"Search for a group\"\n                    aria-describedby=\"basic-addon1\"\n                />\n                </InputGroup>\n\n                <Form.Control onChange={this.handleSort} as=\"select\" defaultValue=\"Sort by...\">\n                    <option>Sort by...</option>\n                    <option value=\"high\">Points - high to low </option>\n                    <option value=\"low\">Points - low to high</option>\n                </Form.Control>\n                {this.props.loggedInUser ? (\n                <Button className=\"bouncy\" onClick={this.handleCreateClick}>\n                    <img className=\"plantL\" src=\"/images/plant02.png\" alt=\"o\" />\n                    Create a Group\n                </Button>\n                ) : (\n                \"\"\n                )}\n                </div>\n                <p>List of groups</p>\n                {this.state.filteredGroups.map((group, i) => {\n                return (\n                    <div className=\"one-success-container\" key={\"group\" + i}>\n                    <div className=\"one-success\">\n                        <Link className=\"link\" to={`/groups/${group._id}`}>\n                        <p>\n                            {group.name} - {group.location}\n                        </p>\n                        </Link>\n                    </div>\n                    </div>\n                );\n                })}\n                <Modal show={this.state.showPopUp} onHide={this.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Not yet!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Achieve Chill Hero rank in order to do that &#x1F609;{\" \"}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"success\" onClick={this.handleClose}>\n                    Ok, got it\n                    </Button>\n                </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\nexport default Groups\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/GroupDetails.css\";\n\n\n\n\nclass GroupDetails extends Component {\n    state = {\n      groupData: null\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.groupID;\n        axios.get(`${API_URL}/groups/${id}`, {withCredentials: true})\n        .then((res) => {\n          this.setState({\n            groupData: res.data,\n          });\n        });\n      }\n\n\n    render() {\n\n        if (!this.state.groupData) {\n            return <p>Loading...</p>;\n        }\n\n        const {description, location, date, members} = this.state.groupData\n\n        return (\n            <div id=\"groupDetails\">\n              <div className=\"white-card\">\n                <h5 className=\"subtitle\">Description</h5>\n                <p>{description}</p>\n\n                <h5 className=\"subtitle\">Location</h5>\n                <p>{location}</p>\n\n                <h5 className=\"subtitle\">Date</h5>\n                <p>{date}</p>\n\n                <h5 className=\"subtitle\">Members</h5>\n                {\n                  members.map((member, i) => {\n                    return (\n                      <div key={\"member\" + i}> {member.username} </div>\n                    )\n                  })\n                }\n\n                <div className=\"edit-btn\">\n                    <Link to={`/groups`}>\n                        <img src=\"/images/valid.png\" alt=\"Valid\" /> Join the group\n                    </Link>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\n\nexport default GroupDetails\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles/GroupCreate.css\";\n\nfunction GroupCreate(props) {\n  if (!props.loggedInUser || props.loggedInUser.points < 10000) {\n    return <Redirect to='/groups'/>\n  }\n  return (\n    <div id=\"createGroup\">\n      <h1 className=\"createTitle\">Create a Group</h1>\n      <div className=\"white-card\">\n        <Form onSubmit={props.onSubmit}>\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Name of the group</Form.Label>\n            <Form.Control className=\"inputs\" name=\"name\" type=\"text\" placeholder=\"Name of the group\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Description</Form.Label>\n            <Form.Control className=\"inputs\" name=\"description\" placeholder=\"Describe your challenge\" as=\"textarea\" rows=\"3\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Location</Form.Label>\n            <Form.Control className=\"inputs\" name=\"location\" type=\"text\" placeholder=\"Location of the challenge\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Date</Form.Label>\n            <Form.Control className=\"inputs\" name=\"date\" type=\"date\" /> \n          </Form.Group>\n\n          \n          <Button className=\"createBtn\" variant=\"primary\" type=\"submit\">\n          <img className=\"imageBtn1\" src=\"/images/plant02.png\" alt=\"o\"  />\n            Create a group\n          <img className=\"imageBtn2\" src=\"/images/plant.png\" alt=\"o\"  />\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default GroupCreate;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { API_URL } from \"./config\";\nimport axios from \"axios\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n//Components\nimport MyNavBar from \"./components/MyNavBar\";\nimport SignUp from \"./components/SignUp\";\nimport LogIn from \"./components/LogIn\";\nimport Ranks from \"./components/Ranks\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport Home from \"./components/Home\";\nimport MyProfile from \"./components/MyProfile\";\nimport HeroHome from \"./components/HeroHome\";\nimport Dashboard from \"./components/Dashboard\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport ChallengesList from \"./components/ChallengesList\";\nimport GoalsAndSuccess from \"./components/GoalsAndSuccess\";\nimport CreateChallForm from \"./components/CreateChallForm\";\nimport AchievementDetails from \"./components/AchievementDetails\";\nimport ChallengeDetails from \"./components/ChallengeDetails\";\nimport OtherProfile from \"./components/OtherProfile\";\nimport GoalsEdit from \"./components/GoalsEdit\";\nimport Groups from \"./components/Groups\"\nimport GroupDetails from \"./components/GroupDetails\"\nimport GroupCreate from \"./components/GroupCreate\"\n\n\nclass App extends React.Component {\n  state = {\n    loggedInUser: null,\n    showGeneralModal: false,\n    modalMessage : \"\",\n    modalHeader: \"\",\n    modalButtonType: \"info\"\n  };\n\n  componentDidMount() {\n    if (!this.state.loggedInUser) {\n      axios\n        .get(`${API_URL}/auth/user`, { withCredentials: true })\n        .then((res) => {\n          axios\n            .get(`${API_URL}/users/${res.data._id}`, { withCredentials: true })\n            .then((user) => {\n              this.setState({\n                loggedInUser: user.data,\n              });\n            });\n        });\n    }\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault();\n    const { username, email, password } = e.currentTarget;\n    axios\n      .post(\n        `${API_URL}/auth/signup`,\n        {\n          username: username.value,\n          email: email.value,\n          password: password.value,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        console.log(res.data);\n        this.setState(\n          {\n            loggedInUser: res.data,\n          },\n          () => {\n            this.props.history.push(\"/hero-home\");\n          }\n        );\n      })\n      .catch((err) => {\n        const {errorMessage} = err.response.data\n        this.setState({\n          showGeneralModal: true,\n          modalMessage : errorMessage,\n          modalHeader: \"Oops!\",\n          modalButtonType: \"info\"\n        })\n      })\n  };\n\n  handleLogIn = (e) => {\n    e.preventDefault();\n    const { email, password } = e.currentTarget;\n    axios\n      .post(\n        `${API_URL}/auth/signin`,\n        {\n          email: email.value,\n          password: password.value,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        this.setState(\n          {\n            loggedInUser: res.data,\n          },\n          () => {\n            this.props.history.push(\"/hero-home\");\n          }\n        );\n      })\n      .catch((err) => {\n        const {errorMessage} = err.response.data\n        this.setState({\n          showGeneralModal: true,\n          modalMessage : errorMessage,\n          modalHeader: \"Oops!\",\n          modalButtonType: \"info\"\n        })\n      })\n  };\n\n  handleLogOut = () => {\n    axios\n      .post(`${API_URL}/auth/logout`, {}, { withCredentials: true })\n      .then(() => {\n        this.setState(\n          {\n            loggedInUser: null,\n          },\n          () => {\n            this.props.history.push(\"/\");\n          }\n        );\n      });\n  };\n\n  handleEdit = (updatedUser) => {\n    let cloneUser = {\n      username: updatedUser.username,\n      email: updatedUser.email,\n      image: updatedUser.image,\n      password: updatedUser.password,\n    };\n    axios\n      .patch(\n        `${API_URL}/users/${this.state.loggedInUser._id}/edit`,\n        cloneUser,\n        { withCredentials: true }\n      )\n      .then((res) => {\n        console.log(updatedUser);\n        delete cloneUser.password;\n        cloneUser._id = res.data._id;\n        cloneUser.points = res.data.points;\n        cloneUser.rank = res.data.rank;\n        cloneUser.passwordHash = res.data.passwordHash;\n        this.setState(\n          {\n            loggedInUser: cloneUser,\n          },\n          () => {\n            this.props.history.push(\"/profile\");\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(err.response)\n        const {errorMessage} = err.response.data\n        let message\n        if(errorMessage.codeName === \"DuplicateKey\"){\n          if(Object.keys(errorMessage.keyPattern).includes(\"username\")){\n            message = \"This username already exists. Please select a new one.\"\n          } else if(Object.keys(errorMessage.keyPattern).includes(\"email\")){\n            message = \"This email is already in use. Please select a new one.\"\n          }\n        } else {\n          message = errorMessage\n        }\n        this.setState({\n          showGeneralModal: true,\n          modalMessage : message,\n          modalHeader: \"Oops!\",\n          modalButtonType: \"info\"\n        })\n      })\n  };\n\n  handleCreateChall = (e) => {\n    console.log(\"in the handle fonction\");\n    e.preventDefault();\n    const { title, description, points, fact } = e.currentTarget;\n    axios\n      .post(\n        `${API_URL}/challenges/create`,\n        {\n          title: title.value,\n          description: description.value,\n          points: points.value,\n          fact: fact.value\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        this.props.history.push(\"/challenges\");\n      });\n  };\n\n  handleCreateGroup = (e) => {\n    e.preventDefault();\n    const {name, description, location, date} = e.currentTarget;\n    axios.post(`${API_URL}/groups/create`, {\n      name: name.value,\n      description: description.value,\n      location: location.value,\n      date: date.value,\n      user: this.state.loggedInUser\n    }, { withCredentials: true })\n    .then((res) => {\n      this.props.history.push(\"/groups\")\n    })\n  }\n\n  handleUpdateGoal = (updatedAchievement) => {\n    const { image, _id, finishing_date } = updatedAchievement;\n    let updatedSuccess = {\n      completed: true,\n      image: image,\n      finishing_date: finishing_date,\n    };\n    axios\n      .patch(`${API_URL}/achievements/${_id}`, updatedSuccess, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        let pointsToAdd = res.data.challenge.points;\n        let clonedUser = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        clonedUser.points += pointsToAdd;\n        let newRank = this.handleRank(clonedUser.points);\n        if (clonedUser.rank !== newRank) {\n          clonedUser.rank = newRank;\n        }\n        console.log(clonedUser);\n        axios\n          .patch(\n            `${API_URL}/users/${this.state.loggedInUser._id}/edit`,\n            clonedUser,\n            { withCredentials: true }\n          )\n          .then((response) => {\n            this.setState(\n              {\n                loggedInUser: clonedUser,\n              },\n              this.props.history.push(\"/hero-home\")\n            );\n          });\n      });\n  };\n\n  handleRank = (nbOfPoints) => {\n    if (nbOfPoints >= 100000) {\n      return \"Super Hero\";\n    } else if (nbOfPoints > 50000) {\n      return \"Big Hero\";\n    } else if (nbOfPoints > 25000) {\n      return \"Smart Hero\";\n    } else if (nbOfPoints > 10000) {\n      return \"Chill Hero\";\n    } else {\n      return \"New Hero\";\n    }\n  };\n\n  handleModalClose = () => {\n    this.setState({\n      showGeneralModal: false\n    })\n  }\n\n  hanldeNotification = () => {\n    //Code\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <MyNavBar onLogOut={this.handleLogOut} loggedInUser={this.state.loggedInUser} />\n        {this.state.loggedInUser ? <Dashboard /> : \"\"}\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signup\" render={(routeProps) => {\n              return <SignUp onSignUp={this.handleSignUp} {...routeProps} />;\n            }}/>\n          <Route path=\"/login\" render={(routeProps) => {\n              return <LogIn onLogIn={this.handleLogIn} {...routeProps} />;\n            }}/>\n          <Route path=\"/ranks\" component={Ranks} />\n          <Route path=\"/leaderboard\" component={Leaderboard} />\n          <Route exact path=\"/profile\" render={(routeProps) => {\n              return <MyProfile loggedInUser={this.state.loggedInUser} onDelete={this.handleLogOut} {...routeProps}/>\n            }}/>\n          <Route path=\"/profile/edit\" render={(routeProps) => {\n              return <EditProfileForm loggedInUser={this.state.loggedInUser} onEdit={this.handleEdit} {...routeProps} />\n            }}/>\n          <Route path=\"/hero-home\" render={(routeProps) => {\n              return <HeroHome loggedInUser={this.state.loggedInUser} {...routeProps}/>\n            }} />\n          <Route path=\"/goals-success\" render={(routeProps) => {\n              return <GoalsAndSuccess loggedInUser={this.state.loggedInUser} {...routeProps}/>\n            }}/>\n          <Route exact path=\"/challenges\" render={(routeProps) => {\n              return <ChallengesList loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>\n          <Route path=\"/challenges/create\" render={(routeProps) => {\n              return <CreateChallForm loggedInUser={this.state.loggedInUser} onSubmit={this.handleCreateChall} {...routeProps}/>\n            }}/>\n          <Route path=\"/achievement/:achievementID\" render={(routeProps) => {\n              return <AchievementDetails loggedInUser={this.state.loggedInUser} {...routeProps} />;\n            }}/>\n          <Route path=\"/challenge/:challengeID\" render={(routeProps) => {\n              return <ChallengeDetails loggedInUser={this.state.loggedInUser} {...routeProps} onSuccess={this.hanldeNotification} />;\n            }}/>\n          <Route path=\"/user/:userID\" render={(routeProps) => {\n              return <OtherProfile {...routeProps} />;\n            }}/>\n          <Route path=\"/goals-edit/:achievementID\" render={(routeProps) => {\n              return <GoalsEdit onUpdate={this.handleUpdateGoal} {...routeProps} />\n            }}/>\n          <Route exact path=\"/groups\" render={(routeProps) => {\n              return <Groups loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>  \n           <Route path=\"/groups/create\" render={(routeProps) => {\n              return <GroupCreate onSubmit={this.handleCreateGroup} loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>    \n          <Route path=\"/groups/:groupID\" render={(routeProps) => {\n              return <GroupDetails loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>      \n        </Switch>\n        <Modal show={this.state.showGeneralModal} onHide={this.handleModalClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.state.modalHeader}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {this.state.modalMessage}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant={this.modalButtonType} onClick={this.handleModalClose}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}