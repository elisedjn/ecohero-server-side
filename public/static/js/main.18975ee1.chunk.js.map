{"version":3,"sources":["config.js","components/MyNavBar.js","components/SignUp.js","components/LogIn.js","components/Ranks.js","components/Loading.js","components/Leaderboard.js","components/About.js","components/MyCarousel.js","components/Home.js","components/ExperienceBar.js","components/MyProfile.js","components/HeroHome.js","components/Dashboard.js","components/EditProfileForm.js","components/ChallengesList.js","components/SocialMedia.js","components/GoalsAndSuccess.js","components/CreateChallForm.js","components/AddToMyGoals.js","components/AchievementDetails.js","components/ChallengeDetails.js","components/OtherProfile.js","components/GoalsEdit.js","components/Groups.js","components/GroupDetails.js","components/GroupCreate.js","components/NotFoundPage.js","components/GroupEdit.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","MyNavBar","props","Navbar","collapseOnSelect","id","fixed","variant","expand","Brand","href","src","alt","Toggle","aria-controls","Collapse","Nav","className","to","data-toggle","loggedInUser","onClick","onLogOut","SignUp","Form","onSubmit","onSignUp","Group","Label","Control","type","placeholder","name","Text","Button","LogIn","onLogIn","Ranks","Component","Loading","Leaderboard","state","users","axios","get","then","res","setState","data","this","map","user","username","points","_id","About","target","rel","MyCarousel","achievements","events","finishedEvents","filter","e","finished","catch","err","console","log","Carousel","achievement","i","Item","key","Caption","image","challenge","title","rank","event","location","date","Home","ExperienceBar","chillHero","smartHero","bigHero","superHero","percentage","Math","ceil","ProgressBar","striped","now","MyProfile","userAchievements","showDeletePopup","handleClick","handleClose","handleDeleteUser","delete","withCredentials","onDelete","Modal","show","onHide","Header","closeButton","Title","Body","Footer","HeroHome","targetedAchievID","getUserAchievements","filterArr","elem","completed","achievID","handleDelete","clonedUserAchiev","JSON","parse","stringify","forEach","splice","newProps","length","slice","startDate","Date","starting_date","start","getDate","getMonth","Dashboard","activeKey","EditProfileForm","handleUsernameChange","updatedUser","currentTarget","value","handleEmailChange","email","handlePasswordChange","password","handleImageChange","uploadData","FormData","append","files","post","response","result","htmlFor","accept","onChange","onEdit","ChallengesList","challenges","filteredChallenges","showPopUp","handleSearch","search","toLowerCase","cloneChallenges","item","includes","description","handleCreateClick","history","push","handleSort","preventDefault","sort","a","b","individualChallenges","status","InputGroup","Prepend","FormControl","aria-label","aria-describedby","as","defaultValue","SocialMedia","FacebookShareButton","url","quote","FacebookIcon","size","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","GoalsAndSuccess","filteredAchievements","userGroups","getUsersInfos","groups","handleSearchAch","searchAch","cloneUserAchievements","month","eventDate","members","successDate","finishing_date","achievementID","CreateChallForm","required","rows","max","min","AddToMyGoals","userGoalsIds","onSuccess","component","achiev","goals","fromOther","withRouter","AchievementDetails","match","params","toLocaleDateString","finish","fact","ChallengeDetails","challengeID","OtherProfile","userID","style","width","finishDate","GoalsEdit","updatedAchievement","handleDateChange","fixTodayDate","today","dd","mm","getFullYear","onUpdate","Groups","filteredGroups","cloneGroups","futureEvents","group","fullDate","GroupDetails","groupData","membersID","handleJoin","newMember","cloneGroup","membersList","patch","handleValidate","todaysDate","setHours","handleLeave","memberLeaving","member","groupID","daydate","year","GroupCreate","groupChallenges","isSelected","showModal","modalMessage","modalHeader","modalButtonType","modalButtonStyle","handleChallengeSelect","handleCreateGroup","handleModalClose","Accordion","Card","eventKey","Check","NotFoundPage","GroupEdit","updatedEvent","handleMember","eventID","for","App","showGeneralModal","handleSignUp","errorMessage","handleLogIn","handleLogOut","handleEdit","cloneUser","passwordHash","message","codeName","Object","keys","keyPattern","handleCreateChall","errors","problem","handleUpdateGoal","updatedSuccess","pointsToAdd","clonedUser","congratulations","newRank","handleRank","bonus","handleBonus","nbOfPoints","handleUpdateEvent","updatedActualUser","hanldeNotification","aMessage","setTimeout","display","exact","path","render","routeProps","React","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.18975ee1.chunk.js","sourcesContent":["export const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n\n//process.env.REACT_APP_API_URL ||","import React from \"react\"; \nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {Link} from 'react-router-dom';\n\nimport './styles/MyNavBar.css';\n\nexport default function MyNavBar(props) {\n  return (\n    <div>\n      <Navbar collapseOnSelect id=\"myNavBar\" fixed=\"top\" variant=\"light\" expand=\"lg\">\n        <div id='fakeitem'></div>\n        <Navbar.Brand href=\"/\"><img src=\"/images/ecohero_logo.png\" alt=\"EH\" /> EcoHero</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Navbar.Toggle className=\"dont-hide\"><Link to=\"/challenges\" data-toggle=\"collapse\" >Challenges</Link></Navbar.Toggle>\n            <Navbar.Toggle className=\"dont-hide\"><Link to=\"/ranks\" data-toggle=\"collapse\">Ranks</Link></Navbar.Toggle>\n            <Navbar.Toggle className=\"dont-hide\"><Link to=\"/leaderboard\" data-toggle=\"collapse\">Hall of Heroes</Link></Navbar.Toggle>\n            {props.loggedInUser ? (\n              <Navbar.Toggle className=\"auth-link dont-hide\"><button onClick={props.onLogOut} data-toggle=\"collapse\">Logout</button></Navbar.Toggle>\n            ) : (\n              <>\n              <Navbar.Toggle className=\"auth-link dont-hide\"><Link to=\"/signup\" data-toggle=\"collapse\">Sign Up</Link></Navbar.Toggle>\n              <Navbar.Toggle className=\"auth-link dont-hide\"><Link to=\"/login\" data-toggle=\"collapse\">Login</Link></Navbar.Toggle>\n              </>\n            )\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom';\nimport \"./styles/SignUp.css\";\n\nfunction SignUp(props) {\n  return (\n    <div id=\"signup\">\n      <Form className=\"formUp\" onSubmit={props.onSignUp}>\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter username\" name=\"username\"/>\n          <Form.Text className=\"text-muted\">\n            Make it as unique as you are.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\n          <Form.Text className=\"text-muted\">\n            Password needs to have at least 8 characters, a number and an Uppercase alphabet.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Text className=\"small-text\">\n          Already a member? <Link to=\"/login\">Login</Link>\n        </Form.Text>\n\n        <div className=\"signUpBtn\">\n          <Button className=\"signUpBtnClick\" variant=\"primary\" type=\"submit\">\n          <img className=\"leaf1\" src=\"/images/plant02.png\" alt=\"o\" />\n            Sign Up\n          <img className=\"leaf2\" src=\"/images/plant.png\" alt=\"o\" />\n          </Button>\n        </div>\n      </Form>\n    </div>\n    \n  )\n}\n\nexport default SignUp\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Link} from 'react-router-dom';\nimport \"./styles/LogIn.css\";\n\n\nfunction LogIn(props) {\n  return (\n    <div id=\"login\">\n      <Form className=\"formIn\" onSubmit={props.onLogIn}>\n        <Form.Group>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Enter Password\" name=\"password\" />\n        </Form.Group>\n\n        <Form.Text className=\"small-text\">\n          Not a member yet? <Link to=\"/signup\">Sign Up</Link>\n        </Form.Text>\n\n        <div className=\"loginBtn\">\n          <Button className=\"loginBtnClick\" variant=\"primary\" type=\"submit\">\n          <img className=\"leaf1\" src=\"/images/plant02.png\" alt=\"o\" />\n           Log In\n          <img className=\"leaf2\" src=\"/images/plant.png\" alt=\"o\" />\n          </Button>\n        </div>\n      </Form>\n    </div>\n    \n  )\n}\n\nexport default LogIn","import React, { Component } from 'react'\nimport \"./styles/Ranks.css\";\n\nclass Ranks extends Component {\n    render() {\n        return (\n            <div className=\"listContainer\">\n              <h4 className=\"rankTitle\">Ranking System</h4>\n              <div className=\"rankContainer\">\n                <div className=\"rankAlign\">\n                    <h5><strong>New Hero</strong></h5>\n                    <p>0-9.999 points</p>   \n                </div>\n              </div>\n                \n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Chill Hero</strong></h5>\n                    <p>10.000-24.999 points</p>   \n                  </div>  \n                <p className=\"perks\"><strong>Perks:</strong> Create groups</p>\n                </div>\n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Smart Hero</strong></h5>\n                    <p>25.000-49.999 points</p>   \n                  </div>\n                <p className=\"perks\"><strong>Perks:</strong> Create challenges</p>   \n                </div>\n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Big Hero</strong></h5>\n                    <p>50.000-99.999 points</p>  \n                  </div>\n                <p className=\"perks\"><strong>Perks:</strong> 10.000 Bonus points</p>  \n                </div>\n\n                <div className=\"rankContainer\">\n                  <div className=\"rankAlign\">\n                    <h5><strong>Super Hero</strong></h5>\n                    <p>100.000+ points</p>   \n                  </div>\n                <p className=\"perks\"><strong>Perks:</strong> Nice surprises</p>\n                </div>    \n            </div>\n        )\n    }\n}\n\nexport default Ranks\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles/Loading.css\";\n\n\n\n\nexport default class Loading extends Component {\n\n\n    render() {\n\n        return (\n\n            <div>\n              <div className=\"loadingTitle\">\n                <h3>Loading...</h3>\n\n              </div>\n\n              <div className=\"container\">\n                <div className=\"dash uno\"></div>\n                <div className=\"dash dos\"></div>\n                <div className=\"dash tres\"></div>\n                <div className=\"dash cuatro\"></div>\n              </div>\n\n              <div className=\"loadingRedirect\">\n                <p>If you're not logged in yet, please {\" \"} <Link to=\"/login\">click on this link</Link></p>\n              </div>\n            </div>\n          \n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Loading from \"./Loading\"\nimport \"./styles/Leaderboard.css\";\n\nclass Leaderboard extends Component {\n  state = {\n    users: [],\n  };\n\n  componentDidMount() {\n    axios.get(`${API_URL}/users/leaderboard`).then((res) => {\n      this.setState({\n        users: res.data,\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.users) {\n      return <Loading/>\n    }\n\n    return (\n      <div id=\"leaderboard\">\n        <h3 className=\"HallTitle\">Hall of Heroes</h3>\n        <ol className=\"list\">\n          {this.state.users.map((user) => {\n            const { username, points, _id } = user;\n            return (\n              <Link  className=\"listItems\" to={`/user/${_id}`}>\n                  <li>\n                    {username} {points} points\n                  </li> \n              </Link>\n            );\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default Leaderboard;\n","import React from \"react\";\nimport \"./styles/About.css\";\n\nfunction About() {\n  return (\n    <div id=\"about\">\n      <h5>About us</h5>\n      <div className=\"white-bg\">\n        <div className=\"subtitle\">Hello world!</div>\n        <p className=\"about-text\">\n          We are <a href=\"https://www.linkedin.com/in/elise-dujardin/\" target=\"_blank\" rel=\"noopener noreferrer\" >Elise Dujardin</a> & <a href=\"https://www.linkedin.com/in/joel-roca-martinez-80b63629/\" target=\"_blank\" rel=\"noopener noreferrer\" >Joel Roca Martinez</a> - Web Developers & IronHackers - and we are\n          super excited to have you here!\n        </p>\n        <p className=\"about-text\">\n          <strong>Welcome to EcoHero</strong>, a platform that we have created\n          in order to revert the destruction that humanity is creating in our\n          planet. In here you will find a community of people that work with\n          passionand perseverance in{\" \"}\n          <strong>making Planet Earth a better place to live in</strong> ,\n          today, and tomorrow.\n        </p>\n        <p className=\"about-text\">\n          Join us in this frenetic quest and{\" \"}\n          <strong>start today creating and sharing your impact!</strong>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport {Link} from 'react-router-dom';\nimport Loading from \"./Loading\"\nimport \"./styles/MyCarousel.css\";\n\nexport default class MyCarousel extends Component {\n  state = {\n    achievements: [],\n    events: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}/achievements/allcompleted`)\n      .then((achievements) => {\n        axios.get(`${API_URL}/groups`)\n        .then((events) => {\n          let finishedEvents = events.data.filter(e => e.finished)\n          this.setState({\n            achievements: achievements.data,\n            events: finishedEvents\n          });\n        })\n      })\n      .catch((err) => console.log(err));\n  }\n  render() {\n    if (!this.state.achievements) {\n      return <Loading/>\n    }\n\n    return (\n      <div>\n        <Carousel id=\"myCarousel\">\n          {this.state.achievements.map((achievement, i) => {\n            return (\n              <Carousel.Item key={\"publicSuccess\" + i}>\n              <Link to={`/achievement/${achievement._id}`}>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/images/carouselbg.png\"\n                  alt=\"background\"\n                />\n                <Carousel.Caption >\n                  <div className=\"carousel-image\">\n                    <table className=\"img-container\">\n                    <tr>\n                      <td><img\n                        className=\"d-block\"\n                        src={achievement.image}\n                        alt={achievement.challenge.title}\n                      /></td>\n                    </tr>\n                    </table>\n                  </div>\n                  <div className=\"carousel-text\">\n                    <h5>{achievement.challenge.title}</h5>\n                    <div className=\"user-infos\">\n                      <img\n                        src={achievement.user.image}\n                        alt={achievement.user.username}\n                      />\n                      <div>\n                      <p className=\"username\">{achievement.user.username}</p>\n                      <p className=\"points-info\">{achievement.user.rank} - {achievement.user.points} pts</p>\n                      \n                      </div>\n                    </div>\n                  </div>\n                </Carousel.Caption>\n                </Link>\n              </Carousel.Item>\n            );\n          })}\n          {this.state.events.map((event, i) => {\n            return (\n              <Carousel.Item key={\"publicEvent\" + i}>\n              <Link to={`/groups/${event._id}`}>\n                <img\n                  className=\"d-block w-100\"\n                  src=\"/images/carouselbg.png\"\n                  alt=\"background\"\n                />\n                <Carousel.Caption >\n                  <div className=\"carousel-image\">\n                    <table className=\"img-container\">\n                    <tr>\n                      <td><img\n                        className=\"d-block\"\n                        src={event.image}\n                        alt={event.challenge.title}\n                      /></td>\n                    </tr>\n                    </table>\n                  </div>\n                  <div className=\"carousel-text\">\n                    <h5>Group Action</h5>\n                    <h5>{event.name}</h5>\n                    <div className=\"user-infos\">\n                      <div>\n                      <p className=\"username\">{event.location}</p>\n                      <p className=\"points-info\">{event.date}</p>\n                      </div>\n                    </div>\n                  </div>\n                </Carousel.Caption>\n                </Link>\n              </Carousel.Item>\n            );\n          })}\n        </Carousel>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport About from \"./About\";\nimport MyCarousel from \"./MyCarousel\";\nimport \"./styles/Home.css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div id=\"home\">\n        <div id=\"hometitle\">\n          <h4>Welcome to</h4>\n          <h3>EcoHero</h3>\n        </div>\n        <div>\n          <p className=\"punchline\">\n            Join the community, set your eco-friendly goals, share your success\n            and <strong>become a Super EcoHero</strong>!\n          </p>\n          <Link to=\"/signup\">\n            <button className=\"bouncy\"><img src=\"/images/plant02.png\" alt=\"o\" /> Get Started ! <img src=\"/images/plant.png\" alt=\"o\" /></button>\n          </Link>\n        </div>\n\n        <div className=\"carousel-container\">\n          <div className=\"carousel-title\">\n            <h4>Get Inspired</h4>\n            <h5>... Our EcoHeroes success</h5>\n          </div>\n\n          <MyCarousel />\n        </div>\n\n        <About />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport ProgressBar from \"react-bootstrap/ProgressBar\"\nimport \"./styles/ExperienceBar.css\"\n\n\nfunction ExperienceBar(props) {\n\n    let newHero = {\n        title: \"New Hero\",\n        points: 0\n    }\n\n    let chillHero = {\n        title: \"Chill Hero\",\n        points: 10000\n    }\n\n    let smartHero = {\n        title: \"Smart Hero\",\n        points: 25000\n    }\n\n    let bigHero = {\n        title: \"Big Hero\",\n        points: 50000\n    }\n\n    let superHero = {\n        title: \"Super Hero\",\n        points: 100000\n    }\n\n    \n                 //------------ Conditions from Chill Hero to Smart Hero ---------------// //\n    if (props.loggedInUser.points >= 10000 && props.loggedInUser.points < 25000) {\n        let percentage = Math.ceil((props.loggedInUser.points - chillHero.points)/(smartHero.points - chillHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{chillHero.title}</p>\n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/>\n                    <p className=\"ranks\">{smartHero.title}</p>\n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{smartHero.points} points</p>    \n            </div>\n        ) \n                  //------------ Conditions from Smart Hero to Big Hero ---------------//\n    } else if (props.loggedInUser.points >= 25000 && props.loggedInUser.points < 50000) {\n        let percentage = Math.ceil((props.loggedInUser.points - smartHero.points)/(bigHero.points - smartHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{smartHero.title}</p>\n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/>\n                    <p className=\"ranks\">{bigHero.title}</p>\n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{bigHero.points} points</p>    \n            </div>\n        ) \n                   //------------ Conditions from Big Hero to Super Hero ---------------//\n    } else if (props.loggedInUser.points >= 50000 && props.loggedInUser.points < 100000) {\n        let percentage = Math.ceil((props.loggedInUser.points - bigHero.points)/(superHero.points - bigHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{bigHero.title}</p> \n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/> \n                    <p className=\"ranks\">{superHero.title}</p>\n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{superHero.points} points</p>    \n            </div>\n        ) \n                        //------------ Conditions for Super Hero ---------------// \n    } else if (props.loggedInUser.points >= 100000) {\n        return (\n            <div>\n              <p className=\"superHero\" >{superHero.title}</p>\n              <p className=\"points\">{props.loggedInUser.points} points</p>    \n            </div>\n        ) \n                   //------------ Conditions from New Hero to Chill Hero ---------------// \n    } else {\n        let percentage = Math.ceil((props.loggedInUser.points)/(chillHero.points) *100)\n        return (\n            <div>\n                <div className=\"ranksContainer\">\n                    <p className=\"ranks\">{newHero.title}</p> \n                    <ProgressBar className=\"progress\" striped variant=\"success\" now={percentage}/> \n                    <p className=\"ranks\">{chillHero.title}</p> \n                </div>\n              <p className=\"points\">{props.loggedInUser.points}/{chillHero.points} points</p>    \n            </div>\n        )\n    }\n\n\n    \n}\n\nexport default ExperienceBar\n\n\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport axios from \"axios\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from \"react-bootstrap/Button\";\nimport { API_URL } from \"../config\";\nimport Loading from \"./Loading\"\nimport \"./styles/MyProfile.css\";\n\nclass MyProfile extends Component {\n  state = {\n    userAchievements: [],\n    showDeletePopup: false,\n  };\n\n  componentDidMount() {\n    if (this.props.loggedInUser) {\n      axios\n        .get(`${API_URL}/achievements/user/${this.props.loggedInUser._id}`, {\n          withCredentials: true,\n        })\n        .then((res) => {\n          this.setState({\n            userAchievements: res.data,\n          });\n        });\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n      showDeletePopup: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup:false\n    })\n  }\n\n  handleDeleteUser = () => {\n    axios.delete(`${API_URL}/users/${this.props.loggedInUser._id}`, {withCredentials: true})\n      .then((res) => {\n        this.props.onDelete()\n      })\n  };\n\n\n  render() {\n    if (!this.state.userAchievements || !this.props.loggedInUser) {\n      return <Loading/>\n    }\n\n    return (\n      <div id=\"myProfile\">\n        <h3 className=\"title\">Your Profile</h3>\n        <div className=\"white-card\">\n\n          <div className=\"profilePic\">\n            <img src={this.props.loggedInUser.image} alt=\"Avatar\" />\n          </div>\n             \n            <div className=\"infoContainer\">\n              <div className=\"users-info\">\n                <p><strong>Name:</strong> {this.props.loggedInUser.username}</p>  \n              </div>\n              <div className=\"points-info\">\n                <p className=\"total-rank\"><strong>Rank:</strong> {this.props.loggedInUser.rank} - {this.props.loggedInUser.points} points</p> \n              </div>\n            </div>\n          <ExperienceBar loggedInUser={this.props.loggedInUser} />\n          \n\n          <div className=\"edit-btn\">\n              <Link to=\"/profile/edit\">\n                <img src=\"/images/edit.png\" alt=\"Valid\" />Edit\n              </Link>\n              <button className=\"deleteUser\" onClick={this.handleClick}>\n                <img src=\"/images/delete.png\" alt=\"Delete\" />Delete\n              </button>\n          </div>\n        </div>\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this account ?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button\n              variant=\"success\"\n              onClick={this.handleDeleteUser}\n            >\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default MyProfile;\n","import React, { Component } from \"react\";\nimport MyCarousel from \"./MyCarousel\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Loading from \"./Loading\"\nimport \"./styles/HeroHome.css\";\n\nclass HeroHome extends Component {\n  state = {\n    userAchievements: [],\n    showDeletePopup: false,\n    targetedAchievID: null\n\n  };\n\n  \n\n  getUserAchievements = () => {\n    axios\n        .get(`${API_URL}/achievements/user/${this.props.loggedInUser._id}`, {\n          withCredentials: true,\n        })\n        .then((res) => {\n          let filterArr = res.data.filter(elem => elem.completed === false)\n          this.setState({\n            userAchievements: filterArr,\n          });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.loggedInUser) {\n      this.getUserAchievements()\n    }\n  }\n\n  componentDidUpdate(newProps) {\n    if (!newProps.loggedInUser) {\n      this.getUserAchievements()\n    }\n  }\n\n  handleClick = (achievID) => {\n    this.setState({\n      showDeletePopup: true,\n      targetedAchievID: achievID\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup:false\n    })\n  }\n\n  handleDelete = (achievID) => {\n    axios.delete(`${API_URL}/achievements/${achievID}`, {withCredentials: true})\n      .then((res) => {\n        let clonedUserAchiev = JSON.parse(JSON.stringify(this.state.userAchievements))\n        clonedUserAchiev.forEach((e, i) => {\n          if(e._id === res.data._id)  clonedUserAchiev.splice(i, 1)\n        })\n        console.log(clonedUserAchiev)\n        this.setState({\n          userAchievements: clonedUserAchiev,\n          showDeletePopup:false\n        })\n      })\n  };\n\n  render() {\n    if (!this.state.userAchievements || !this.props.loggedInUser) {\n      return <Loading/>\n    }\n    return (\n      <div id=\"heroHome\">\n        <h3 className=\"title\">Hero Home</h3>\n        <div className=\"white-card\">\n          <div className=\"header\">\n            <img src={this.props.loggedInUser.image} alt=\"Avatar\" />\n            <div>\n              <div className=\"users-info\">\n                <h5 className=\"userName\">{this.props.loggedInUser.username}</h5>\n              </div>\n              <div className=\"points-info\">\n                <p className=\"total-rank\">{this.props.loggedInUser.rank}</p>\n                <p className=\"total-points\">\n                  - {this.props.loggedInUser.points} points\n                </p>\n              </div>\n            </div>\n          </div>\n          <ExperienceBar loggedInUser={this.props.loggedInUser} />\n          <div className=\"your-tasks\">\n            <h4>\n              <img src=\"/images/plant02.png\" alt=\"o\"  />\n              Your EcoHero Tasks\n            </h4>\n            <div>\n              {\n                this.state.userAchievements.length === 0 ? <div>You don't have any goal set yet... </div> : \"\"\n              }\n              {\n                this.state.userAchievements.slice(0, 2).map((achievement, i) => {\n               \n                  let startDate = new Date(achievement.starting_date);\n                  let date = startDate.getDate();\n                  let month = startDate.getMonth() + 1;\n                  let start = date + \"/\" + month;\n                  return (\n                    <div className=\"one-task\" key={\"goals\" + i}>\n                    <div className=\"date-title\">\n                      <Link to={`/achievement/${achievement._id}`}>\n                        <p>{start}</p>\n                        <h6>{achievement.challenge.title}</h6>\n                      </Link>\n                      </div>\n                      <div className=\"edit-btn\">\n                        <Link to={`/goals-edit/${achievement._id}`}>\n                          <img src=\"/images/valid.png\" alt=\"Valid\" />\n                        </Link>\n                        <button\n                        onClick={() => this.handleClick(achievement._id)}\n                      >\n                        <img src=\"/images/delete.png\" alt=\"Delete\" />\n                      </button>\n                      </div>\n                    </div>\n                  );\n                \n              })}\n              <div className=\"btn-container\">\n              {\n                this.state.userAchievements.filter(e => e.completed === false).length > 2 ? <div className=\"see-all\"> <Link to=\"/goals-success\" > See all my goals</Link> </div> : \"\"\n              }\n              <Link className=\"btn-add\" to=\"/challenges\">Add one more !</Link>\n            </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"carousel-container\">\n          <h4 className=\"carousel-title\">Get Inspired</h4>\n          <MyCarousel />\n        </div>\n\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this goal from your list ?\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button variant=\"success\" onClick={() => this.handleDelete(this.state.targetedAchievID)}>\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default HeroHome;\n","import React from \"react\";\nimport Nav from 'react-bootstrap/Nav';\nimport {Link} from 'react-router-dom';\nimport './styles/Dashboard.css';\n\nfunction Dashboard() {\n  return (\n    <div>\n      <Nav id=\"dashboard\" activeKey=\"/home\">\n        <Nav.Item>\n          <Link to=\"/hero-home\"> <img src=\"/images/home.png\" alt='hero-home'/> Hero Home </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/goals-success\"> <img src=\"/images/goal.png\" alt='goals & success'/>  Goals & Success </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/groups\"> <img src=\"/images/collaboration.png\" alt='group'/> Events </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/profile\"> <img src=\"/images/user.png\" alt='profile'/> Profile </Link>\n        </Nav.Item>\n      </Nav>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"./Loading\"\nimport \"./styles/EditProfileForm.css\";\n\nclass EditProfileForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}/auth/user`, { withCredentials: true })\n      .then((result) => {\n        axios\n          .get(`${API_URL}/users/${result.data._id}`, { withCredentials: true })\n          .then((res) => {\n            this.setState({\n              loggedInUser: result.data,\n              user: res.data,\n            });\n          });\n      });\n  }\n\n  handleUsernameChange = (e) => {\n    let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n    updatedUser.username = e.currentTarget.value;\n    this.setState({\n      user: updatedUser,\n    });\n  };\n\n  handleEmailChange = (e) => {\n    let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n    updatedUser.email = e.currentTarget.value;\n    this.setState({\n      user: updatedUser,\n    });\n  };\n\n  handlePasswordChange = (e) => {\n    let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n    updatedUser.password = e.currentTarget.value;\n    this.setState({\n      user: updatedUser,\n    });\n  };\n\n  handleImageChange = (e) => {\n    let uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.currentTarget.files[0]);\n\n    axios\n      .post(`${API_URL}/upload`, uploadData, { withCredentials: true })\n      .then((response) => {\n        let updatedUser = JSON.parse(JSON.stringify(this.state.user));\n        updatedUser.image = response.data.image;\n        this.setState({\n          user: updatedUser,\n        });\n      })\n  };\n\n  render() {\n    if (!this.state.user) {\n      return <Loading/>\n    }\n    const { username, image, password, email } = this.state.user;\n    return (\n      <div id=\"editProfile\">\n        <h3 className=\"title\">Edit your profile</h3>\n        <div className=\"white-card\">\n            <div className=\"image-edit\">\n            <img src={image} alt=\"Avatar\" />\n            <div className=\"input-container\">\n            <label htmlFor=\"image\">Modify your profile picture:</label>\n            <input\n              type=\"file\"\n              id=\"image\"\n              name=\"image\"\n              accept=\"image/png, image/jpeg\"\n              onChange={this.handleImageChange}\n            />\n            </div>\n          </div>\n\n          <div className=\"input-container\">\n            <label>Update your username</label>\n            <input\n              onChange={this.handleUsernameChange}\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Enter username\"\n              value={username}\n            ></input>\n          </div>\n\n          <div className=\"input-container\">\n            <label>Change your email</label>\n            <input\n              onChange={this.handleEmailChange}\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n            ></input>\n          </div>\n\n          <div className=\"input-container\">\n            <label>Set a new password</label>\n            <input\n              onChange={this.handlePasswordChange}\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              placeholder=\"Enter password\"\n            ></input>\n          </div>\n\n          <button\n            className=\"submit-btn\"\n            onClick={() => this.props.onEdit(this.state.user)}\n            type=\"submit\"\n          >\n            <img className=\"editLeafL\" src=\"/images/plant02.png\" alt=\"o\" /> Edit\n            <img className=\"editLeafR\" src=\"/images/plant.png\" alt=\"o\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditProfileForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"./Loading\"\nimport \"./styles/ChallengesList.css\";\n\n\n\nclass ChallengesList extends Component {\n  state = {\n    challenges: [],\n    filteredChallenges: [],\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    axios.get(`${API_URL}/challenges`)\n    .then((response) => {\n      let individualChallenges = response.data.filter(e => e.status === \"individual\")\n      this.setState({\n        challenges: individualChallenges,\n        filteredChallenges: individualChallenges,\n      });\n    });\n  }\n\n  handleSearch = (e) => {\n    let search = e.currentTarget.value.toLowerCase();\n    let cloneChallenges = this.state.challenges.filter((item) => {\n      return (\n        item.title.toLowerCase().includes(search) ||\n        item.description.toLowerCase().includes(search)\n      );\n    });\n    this.setState({\n      filteredChallenges: cloneChallenges,\n    });\n  };\n\n  handleCreateClick = () => {\n    if (!this.props.loggedInUser || this.props.loggedInUser.points < 25000) {\n      this.setState({\n        showPopUp: true,\n      });\n    } else this.props.history.push(\"/challenges/create\");\n  };\n\n  handleClose = () => {\n    this.setState({\n      showPopUp: false,\n    });\n  };\n\n  handleSort = (e) => {\n    e.preventDefault()\n    let cloneChallenges = JSON.parse(JSON.stringify(this.state.filteredChallenges)) \n    e.currentTarget.value ===\"low\" ? cloneChallenges.sort((a, b) => a.points - b.points) : cloneChallenges.sort((a, b) => b.points - a.points)\n    this.setState({\n      filteredChallenges: cloneChallenges,\n    })\n  }\n\n  render() {\n    if (!this.state.challenges) {\n      return <Loading/>;\n    }\n    return (\n      <div id=\"challenges\">\n        <h3 className=\"challengesTitle\">Challenges</h3>\n\n        <div className=\"search-part\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">&#128270;</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            onChange={this.handleSearch}\n            placeholder=\"Search for a challenge\"\n            aria-label=\"Search for a challenge\"\n            aria-describedby=\"basic-addon1\"\n          />\n        </InputGroup>\n\n        <Form.Control onChange={this.handleSort} as=\"select\" defaultValue=\"Sort by...\">\n            <option>Sort by...</option>\n            <option value=\"high\">Points - high to low </option>\n            <option value=\"low\">Points - low to high</option>\n          </Form.Control>\n          {this.props.loggedInUser ? (\n          <Button className=\"bouncy\" onClick={this.handleCreateClick}>\n            <img className=\"plantL\" src=\"/images/plant02.png\" alt=\"o\" />\n            Create a Challenge\n          </Button>\n        ) : (\n          \"\"\n        )}\n        </div>\n        \n        <div className=\"one-success-container\" >\n        {this.state.filteredChallenges.map((challenge, i) => {\n          return (\n              <div className=\"one-success\" key={\"challenge\" + i}>\n                <Link className=\"link\" to={`/challenge/${challenge._id}`}>\n                  <p>\n                    {challenge.title}\n                  </p>\n                  <p><strong>{challenge.points} points</strong></p>\n                </Link>\n              </div>\n            \n          );\n        })}\n        </div>\n        <Modal show={this.state.showPopUp} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Not yet!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Achieve Smart Hero rank in order to do that &#x1F609;{\" \"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={this.handleClose}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ChallengesList;\n","import React from 'react'\nimport {FacebookShareButton, TwitterShareButton, WhatsappShareButton} from \"react-share\";\nimport {FacebookIcon, TwitterIcon, WhatsappIcon} from \"react-share\";\nimport \"./styles/SocialMedia.css\";\n\n\n\n\n\n\nexport default function SocialMedia(props) {\n\n\n    return (\n        \n      <div id=\"socialMedia\" >\n      <div className=\"sharing-logo\">\n        <FacebookShareButton className=\"sharing-logo\" url={`https://eco-hero.herokuapp.com/`} quote={\"Hey! I have achieved this challenge at Eco-Hero! Check it out!\"}><FacebookIcon size={30} /></FacebookShareButton>\n      </div>\n\n      <div className=\"sharing-logo\">\n        <TwitterShareButton className=\"sharing-logo\" url={`https://eco-hero.herokuapp.com/`} quote={\"Hey! I have achieved this challenge at Eco-Hero! Check it out!\"}><TwitterIcon size={30} /></TwitterShareButton>\n      </div>\n\n      <div className=\"sharing-logo\">\n        <WhatsappShareButton className=\"sharing-logo\" url={`https://eco-hero.herokuapp.com/`} quote={\"Hey! I have achieved this challenge at Eco-Hero! Check it out!\"}><WhatsappIcon size={30} /></WhatsappShareButton> \n      </div>\n    </div>\n            \n     \n    )\n}\n","import React, { Component } from \"react\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport SocialMedia from \"./SocialMedia\"\nimport Loading from \"./Loading\"\nimport \"./styles/GoalsAndSucces.css\";\n\nclass GoalsAndSuccess extends Component {\n  state = {\n    userAchievements: [],\n    showDeletePopup: false,\n    targetedAchievID: null,\n    filteredAchievements: [],\n    userGroups: null,\n  };\n\n  getUsersInfos = () => {\n    axios\n      .get(`${API_URL}/achievements/user/${this.props.loggedInUser._id}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        axios\n          .get(`${API_URL}/groups/user/${this.props.loggedInUser._id}`, {\n            withCredentials: true,\n          })\n          .then((groups) => {\n            console.log(groups);\n            this.setState({\n              userAchievements: res.data,\n              filteredAchievements: res.data,\n              userGroups: groups.data,\n            });\n          });\n      });\n  };\n\n  componentDidMount() {\n    if (this.props.loggedInUser) {\n      this.getUsersInfos();\n    }\n  }\n\n  componentDidUpdate(newProps) {\n    if (!newProps.loggedInUser) {\n      this.getUsersInfos();\n    }\n  }\n\n  handleClick = (achievID) => {\n    this.setState({\n      showDeletePopup: true,\n      targetedAchievID: achievID,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup: false,\n    });\n  };\n\n  handleDelete = (achievID) => {\n    axios\n      .delete(`${API_URL}/achievements/${achievID}`, { withCredentials: true })\n      .then((res) => {\n        let clonedUserAchiev = JSON.parse(\n          JSON.stringify(this.state.userAchievements)\n        );\n        clonedUserAchiev.forEach((e, i) => {\n          if (e._id === res.data._id) clonedUserAchiev.splice(i, 1);\n        });\n        this.setState({\n          userAchievements: clonedUserAchiev,\n          showDeletePopup: false,\n        });\n      });\n  };\n\n  handleSearchAch = (e) => {\n    let searchAch = e.currentTarget.value.toLowerCase();\n    let cloneUserAchievements = this.state.userAchievements.filter((item) => {\n      return (\n        item.completed === true &&\n        (item.challenge.title.toLowerCase().includes(searchAch) ||\n          item.challenge.description.toLowerCase().includes(searchAch))\n      );\n    });\n    this.setState({\n      filteredAchievements: cloneUserAchievements,\n    });\n  };\n\n  render() {\n    if (!this.state.userAchievements || !this.state.userGroups || !this.props.loggedInUser) {\n      return <Loading/>\n    }\n\n    return (\n      <div id=\"goalsSuccess\">\n        <div className=\"exp-bar\">\n          <ExperienceBar loggedInUser={this.props.loggedInUser} />\n        </div>\n        <h3 className=\"title\">Your Goals & Success</h3>\n        <div className=\"white-card\">\n          <div className=\"goals\">\n            <h4 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" />\n              Your EcoHero Tasks\n            </h4>\n            {this.state.userAchievements.filter((e) => e.completed === false)\n              .length === 0 ? (\n              <div>You don't have any goal set yet... </div>\n            ) : (\n              \"\"\n            )}\n            {this.state.userAchievements.map((achievement, i) => {\n              if (\n                !achievement.completed &&\n                achievement.challenge.status !== \"group\"\n              ) {\n                let startDate = new Date(achievement.starting_date);\n                let date = \"0\" + startDate.getDate();\n                let month = \"0\" + (startDate.getMonth() + 1);\n                let start = date.slice(-2) + \"/\" + month.slice(-2);\n                return (\n                  <div className=\"achiev-container\" key={\"goals\" + i}>\n                    <Link\n                      className=\"date-title\"\n                      to={`/achievement/${achievement._id}`}\n                    >\n                      <p>{start}</p>\n                      <h6>{achievement.challenge.title}</h6>\n                    </Link>\n                    <div className=\"edit-btn\">\n                      <Link to={`/goals-edit/${achievement._id}`}>\n                        <img src=\"/images/valid.png\" alt=\"Valid\" />\n                      </Link>\n                      <button onClick={() => this.handleClick(achievement._id)}>\n                        <img src=\"/images/delete.png\" alt=\"Delete\" />\n                      </button>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n            <div className=\"btn-container\">\n              <Link className=\"btn-add\" to=\"/challenges\">\n                Add one more !\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"events\">\n            <h4 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" />\n              Your upcoming events\n            </h4>\n            {this.state.userGroups.map((event, i) => {\n              let eventDate = new Date(event.date);\n              let date = \"0\" + eventDate.getDate();\n              let month = \"0\" + (eventDate.getMonth() + 1);\n              eventDate = date.slice(-2) + \"/\" + month.slice(-2);\n              if (event.finished === false) {\n                return (\n                  <div className=\"achiev-container\" key={\"event\" + i}>\n                    <Link className=\"event-info\" to={`/groups/${event._id}`}>\n                      <p>{eventDate}</p>\n                      <h6>{event.name}</h6>\n                      <p>{event.location}</p>\n                    </Link>\n                    {event.members[0]._id === this.props.loggedInUser._id ? (\n                      <div className=\"edit-btn\">\n                        <Link to={`/event-edit/${event._id}`}>\n                          <img src=\"/images/valid.png\" alt=\"Valid\" />\n                        </Link>\n                        <button>\n                          <img src=\"/images/delete.png\" alt=\"Delete\" />\n                        </button>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                );\n              }\n            })}\n          </div>\n\n          <div>\n            <h4 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" />\n              You already nailed it!\n            </h4>\n\n            <InputGroup className=\"mb-3 searchBar\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">&#128270;</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                onChange={this.handleSearchAch}\n                placeholder=\"Search for a success\"\n                aria-label=\"Search for a success\"\n                aria-describedby=\"basic-addon1\"\n              />\n            </InputGroup>\n\n            {this.state.filteredAchievements.filter((e) => e.completed === true)\n              .length === 0 ? (\n              <div>No Success yet... </div>\n            ) : (\n              \"\"\n            )}\n\n            {this.state.filteredAchievements.map((achievement, i) => {\n              let successDate = new Date(achievement.finishing_date);\n              let date = \"0\" + successDate.getDate();\n              let month = \"0\" + (successDate.getMonth() + 1);\n              successDate = date.slice(-2) + \"/\" + month.slice(-2);\n              if (achievement.completed) {\n                return (\n                  <div className=\"achiev-container\" key={\"success\" + i}>\n                    <Link\n                      className=\"date-title\"\n                      to={`/achievement/${achievement._id}`}\n                    >\n                      <p>{successDate}</p>\n                      <h6>{achievement.challenge.title}</h6>\n                    </Link>\n\n                    <SocialMedia achievementID={achievement._id} />\n                  </div>\n                );\n              }\n            })}\n\n            {this.state.userGroups.map((event, i) => {\n              let successDate = new Date(event.date);\n              let date = \"0\" + successDate.getDate();\n              let month = \"0\" + (successDate.getMonth() + 1);\n              successDate = date.slice(-2) + \"/\" + month.slice(-2);\n              if (event.finished) {\n                return (\n                  <div className=\"achiev-container\" key={\"success\" + i}>\n                    <Link\n                      className=\"date-title\"\n                      to={`/groups/${event._id}`}\n                    >\n                      <p>{successDate}</p>\n                      <h6>{event.name}</h6>\n                    </Link>\n\n                    <SocialMedia achievementID={event._id} />\n                  </div>\n                );\n              }\n            })}\n\n          </div>\n        </div>\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this goal from your list ?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button\n              variant=\"success\"\n              onClick={() => this.handleDelete(this.state.targetedAchievID)}\n            >\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default GoalsAndSuccess;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./styles/CreateChallForm.css\";\n\nfunction CreateChallForm(props) {\n  if (!props.loggedInUser || props.loggedInUser.points < 25000) {\n    return <Redirect to='/challenges'/>\n  }\n  return (\n    <div id=\"createChallenge\">\n      <h1 className=\"createTitle\">Create a Challenge</h1>\n      <div className=\"white-card\">\n        <Form onSubmit={props.onSubmit}>\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Title</Form.Label>\n            <Form.Control className=\"inputs\" name=\"title\" type=\"text\" placeholder=\"Title of the challenge\" required={true} />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Description</Form.Label>\n            <Form.Control className=\"inputs\" name=\"description\" placeholder=\"Describe your challenge\" as=\"textarea\" rows=\"3\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Why is it useful?</Form.Label>\n            <Form.Control className=\"inputs\" name=\"fact\" placeholder=\"Why is your challenge important for the planet?\" as=\"textarea\" rows=\"3\" />\n          </Form.Group>\n\n          <Form.Group className=\"input-container\">\n            <Form.Label className=\"titles\">Points</Form.Label>\n            <Form.Control className=\"inputs\" name=\"points\" type=\"number\" max=\"10000\" min=\"50\" placeholder=\"Max. 10 000\" /> \n          </Form.Group>\n\n          <Form.Text >\n          <div className=\"rulesContainer\">\n            <p><strong>Guideline:</strong></p>\n          </div>\n          <div className=\"summary\">\n            <p className=\"rules\"><strong>1.</strong> <u>Short term goals</u>: between 100 and 1000 points</p>\n            <p className=\"rules\"><strong>2.</strong> <u>Mid term goals</u>: between 1000 and 10000 points</p>\n            <p className=\"rules\"><strong>3.</strong> <u>Long term goals</u>: 10000+ points</p>\n          </div>\n           \n            <p className=\"rules\"><strong>*</strong> As we want to encourage users to achieve short to mid term goals, <strong>we are capping the points at 10 000</strong>.</p>\n          </Form.Text>\n\n          <Button className=\"createBtn\" variant=\"primary\" type=\"submit\">\n          <img className=\"imageBtn1\" src=\"/images/plant02.png\" alt=\"o\"  />\n            Create Challenge\n          <img className=\"imageBtn2\" src=\"/images/plant.png\" alt=\"o\"  />\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateChallForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\nimport { withRouter } from \"react-router-dom\";\nimport \"./styles/AddToMyGoals.css\";\n\n\nclass AddToMyGoals extends Component {\n  state = {\n    loggedInUser: null,\n    userGoalsIds: [],\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    if (!this.state.loggedInUser) {\n      axios\n        .get(`${API_URL}/auth/user`, { withCredentials: true })\n        .then((res) => {\n          axios\n            .get(`${API_URL}/users/${res.data._id}`, { withCredentials: true })\n            .then((user) => {\n              axios\n                .get(`${API_URL}/achievements/user/${user.data._id}`, {\n                  withCredentials: true,\n                })\n                .then((achiev) => {\n                  let goalsFull = achiev.data.filter((e) => {\n                    return e.completed === false;\n                  });\n                  let goals = goalsFull.map((e) => e.challenge._id);\n                  this.setState({\n                    loggedInUser: user.data,\n                    userGoalsIds: goals,\n                  });\n                });\n            });\n        });\n    }\n  }\n\n\n  handleClick = () => {\n    if (this.state.userGoalsIds.includes(this.props.challenge)) {\n      this.setState({\n        showPopUp: true\n      });\n    } else {\n      axios\n        .post(\n          `${API_URL}/achievements/create/${this.props.challenge}/${this.state.loggedInUser._id}`,\n          {},\n          { withCredentials: true }\n        )\n        .then((res) => {\n          this.props.onSuccess(\"Challenge added to your Goals!\")\n        });\n    }\n  };\n\n  handleClose = (component) => {\n      this.setState({\n        showPopUp:false\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <Button className=\"addThisGoalBtn\" onClick={this.handleClick}>\n          <img src=\"/images/valid.png\" alt=\"Valid\" />\n          {\n            this.props.fromOther ? <>I want to do it too!</> : <>Add this Goal!</>\n          }\n        </Button>\n        <Modal show={this.state.showPopUp} onHide={() => this.handleClose('modal')}>\n          <Modal.Header closeButton>\n            <Modal.Title>Not yet!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            You already have this challenge in your on going Goals. Finish it before to do it again. &#x1F609;{\" \"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={() => this.handleClose('modal')}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default withRouter(AddToMyGoals);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport AddToMyGoals from \"./AddToMyGoals\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport SocialMedia from \"./SocialMedia\"\nimport Loading from \"./Loading\"\nimport \"./styles/AchievementDetails.css\";\n\nclass AchievementDetails extends Component {\n  state = {\n    achievement: null,\n    showDeletePopup: false,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.achievementID;\n    axios.get(`${API_URL}/achievements/${id}`, {withCredentials: true}).then((res) => {\n      this.setState({\n        achievement: res.data,\n      });\n    });\n  }\n\n  handleClick = () => {\n    this.setState({\n      showDeletePopup: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showDeletePopup:false\n    })\n  }\n\n  handleDelete = () => {\n    axios.delete(`${API_URL}/achievements/${this.state.achievement._id}`, {withCredentials: true})\n      .then((res) => {\n        this.props.history.push('/goals-success')\n      })\n  };\n\n  render() {\n    if (!this.state.achievement) {\n      return <Loading/>;\n    }\n    const {challenge, completed, user, image, finishing_date, starting_date, _id} = this.state.achievement\n    let startDate = new Date(starting_date);\n    let start = startDate.toLocaleDateString();\n    let finishDate = new Date(finishing_date);\n    let finish = finishDate.toLocaleDateString();\n    return (\n      <div id=\"achievDetails\">\n        <div className=\"white-card\">\n            {\n              !this.props.loggedInUser || this.props.loggedInUser._id !== user._id ? <Link to={`/user/${user._id}`} className=\"back-link\">{user.username}'s profile</Link> : \"\"\n            }\n          <div className=\"header\">\n            <h4>{challenge.title}</h4>\n            <p>{challenge.points} points</p>\n          </div>\n\n          {!this.props.loggedInUser ? \"\" : (completed && this.props.loggedInUser._id === user._id) ? <div className=\"sharing-logos\"><SocialMedia achievementID={_id}  /></div> : completed ? <div className=\"sharing-logos\"><AddToMyGoals challenge={challenge._id} fromOther /></div> : \"\"}\n\n          {!completed ? (\n            <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\" /> How to complete this\n              goal?\n            </h5>\n          ) : this.props.loggedInUser && this.props.loggedInUser._id === user._id ? (\n            <h5 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" /> The task you fulfilled :{\" \"}\n            </h5>\n          ) : (\n            <h5 className=\"subtitle\">\n              <img src=\"/images/plant02.png\" alt=\"o\" /> The task {user.username} fulfilled :{\" \"}\n            </h5>\n          ) }\n\n          <p>{challenge.description}</p>\n          <h5 className=\"subtitle\">\n            <img src=\"/images/plant02.png\" alt=\"o\" /> Why is it helpful?\n          </h5>\n          <p>{challenge.fact}</p>\n          <p className=\"date\">\n            <strong>Started :</strong> {start}\n          </p>\n          {completed ? (\n            <>\n              <p className=\"date\">\n                <strong>Finished :</strong> {finish}\n              </p>\n              <img\n                className=\"d-block achiev-image\"\n                src={image}\n                alt=\"Uplaoded\"\n              />\n            </>\n          ) : (\n            <div className=\"edit-btn\">\n              <Link to={`/goals-edit/${_id}`}>\n                <img src=\"/images/valid.png\" alt=\"Valid\" /> Complete it\n              </Link>\n              <button onClick={this.handleClick}>\n                <img src=\"/images/delete.png\" alt=\"Delete\" /> Delete it !\n              </button>\n            </div>\n          )}\n        </div>\n        <Modal show={this.state.showDeletePopup} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Are you sure you want to delete this goal from your list ?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button\n              variant=\"success\"\n              onClick={this.handleDelete}\n            >\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AchievementDetails;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport AddToMyGoals from \"./AddToMyGoals\";\nimport Loading from \"./Loading\"\nimport \"./styles/ChallengeDetails.css\";\n\nclass ChallengeDetails extends Component {\n  state = {\n    challenge: null,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.challengeID;\n    axios.get(`${API_URL}/challenges/${id}`, { withCredentials: true, })\n      .then((res) => {\n        this.setState({\n          challenge: res.data,\n        });\n      });\n  }\n\n  render() {\n    if (!this.state.challenge) {\n      return <Loading/>;\n    }\n    return (\n      <div id=\"challengeDetails\">\n        <div className=\"white-card\">\n          <a href=\"/challenges\"><img src=\"/images/back.png\" alt=\"Back\" className=\"back-btn\"/></a>\n          <div className=\"header\">\n            <h4 className=\"challengeDetailTitle\">{this.state.challenge.title}</h4>\n            <p>{this.state.challenge.points} points</p>\n          </div>\n          <h5 className=\"subtitle\">\n          <img src=\"/images/plant02.png\" alt=\"o\" />How to complete this goal?\n          </h5>\n          <p>{this.state.challenge.description}</p>\n          <h5 className=\"subtitle\">\n          <img src=\"/images/plant02.png\" alt=\"o\"  />Why is it helpful?\n          </h5>\n          <p>{this.state.challenge.fact}</p>\n\n          {\n            this.props.loggedInUser ? (\n              <div className=\"addGoalBtn\">\n                <AddToMyGoals challenge={this.state.challenge._id} onSuccess={this.props.onSuccess}/>\n              </div>\n            ) : \"\"\n          }\n      \n        </div>       \n      </div>\n    );\n  }\n}\n\nexport default ChallengeDetails;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ExperienceBar from \"./ExperienceBar\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Loading from \"./Loading\"\nimport \"./styles/OtherProfile.css\";\n\nexport default class OtherProfile extends Component {\n  state = {\n    user: null,\n    userAchievements: [],\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.userID;\n    axios\n      .get(`${API_URL}/users/${id}`, { withCredentials: true })\n      .then((user) => {\n        console.log(user.data);\n        axios\n          .get(`${API_URL}/achievements/user/${user.data._id}`, {\n            withCredentials: true,\n          })\n          .then((res) => {\n            this.setState({\n              user: user.data,\n              userAchievements: res.data,\n            });\n          });\n      });\n  }\n\n  render() {\n    if (!this.state.userAchievements || !this.state.user) {\n      return <Loading/>\n    }\n\n    return (\n      <div id=\"otherProfile\">\n        <div className=\"white-card\">\n          <div className=\"header\">\n            <img\n              src={this.state.user.image}\n              alt=\"Avatar\"\n              style={{ width: \"100px\" }}\n            />\n            <div>\n              <div className=\"users-info\">\n                <h5>{this.state.user.username}</h5>\n              </div>\n              <div className=\"points-info\">\n                <p className=\"total-rank\">{this.state.user.rank}</p>\n                <p className=\"total-points\">\n                  - {this.state.user.points} points\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <ExperienceBar loggedInUser={this.state.user} />\n\n          <div className=\"user-success\">\n            <h4>\n            <img src=\"/images/plant02.png\" alt=\"o\" />\n            Success</h4>\n            {this.state.userAchievements.map((achievement, i) => {\n              if (achievement.completed) {\n                let finishDate = new Date(achievement.finishing_date)\n                let date = finishDate.getDate()\n                let month = finishDate.getMonth() + 1\n                let finish = date + \"/\" + month\n                return (\n                  <div className=\"one-success\" key={\"success\" + i}>\n                    <Link to={`/achievement/${achievement._id}`}>\n                        <p>{finish}</p>\n                        <h6>{achievement.challenge.title}</h6>\n                    </Link>\n                  </div>\n                );\n              }\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Loading from \"./Loading\"\nimport \"./styles/GoalsEdit.css\";\n\nclass GoalsEdit extends Component {\n  state = {\n    achievement: null,\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.achievementID;\n    console.log(id);\n\n    axios\n      .get(`${API_URL}/achievements/${id}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          achievement: res.data,\n        });\n      });\n  }\n\n  handleImageChange = (e) => {\n    let uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.currentTarget.files[0]);\n\n    axios\n      .post(`${API_URL}/upload`, uploadData, { withCredentials: true })\n      .then((response) => {\n        let updatedAchievement = JSON.parse(\n          JSON.stringify(this.state.achievement)\n        );\n        updatedAchievement.image = response.data.image;\n        this.setState({\n          achievement: updatedAchievement,\n        });\n      });\n  };\n\n  handleDateChange = (e) => {\n    let updatedAchievement = JSON.parse(JSON.stringify(this.state.achievement));\n    updatedAchievement.finishing_date = e.currentTarget.value;\n      this.setState({\n        achievement: updatedAchievement,\n      });\n  }\n\n  handleClick = () => {\n    this.setState({\n      showPopUp: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showPopUp: false\n    })\n  }\n\n  fixTodayDate = () => {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth()+1;\n    let yyyy = today.getFullYear();\n    if(dd<10)dd='0'+dd\n    if(mm<10)mm='0'+mm\n    return yyyy+'-'+mm+'-'+dd;\n  }\n\n  render() {\n    if (!this.state.achievement) {\n      return <Loading/>\n    }\n\n    const { image, challenge } = this.state.achievement;\n\n    return (\n      <div id=\"editGoal\">\n        <h3 className=\"title\">Complete this Goal</h3>\n        <div className=\"white-card\">\n          <div className=\"header\">\n            <h4>{challenge.title}</h4>\n            <p>{challenge.points} points</p>\n          </div>\n\n          <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\"  /> How to complete this goal?\n            </h5>\n          <p>{challenge.description}</p>\n          <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\"  /> Before you valid this goal\n            </h5>\n          <label htmlFor=\"image\">1. Download a picture :</label>\n          {image ? <img src={image} alt=\"Avatar\" /> : \"\"}\n          <input\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/png, image/jpeg\"\n            onChange={this.handleImageChange}\n          ></input>\n          <label htmlFor=\"finishing_date\">2. When did you finish this task ?</label>\n          <input name=\"finishing_date\" type=\"date\" onChange={this.handleDateChange}  defaultValue={this.fixTodayDate()} max={this.fixTodayDate()}/>\n          <div className=\"edit-btn\">\n              <button onClick={this.handleClick}\n            type=\"submit\">\n                <img src=\"/images/valid.png\" alt=\"Valid\" /> Completed !\n              </button>\n          </div>\n        </div>\n        <Modal show={this.state.showPopUp} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            If you complete this goal, it will directly go to your success and you won't be able to edit it again. Are you sure you are ready to complete this goal?\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button variant=\"success\" onClick={() => this.props.onUpdate(this.state.achievement)}>\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n\nexport default GoalsEdit;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"./Loading\"\nimport \"./styles/Groups.css\";\n\nclass Groups extends Component {\n  state = {\n    groups: [],\n    filteredGroups: [],\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}/groups`, { withCredentials: true })\n      .then((response) => {\n        let futureEvents = response.data.filter(\n          (e) => new Date(e.date) >= new Date(Date.now())\n        );\n        this.setState({\n          groups: futureEvents,\n          filteredGroups: futureEvents,\n        });\n      });\n  }\n\n  handleSearch = (e) => {\n    let search = e.currentTarget.value.toLowerCase();\n    let cloneGroups = this.state.groups.filter((item) => {\n      return (\n        item.name.toLowerCase().includes(search) ||\n        item.description.toLowerCase().includes(search) ||\n        item.location.toLowerCase().includes(search)\n      );\n    });\n    this.setState({\n        filteredGroups: cloneGroups,\n    });\n};\n\n  handleCreateClick = () => {\n    if (!this.props.loggedInUser || this.props.loggedInUser.points < 10000) {\n      this.setState({\n        showPopUp: true,\n      });\n    } else this.props.history.push(\"/groups/create\");\n  };\n\n  handleClose = () => {\n    this.setState({\n      showPopUp: false,\n    });\n  };\n\n  handleSort = (e) => {\n    e.preventDefault()\n    let cloneGroups = JSON.parse(JSON.stringify(this.state.filteredGroups)) \n    e.currentTarget.value ===\"low\" ? \n    cloneGroups.sort((a, b) => {\n        if(b.date < a.date) {\n            return -1\n        } else if (b.date > a.date) {\n            return 1\n        } else {\n            return 0\n        }\n    })\n     :\n    cloneGroups.sort((a, b) => {\n        if(a.date < b.date) {\n            return -1\n        } else if (a.date > b.date) {\n            return 1\n        } else {\n            return 0\n        }\n    })\n\n    this.setState({\n        filteredGroups: cloneGroups,\n    })\n}\n\n  render() {\n    if (!this.state.groups || !this.props.loggedInUser) {\n      return <Loading/>}\n    \n    return (\n      <div id=\"groups\">\n        <h3 className=\"groupsTitle\">EcoHero Events</h3>\n        <div className=\"search-part\">\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">&#128270;</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              onChange={this.handleSearch}\n              placeholder=\"Search for an event\"\n              aria-label=\"Search for an event\"\n              aria-describedby=\"basic-addon1\"\n            />\n          </InputGroup>\n\n          <Form.Control\n            onChange={this.handleSort}\n            as=\"select\"\n            defaultValue=\"Sort by...\"\n          >\n            <option>Sort by...</option>\n            <option value=\"high\">Date - now to future </option>\n            <option value=\"low\">Date - future to now</option>\n          </Form.Control>\n          {this.props.loggedInUser ? (\n            <Button className=\"bouncy\" onClick={this.handleCreateClick}>\n              <img className=\"plantL\" src=\"/images/plant02.png\" alt=\"o\" />\n              Create an event\n            </Button>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <h4 className=\"listOfEvents\">List of events</h4>\n        <div className=\"one-success-container\">\n          {this.state.filteredGroups.map((group, i) => {\n            let fullDate = new Date(group.date);\n            let date = \"0\" + fullDate.getDate();\n            let month = \"0\" + (fullDate.getMonth() + 1);\n            fullDate = date.slice(-2) + \"/\" + month.slice(-2);\n            return (\n              <Link className=\"link\" to={`/groups/${group._id}`}>\n                <div className=\"one-success\" key={\"group\" + i}>\n                  <div className=\"event-date\">{fullDate}</div>\n                  <div className=\"event-name\">{group.name}</div>\n                  <div className=\"event-location\">{group.location}</div>\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n        <Modal show={this.state.showPopUp} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Not yet!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Achieve Chill Hero rank in order to do that &#x1F609;{\" \"}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"success\" onClick={this.handleClose}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Groups;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Loading from \"./Loading\"\nimport \"./styles/GroupDetails.css\";\n\n\n\n\nclass GroupDetails extends Component {\n    state = {\n      groupData: null,\n      membersID: [],\n      showPopUp: false\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.groupID;\n        axios.get(`${API_URL}/groups/${id}`, {withCredentials: true})\n        .then((res) => {\n            let members = [] \n            res.data.members.map(e => members.push(e._id))\n            this.setState({\n            groupData: res.data,\n            membersID: members,\n          });\n        });\n      }\n\n\n    handleJoin = () => {\n      let newMember = this.props.loggedInUser;\n      let cloneGroup = JSON.parse(JSON.stringify(this.state.groupData))\n      let membersList = [...cloneGroup.members]\n      membersList.push(newMember)\n      cloneGroup.members = membersList\n      let membersID = [] \n      cloneGroup.members.map(e => membersID.push(e._id))\n      axios.patch(`${API_URL}/groups/${this.state.groupData._id}`, {membersList: membersList}, {withCredentials: true})\n        .then((response) => {\n          this.setState({\n            groupData: cloneGroup,\n            membersID: membersID\n          })\n        })\n      \n    }\n\n    handleValidate = () => {\n      let todaysDate = new Date(Date.now())\n      todaysDate.setHours(0)\n      if(todaysDate < new Date(this.state.groupData.date)){\n        this.setState({\n          showPopUp: true\n        })\n      } else {\n        this.props.history.push(`/event-edit/${this.state.groupData._id}`)\n      }\n    }\n\n    handleClose = () => {\n      this.setState({\n        showPopUp: false\n      })\n    }\n\n    handleLeave = () => {\n      let memberLeaving = this.props.loggedInUser;\n      let cloneGroup = JSON.parse(JSON.stringify(this.state.groupData))\n      let membersList = []\n      cloneGroup.members.map(member => {\n        if(member._id !== memberLeaving._id){\n          membersList.push(member)\n        }\n      })\n      cloneGroup.members = membersList\n      let membersID = [] \n      cloneGroup.members.map(e => membersID.push(e._id))\n      axios.patch(`${API_URL}/groups/${this.state.groupData._id}`, {membersList: membersList}, {withCredentials: true})\n        .then((response) => {\n          this.setState({\n            groupData: cloneGroup,\n            membersID: membersID\n          })\n        })\n    }\n\n\n    render() {\n        if (!this.state.groupData) {\n            return <Loading/>\n        }\n\n        const {name, description, location, date, members, challenge} = this.state.groupData\n\n        let fullDate = new Date(date);\n        let daydate = '0' + fullDate.getDate();\n        let month = '0' + (fullDate.getMonth() + 1);\n        let year = fullDate.getFullYear()\n        fullDate = daydate.slice(-2) + \"/\" + month.slice(-2) + \"/\" + year;\n\n        return (\n            <div id=\"groupDetails\">\n              <h3 className=\"title\">{name}</h3>\n              <div className=\"white-card\">\n                <h5 className=\"subtitle\">Description</h5>\n                <p>{description}</p>\n\n                <h5 className=\"subtitle\">What is it about?</h5>\n                <p>{challenge.description}</p>\n\n                <h5 className=\"subtitle\">Why is it useful?</h5>\n                <p>{challenge.fact}</p>\n\n                <h5 className=\"subtitle\">How many points will I get?</h5>\n                <p>Each participant will earn {challenge.points} points</p>\n\n                <h5 className=\"subtitle\">Location</h5>\n                <p>{location}</p>\n\n                <h5 className=\"subtitle\">Date</h5>\n                <p>{fullDate}</p>\n\n                <h5 className=\"subtitle\">Participants</h5>\n                {\n                  members.map((member, i) => {\n                    return (\n                      <div key={\"member\" + i}>\n                      <Link to={`/user/${member._id}`} > \n                      - {member.username} {i === 0? <span> (creator)</span> : \"\"} \n                      </Link>\n                      </div>\n                    )\n                  })\n                }\n                \n                { \n                  this.state.membersID.includes(this.props.loggedInUser._id) ? \n                  (this.state.membersID[0] === this.props.loggedInUser._id ? \n                    <button onClick={this.handleValidate}>Valid the event</button> \n                    : <button onClick={this.handleLeave}>Leave the event</button> )\n                  : (\n                    <div className=\"edit-btn\">\n                    <button onClick={this.handleJoin}><img src=\"/images/valid.png\" alt=\"Valid\" /> Join the event</button>\n                    </div>\n                  )\n                } \n              </div>\n              <Modal show={this.state.showPopUp} onHide={this.handleClose} >\n                <Modal.Header closeButton>\n                  <Modal.Title>Not Yet!</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  You can't validate an event before it happens!\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"success\" onClick={this.handleClose}>\n                    Ok, got it\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n            \n        )\n    }\n}\n\n\nexport default GroupDetails\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport { Redirect } from \"react-router-dom\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from 'react-bootstrap/Card';\nimport \"./styles/GroupCreate.css\";\n\n\nclass GroupCreate extends Component {\n  state = {\n    groupChallenges: [],\n    isSelected: null,\n    showModal: false,\n    modalMessage : \"\",\n    modalHeader: \"\",\n    modalButtonType: \"\",\n    modalButtonStyle: {}\n  };\n\n  componentDidMount() {\n    axios.get(`${API_URL}/challenges`).then((response) => {\n      let groupChallenges = response.data.filter((e) => e.status === \"group\");\n      this.setState({\n        groupChallenges: groupChallenges,\n      });\n    });\n  }\n\n  handleChallengeSelect = (challengeID) => {\n    this.setState({\n      isSelected: challengeID\n    })\n  }\n\n  handleCreateGroup = (e) => {\n    e.preventDefault();\n\n    let todaysDate = new Date(Date.now())\n    todaysDate.setHours(0)\n    console.log(\"are we creating?\")\n\n   \n    const {name, description, location, date} = e.currentTarget;\n    if(name.value === \"\"){\n      this.setState({\n        showModal: true,\n        modalMessage : \"Please enter a name for your event\",\n        modalHeader: \"Oops\",\n        modalButtonType: \"success\",\n      })\n    } else if (this.state.isSelected === null) {\n      this.setState({\n        showModal: true,\n        modalMessage : \"Please choose a challenge for your event\",\n        modalHeader: \"Oops\",\n        modalButtonType: \"success\",\n      })\n    }  else if (location.value === \"\"){\n      this.setState({\n        showModal: true,\n        modalMessage : \"Please choose a location for your event\",\n        modalHeader: \"Oops\",\n        modalButtonType: \"success\",\n      })\n    } else if (date.value === \"\"){\n      this.setState({\n        showModal: true,\n        modalMessage : \"Please choose a date for your event\",\n        modalHeader: \"Oops\",\n        modalButtonType: \"success\",\n      })\n      \n      } else if (new Date(date.value) < todaysDate) {\n        \n        this.setState({\n          showModal: true,\n          modalMessage : \"Your event can't be in the past!\",\n          modalHeader: \"Oops\",\n          modalButtonType: \"success\",\n        })\n        } else {\n    axios.post(`${API_URL}/groups/create`, {\n      name: name.value,\n      description: description.value,\n      location: location.value,\n      date: date.value,\n      user: this.props.loggedInUser,\n      challenge: this.state.isSelected\n    }, { withCredentials: true })\n    .then((group) => {\n          this.props.history.push(\"/groups\")\n      })\n    }\n  }\n\n\n  handleModalClose = () => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  fixTodayDate = () => {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth()+1;\n    let yyyy = today.getFullYear();\n    if(dd<10)dd='0'+dd\n    if(mm<10)mm='0'+mm\n    return yyyy+'-'+mm+'-'+dd;\n  }\n\n  render() {\n    if (!this.props.loggedInUser || this.props.loggedInUser.points < 10000) {\n      return <Redirect to=\"/groups\" />\n    }\n\n    return (\n      <div id=\"createGroup\">\n        <h1 className=\"createTitle\">Create an Event</h1>\n        <div className=\"white-card\">\n          <Form onSubmit={this.handleCreateGroup}>\n            <Form.Group className=\"input-container\">\n              <Form.Label className=\"titles\">Name of the event</Form.Label>\n              <Form.Control\n                className=\"inputs\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name of the event\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"input-container\">\n              <Form.Label className=\"titles\">Description</Form.Label>\n              <Form.Control\n                className=\"inputs\"\n                name=\"description\"\n                placeholder=\"Describe your event\"\n                as=\"textarea\"\n                rows=\"3\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"input-container\">\n              <Form.Label className=\"titles\"> Select a challenge for your event </Form.Label>\n              <Accordion>\n              {this.state.groupChallenges.map((challenge, i) => {\n                return (\n                  <Card className=\"challengeContainer\">\n                    <Card.Header>\n                      <Accordion.Toggle className=\"accordion-header\" as={Card.Header} variant=\"link\" eventKey={i+1}>\n                      <Form.Check onClick={() => this.handleChallengeSelect(challenge._id)} key={\"challenge\" + i} \n                        type=\"radio\"\n                        aria-label={challenge._id}\n                        name=\"challengeSelector\"\n                        id={challenge._id}>\n                      </Form.Check>\n                      <div>{challenge.title}</div>\n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey={i+1}>\n                      <Card.Body  >\n                      <div className=\"titles\">Description:</div>\n                      <p>{challenge.description}</p>\n                      <div className=\"titles\">Why is it useful?</div>\n                      <p>{challenge.fact}</p>\n                      <div className=\"titles\">How many points will I get?</div>\n                      <p>Every participant will earn {challenge.points} points</p>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                );\n              })}\n              </Accordion>\n            </Form.Group>\n\n            <Form.Group className=\"input-container\">\n              <Form.Label className=\"titles\">Location</Form.Label>\n              <Form.Control\n                className=\"inputs\"\n                name=\"location\"\n                type=\"text\"\n                placeholder=\"Location of the event\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group className=\"input-container\">\n              <Form.Label className=\"titles\">Date</Form.Label>\n              <Form.Control className=\"inputs\" name=\"date\" type=\"date\" required min={this.fixTodayDate()}/> \n            </Form.Group>\n\n            <Button className=\"createBtn\" variant=\"primary\" type=\"submit\">\n              <img className=\"imageBtn1\" src=\"/images/plant02.png\" alt=\"o\" />\n              Create an event\n              <img className=\"imageBtn2\" src=\"/images/plant.png\" alt=\"o\" />\n            </Button>\n          </Form>\n        </div>\n\n        <Modal show={this.state.showModal} onHide={this.handleModalClose} >\n          <Modal.Header closeButton style={this.state.modalButtonStyle}>\n            <Modal.Title>{this.state.modalHeader}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {this.state.modalMessage}\n          </Modal.Body>\n          <Modal.Footer style={this.state.modalButtonStyle}>\n            <Button variant={this.state.modalButtonType} onClick={this.handleModalClose}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default GroupCreate;\n","import React, { Component } from 'react'\nimport \"./styles/NotFoundPage.css\";\n\n\n\nclass NotFoundPage extends Component {\n    \n    render() {\n\n        return (\n            <div>\n                <section className=\"page_404\">\n                    <div className=\"container\">\n                        <div className=\"row\">\t\n                            <div className=\"col-sm-12 \">\n                                <div className=\"col-sm-10 col-sm-offset-1  text-center\">\n                                    <div className=\"four_zero_four_bg\">\n                                        <h1 className=\"text-center \">404</h1>\n                                    </div>\n                                    \n                                    <div className=\"contant_box_404\">\n                                        <h3 className=\"h2\">\n                                        Look like you're lost\n                                        </h3>\n                                    <p>the page you are looking for is not avaible!</p>\n                                    <a href=\"/\" className=\"link_404\">Go to Home</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        )\n    }\n}\n\n\nexport default NotFoundPage\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport \"./styles/GroupEdit.css\";\n\nclass GroupEdit extends Component {\n  state = {\n    event: null,\n    showPopUp: false,\n  };\n\n  componentDidMount() {\n    let id = this.props.match.params.eventID;\n    console.log(id);\n    axios.get(`${API_URL}/groups/${id}`, {withCredentials: true,})\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          event: res.data,\n        });\n      });\n  }\n\n  handleImageChange = (e) => {\n    let uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.currentTarget.files[0]);\n\n    axios\n      .post(`${API_URL}/upload`, uploadData, { withCredentials: true })\n      .then((response) => {\n        let updatedEvent = JSON.parse(\n          JSON.stringify(this.state.event)\n        );\n        updatedEvent.image = response.data.image;\n        this.setState({\n          event: updatedEvent,\n        });\n      });\n  };\n\n  handleMember = (e) => {\n    console.log(e.currentTarget)\n  }\n\n  handleClick = () => {\n    this.setState({\n      showPopUp: true\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showPopUp: false\n    })\n  }\n\n  render() {\n    if (!this.state.event) {\n      return (\n        <p>\n          Loading... If you're not login yet, please{\" \"}\n          <Link to=\"/login\">click on this link</Link>\n        </p>\n      );\n    }\n\n    const { name, challenge, members, date, image } = this.state.event;\n\n    return (\n      <div id=\"editEvent\">\n        <h3 className=\"title\">Validate this Event</h3>\n        <div className=\"white-card\">\n          <div className=\"header\">\n            <h4>{name}</h4>\n            <p>{date}</p>\n          </div>\n\n          <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\"  /> How to validate this event?\n            </h5>\n          <p>{challenge.description}</p>\n          <h5 className=\"subtitle\">\n              {\" \"}\n              <img src=\"/images/plant02.png\" alt=\"o\"  /> Before you valid this event\n            </h5>\n          <label htmlFor=\"image\">1. Download a picture :</label>\n          {image ? <img src={image} alt=\"Avatar\" /> : \"\"}\n          <input\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/png, image/jpeg\"\n            onChange={this.handleImageChange}\n          ></input>\n          <label htmlFor=\"finishing_date\">2. Who participate to this event ?</label>\n          {\n            this.state.event.members.map((member, i) => {\n              return (\n                <div key={\"member\" + i} className=\"check-box\">\n                  <input onChange={this.handleMember} type=\"checkbox\" id={member.username} name={member.username} value={member._id} />\n                  <label for={member.username}>{member.username}</label>\n                </div>\n              )\n            })\n          }\n          \n          <div className=\"edit-btn\">\n              <button onClick={this.handleClick}\n            type=\"submit\">\n                <img src=\"/images/valid.png\" alt=\"Valid\" /> Validate !\n              </button>\n          </div>\n        </div>\n        <Modal show={this.state.showPopUp} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Are you sure?</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            If you valid this event, it will directly go to every participants success and you won't be able to edit it again. Are you sure you are ready to complete this event?\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.handleClose}>\n              No, not yet.\n            </Button>\n            <Button variant=\"success\" onClick={() => this.props.onUpdate(this.state.event)}>\n              Yes, I'm sure!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\n\nexport default GroupEdit;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { API_URL } from \"./config\";\nimport axios from \"axios\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n//Components\nimport MyNavBar from \"./components/MyNavBar\";\nimport SignUp from \"./components/SignUp\";\nimport LogIn from \"./components/LogIn\";\nimport Ranks from \"./components/Ranks\";\nimport Leaderboard from \"./components/Leaderboard\";\nimport Home from \"./components/Home\";\nimport MyProfile from \"./components/MyProfile\";\nimport HeroHome from \"./components/HeroHome\";\nimport Dashboard from \"./components/Dashboard\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport ChallengesList from \"./components/ChallengesList\";\nimport GoalsAndSuccess from \"./components/GoalsAndSuccess\";\nimport CreateChallForm from \"./components/CreateChallForm\";\nimport AchievementDetails from \"./components/AchievementDetails\";\nimport ChallengeDetails from \"./components/ChallengeDetails\";\nimport OtherProfile from \"./components/OtherProfile\";\nimport GoalsEdit from \"./components/GoalsEdit\";\nimport Groups from \"./components/Groups\"\nimport GroupDetails from \"./components/GroupDetails\"\nimport GroupCreate from \"./components/GroupCreate\"\nimport NotFoundPage from \"./components/NotFoundPage\"\nimport GroupEdit from \"./components/GroupEdit\";\nimport Loading from \"./components/Loading\"\n\n\nclass App extends React.Component {\n  state = {\n    loggedInUser: null,\n    showGeneralModal: false,\n    modalMessage : \"\",\n    modalHeader: \"\",\n    modalButtonType: \"\",\n    modalButtonStyle: {}\n  };\n\n  componentDidMount() {\n    if (!this.state.loggedInUser) {\n      axios\n        .get(`${API_URL}/auth/user`, { withCredentials: true })\n        .then((res) => {\n          axios\n            .get(`${API_URL}/users/${res.data._id}`, { withCredentials: true })\n            .then((user) => {\n              this.setState({\n                loggedInUser: user.data,\n              });\n            });\n        });\n    }\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault();\n    const { username, email, password } = e.currentTarget;\n    axios\n      .post(\n        `${API_URL}/auth/signup`,\n        {\n          username: username.value,\n          email: email.value,\n          password: password.value,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        console.log(res.data);\n        this.setState(\n          {\n            loggedInUser: res.data,\n          },\n          () => {\n            this.props.history.push(\"/hero-home\");\n          }\n        );\n      })\n      .catch((err) => {\n        const {errorMessage} = err.response.data\n        this.setState({\n          showGeneralModal: true,\n          modalMessage : errorMessage,\n          modalHeader: \"Oops!\",\n          modalButtonType: \"info\"\n        })\n      })\n  };\n\n  handleLogIn = (e) => {\n    e.preventDefault();\n    const { email, password } = e.currentTarget;\n    axios\n      .post(\n        `${API_URL}/auth/signin`,\n        {\n          email: email.value,\n          password: password.value,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        this.setState(\n          {\n            loggedInUser: res.data,\n          },\n          () => {\n            this.props.history.push(\"/hero-home\");\n          }\n        );\n      })\n      .catch((err) => {\n        const {errorMessage} = err.response.data\n        this.setState({\n          showGeneralModal: true,\n          modalMessage : errorMessage,\n          modalHeader: \"Oops!\",\n          modalButtonType: \"info\"\n        })\n      })\n  };\n\n  handleLogOut = () => {\n    axios\n      .post(`${API_URL}/auth/logout`, {}, { withCredentials: true })\n      .then(() => {\n        this.setState(\n          {\n            loggedInUser: null,\n          },\n          () => {\n            this.props.history.push(\"/\");\n          }\n        );\n      });\n  };\n\n  handleEdit = (updatedUser) => {\n    if (updatedUser.username === \"\"){\n      this.setState({\n        showGeneralModal: true,\n        modalMessage : \"Username can't be blank\",\n        modalHeader: \"Oops!\",\n        modalButtonType: \"info\"\n      })\n    } else if (updatedUser.email === \"\"){\n      this.setState({\n        showGeneralModal: true,\n        modalMessage : \"Email can't be blank\",\n        modalHeader: \"Oops!\",\n        modalButtonType: \"info\"\n      })\n    } else if (updatedUser.password === \"\"){\n      this.setState({\n        showGeneralModal: true,\n        modalMessage : \"Password can't be blank\",\n        modalHeader: \"Oops!\",\n        modalButtonType: \"info\"\n      })\n    } else {\n    let cloneUser = {\n      username: updatedUser.username,\n      email: updatedUser.email,\n      image: updatedUser.image,\n      password: updatedUser.password,\n    };\n    axios\n      .patch(\n        `${API_URL}/users/${this.state.loggedInUser._id}/edit`,\n        cloneUser,\n        { withCredentials: true }\n      )\n      .then((res) => {\n        console.log(updatedUser);\n        delete cloneUser.password;\n        cloneUser._id = res.data._id;\n        cloneUser.points = res.data.points;\n        cloneUser.rank = res.data.rank;\n        cloneUser.passwordHash = res.data.passwordHash;\n        this.setState(\n          {\n            loggedInUser: cloneUser,\n          },\n          () => {\n            this.props.history.push(\"/profile\");\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(err.response)\n        const {errorMessage} = err.response.data\n        let message\n        if(errorMessage.codeName === \"DuplicateKey\"){\n          if(Object.keys(errorMessage.keyPattern).includes(\"username\")){\n            message = \"This username already exists. Please select a new one.\"\n          } else if(Object.keys(errorMessage.keyPattern).includes(\"email\")){\n            message = \"This email is already in use. Please select a new one.\"\n          }\n        } else {\n          message = errorMessage\n        }\n        this.setState({\n          showGeneralModal: true,\n          modalMessage : message,\n          modalHeader: \"Oops!\",\n          modalButtonType: \"info\"\n        })\n      })\n    }\n  };\n\n  handleCreateChall = (e) => {\n    e.preventDefault();\n    const { title, description, points, fact } = e.currentTarget;\n    console.log(points)\n    if(title.value === \"\"){\n      this.setState({\n        showGeneralModal: true,\n        modalMessage : \"Please enter a title for your challenge\",\n        modalHeader: \"Oops!\",\n        modalButtonType: \"info\"\n      })\n    } else if (points.value === \"\" || points.value < 100 || points.value > 10000){\n      console.log(\"in the points if\")\n      this.setState({\n        showGeneralModal: true,\n        modalMessage : \"The points should be between 100 and 10.000\",\n        modalHeader: \"Oops!\",\n        modalButtonType: \"info\"\n      })\n    } else {\n    axios\n      .post(\n        `${API_URL}/challenges/create`,\n        {\n          title: title.value,\n          description: description.value,\n          points: points.value,\n          fact: fact.value\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        this.props.history.push(\"/challenges\");\n      })\n      .catch((err) => {\n        const {errors} = err.response.data.errorMessage\n        const problem = Object.keys(errors)[0]\n        this.setState({\n          showGeneralModal: true,\n          modalMessage : `Please add some ${problem} to your challenge`,\n          modalHeader: \"Oops!\",\n          modalButtonType: \"info\"\n        })\n      })\n    }\n  };\n\n  handleUpdateGoal = (updatedAchievement) => {\n    const { image, _id, finishing_date } = updatedAchievement;\n    if (new Date(finishing_date) > new Date(Date.now()))\n    {\n      this.setState({\n        showGeneralModal: true,\n        modalMessage : 'The achievement date should not be in the future',\n        modalHeader: \"Oops!\",\n        modalButtonType: \"success\"\n      })\n    } else {\n    let updatedSuccess = {\n      completed: true,\n      image: image,\n      finishing_date: finishing_date,\n    };\n    axios\n      .patch(`${API_URL}/achievements/${_id}`, updatedSuccess, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        let pointsToAdd = res.data.challenge.points;\n        let clonedUser = JSON.parse(JSON.stringify(this.state.loggedInUser));\n        let message = \"\"\n        let congratulations = false;\n        clonedUser.points += pointsToAdd;\n        let newRank = this.handleRank(clonedUser.points);\n        if (newRank === \"Big Hero\") clonedUser.points += 10000;\n        if (clonedUser.rank !== newRank) {\n          clonedUser.rank = newRank;\n          congratulations = true\n          let bonus = this.handleBonus(newRank)\n          message = `You're now a ${newRank}! \n          ${bonus}`\n        }\n        console.log(clonedUser);\n        axios\n          .patch(\n            `${API_URL}/users/${this.state.loggedInUser._id}/edit`,\n            clonedUser,\n            { withCredentials: true }\n          )\n          .then((response) => {\n            this.setState(\n              {\n                loggedInUser: clonedUser,\n                showGeneralModal: congratulations ? true : false,\n                modalMessage : message,\n                modalHeader: \"Congratulations!\",\n                modalButtonType: \"success\"\n              },\n              this.props.history.push(\"/hero-home\")\n            );\n          });\n      });\n    }\n  };\n\n  handleRank = (nbOfPoints) => {\n    if (nbOfPoints >= 100000) {\n      return \"Super Hero\";\n    } else if (nbOfPoints > 50000) {\n      return \"Big Hero\";\n    } else if (nbOfPoints > 25000) {\n      return \"Smart Hero\";\n    } else if (nbOfPoints > 10000) {\n      return \"Chill Hero\";\n    } else {\n      return \"New Hero\";\n    }\n  };\n\n  handleBonus = (rank) => {\n    switch (rank) {\n      case \"Chill Hero\":\n        return \"You can now CREATE EVENTS!\";\n      case \"Smart Hero\":\n        return \"You can now CREATE CHALLENGES!\";\n      case \"Big Hero\":\n        return \"You win 10.000 points bonus!\";\n      case \"Super Hero\":\n        return \"You deserve nice surprises! Check your emails, we will contact you soon ;)\"\n    }\n  };\n\n  handleUpdateEvent = (event) => {\n    const { image, _id, members } = event;\n    let updatedEvent = {\n      finished: true,\n      image: image,\n    };\n    axios.patch(`${API_URL}/groups/valid/${_id}`, updatedEvent, {\n        withCredentials: true,\n      })\n      .then((group) => {\n        let pointsToAdd = group.data.challenge.points;\n        console.log(group.data.challenge.points)\n        // Add points to every users\n        let message = \"\"\n        let congratulations = false;\n        let updatedActualUser;\n        members.forEach(user => {\n          console.log(user)\n          let clonedUser = JSON.parse(JSON.stringify(user));\n          clonedUser.points += pointsToAdd;\n          let newRank = this.handleRank(clonedUser.points);\n          if (clonedUser.rank !== newRank) {\n            clonedUser.rank = newRank;\n            if (newRank === \"Big Hero\") clonedUser.points += 10000;\n            if(clonedUser._id === this.state.loggedInUser._id){\n              congratulations = true\n              let bonus = this.handleBonus(newRank)\n              message = `You're now a ${newRank}! \n              ${bonus}`\n            }\n          }\n          if(clonedUser._id === this.state.loggedInUser._id) updatedActualUser = clonedUser;\n          console.log(clonedUser);\n          axios.patch(\n              `${API_URL}/users/${clonedUser._id}/edit`,\n              clonedUser,\n              { withCredentials: true }\n            )\n            .then((response) => {\n              console.log(\"user updated\", response)\n            });\n        })\n        this.setState(\n          {\n            loggedInUser: updatedActualUser,\n            showGeneralModal: congratulations ? true : false,\n            modalMessage : message,\n            modalHeader: \"Congratulations!\",\n            modalButtonType: \"success\"\n          },\n          this.props.history.push(\"/hero-home\")\n        );\n      });\n    };\n\n  handleModalClose = () => {\n    this.setState({\n      showGeneralModal: false\n    })\n  }\n\n  hanldeNotification = (aMessage) => {\n    setTimeout(this.handleModalClose, 1500)\n    this.setState({\n      showGeneralModal: true,\n      modalMessage : aMessage,\n      modalHeader: \"Youpi!\",\n      modalButtonStyle: {display: \"none\"}\n    }, this.props.history.push(\"/goals-success\"))\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <MyNavBar onLogOut={this.handleLogOut} loggedInUser={this.state.loggedInUser} />\n        {this.state.loggedInUser ? <Dashboard /> : \"\"}\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signup\" render={(routeProps) => {\n              return <SignUp onSignUp={this.handleSignUp} {...routeProps} />;\n            }}/>\n          <Route path=\"/login\" render={(routeProps) => {\n              return <LogIn onLogIn={this.handleLogIn} {...routeProps} />;\n            }}/>\n          <Route path=\"/ranks\" component={Ranks} />\n          <Route path=\"/leaderboard\" component={Leaderboard} />\n          <Route exact path=\"/profile\" render={(routeProps) => {\n              return <MyProfile loggedInUser={this.state.loggedInUser} onDelete={this.handleLogOut} {...routeProps}/>\n            }}/>\n          <Route path=\"/profile/edit\" render={(routeProps) => {\n              return <EditProfileForm loggedInUser={this.state.loggedInUser} onEdit={this.handleEdit} {...routeProps} />\n            }}/>\n          <Route path=\"/hero-home\" render={(routeProps) => {\n              return <HeroHome loggedInUser={this.state.loggedInUser} {...routeProps}/>\n            }} />\n          <Route path=\"/goals-success\" render={(routeProps) => {\n              return <GoalsAndSuccess loggedInUser={this.state.loggedInUser} {...routeProps}/>\n            }}/>\n          <Route exact path=\"/challenges\" render={(routeProps) => {\n              return <ChallengesList loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>\n          <Route path=\"/challenges/create\" render={(routeProps) => {\n              return <CreateChallForm loggedInUser={this.state.loggedInUser} onSubmit={this.handleCreateChall} {...routeProps}/>\n            }}/>\n          <Route path=\"/achievement/:achievementID\" render={(routeProps) => {\n              return <AchievementDetails loggedInUser={this.state.loggedInUser} {...routeProps} />;\n            }}/>\n          <Route path=\"/challenge/:challengeID\" render={(routeProps) => {\n              return <ChallengeDetails loggedInUser={this.state.loggedInUser} {...routeProps} onSuccess={this.hanldeNotification} />;\n            }}/>\n          <Route path=\"/user/:userID\" render={(routeProps) => {\n              return <OtherProfile {...routeProps} />;\n            }}/>\n          <Route path=\"/goals-edit/:achievementID\" render={(routeProps) => {\n              return <GoalsEdit onUpdate={this.handleUpdateGoal} {...routeProps} />\n            }}/>\n          <Route exact path=\"/groups\" render={(routeProps) => {\n              return <Groups loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>  \n           <Route path=\"/groups/create\" render={(routeProps) => {\n              return <GroupCreate onSubmit={this.handleCreateGroup} loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>    \n          <Route path=\"/groups/:groupID\" render={(routeProps) => {\n              return <GroupDetails loggedInUser={this.state.loggedInUser} {...routeProps} />\n            }}/>  \n          <Route path=\"/event-edit/:eventID\" render={(routeProps) => {\n              return <GroupEdit loggedInUser={this.state.loggedInUser} onUpdate={this.handleUpdateEvent} {...routeProps} />\n            }}/>  \n          <Route path=\"*\" component={NotFoundPage} />    \n        </Switch>\n        <Modal show={this.state.showGeneralModal} onHide={this.handleModalClose} >\n          <Modal.Header closeButton style={this.state.modalButtonStyle}>\n            <Modal.Title>{this.state.modalHeader}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {this.state.modalMessage}\n          </Modal.Body>\n          <Modal.Footer style={this.state.modalButtonStyle}>\n            <Button variant={this.state.modalButtonType} onClick={this.handleModalClose}>\n              Ok, got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}